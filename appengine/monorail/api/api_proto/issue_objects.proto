// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is govered by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// This file defines protobufs for issues and related business
// objects, e.g., field values, comments, and attachments.

syntax = "proto3";

package monorail;

import "api/api_proto/common.proto";


// Next available tag: 8
message Approval {
  FieldRef field_ref = 1;
  repeated UserRef approver_refs = 2;
  ApprovalStatus status = 3;
  fixed32 set_on = 4;
  UserRef setter_ref = 5;
  repeated FieldValue subfield_values = 6;
  PhaseRef phase_ref = 7;
}


// Next available tag: 6
message ApprovalDelta {
  ApprovalStatus status = 1;
  repeated UserRef approver_refs_add = 2;
  repeated UserRef approver_refs_remove = 3;
  repeated FieldValue field_vals_add = 4;
  repeated FieldValue field_vals_remove = 5;
}


// Next available tag: 8
enum ApprovalStatus {
  NOT_SET = 0;
  NEEDS_REVIEW = 1;
  NA = 2;
  REVIEW_REQUESTED = 3;
  REVIEW_STARTED = 4;
  NEED_INFO = 5;
  APPROVED = 6;
  NOT_APPROVED = 7;
}


// Next available tag: 4
message FieldValue {
  FieldRef field_ref = 1;
  string value = 2;
  bool is_derived = 3;
}


// Next available tag: 23
message Issue {
  string project_name = 1;
  uint32 local_id = 2;
  string summary = 3;
  StatusRef status_ref = 4;
  UserRef owner_ref = 5;
  repeated UserRef cc_refs = 6;
  repeated LabelRef label_refs = 7;
  repeated ComponentRef component_refs = 8;
  repeated IssueRef blocked_on_issue_refs = 9;
  repeated IssueRef blocking_issue_refs = 10;
  IssueRef merged_into_issue_ref = 11;
  repeated FieldValue field_values = 12;
  bool is_deleted = 13;
  UserRef reporter_ref = 14;
  fixed32 opened_timestamp = 15;
  fixed32 closed_timestamp = 16;
  fixed32 modified_timestamp = 17;
  uint32 star_count = 18;
  bool is_spam = 19;
  uint32 attachment_count = 20;
  repeated Approval approval_values = 21;
  repeated PhaseDef phases = 22;
}


// Next available tag:3
message PhaseDef {
  PhaseRef phase_ref = 1;
  uint32 rank = 2;
}


// Next available tag:2
message PhaseRef {
  string phase_name = 1;
}