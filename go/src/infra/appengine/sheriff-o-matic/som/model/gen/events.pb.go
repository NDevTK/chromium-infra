// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/sheriff-o-matic/som/model/gen/events.proto

/*
Package gen is a generated protocol buffer package.

It is generated from these files:
	infra/appengine/sheriff-o-matic/som/model/gen/events.proto

It has these top-level messages:
	SOMAlertsEvent
	SOMAnnotationEvent
*/
package gen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AlertType is the type of alert, from AlertType constants in
// infra/monitoring/messages/alerts.go. Until those constants are replaced
// in the analyzer code with these enum values, this list will have to be
// manually kept in sync.
type SOMAlertsEvent_Alert_AlertType int32

const (
	// STALE_MASTER indicates that we have no recent updates from the master.
	SOMAlertsEvent_Alert_STALE_MASTER SOMAlertsEvent_Alert_AlertType = 0
	// HUNG_BUILDER indicates that a builder has been executing a step for too long.
	SOMAlertsEvent_Alert_HUNG_BUILDER SOMAlertsEvent_Alert_AlertType = 1
	// OFFLINE_BUILDER indicates that we have no recent updates from the builder.
	SOMAlertsEvent_Alert_OFFLINE_BUILDER SOMAlertsEvent_Alert_AlertType = 2
	// IDLE_BUILDER indicates that a builder has not executed any builds recently
	// even though it has requests queued up.
	SOMAlertsEvent_Alert_IDLE_BUILDER SOMAlertsEvent_Alert_AlertType = 3
	// INFRA_FAILURE indicates that a builder step failed due to infrastructure.
	SOMAlertsEvent_Alert_INFRA_FAILURE SOMAlertsEvent_Alert_AlertType = 4
	// BUILD_FAILURE indicates that one of the build steps failed, most likely
	// due to the patch it's building/running with.
	SOMAlertsEvent_Alert_BUILD_FAILURE SOMAlertsEvent_Alert_AlertType = 5
)

var SOMAlertsEvent_Alert_AlertType_name = map[int32]string{
	0: "STALE_MASTER",
	1: "HUNG_BUILDER",
	2: "OFFLINE_BUILDER",
	3: "IDLE_BUILDER",
	4: "INFRA_FAILURE",
	5: "BUILD_FAILURE",
}
var SOMAlertsEvent_Alert_AlertType_value = map[string]int32{
	"STALE_MASTER":    0,
	"HUNG_BUILDER":    1,
	"OFFLINE_BUILDER": 2,
	"IDLE_BUILDER":    3,
	"INFRA_FAILURE":   4,
	"BUILD_FAILURE":   5,
}

func (x SOMAlertsEvent_Alert_AlertType) String() string {
	return proto.EnumName(SOMAlertsEvent_Alert_AlertType_name, int32(x))
}
func (SOMAlertsEvent_Alert_AlertType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

type SOMAnnotationEvent_OperationType int32

const (
	SOMAnnotationEvent_ADD    SOMAnnotationEvent_OperationType = 0
	SOMAnnotationEvent_DELETE SOMAnnotationEvent_OperationType = 1
)

var SOMAnnotationEvent_OperationType_name = map[int32]string{
	0: "ADD",
	1: "DELETE",
}
var SOMAnnotationEvent_OperationType_value = map[string]int32{
	"ADD":    0,
	"DELETE": 1,
}

func (x SOMAnnotationEvent_OperationType) String() string {
	return proto.EnumName(SOMAnnotationEvent_OperationType_name, int32(x))
}
func (SOMAnnotationEvent_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

// Alerts contains alerts generated by sheriff-o-matic analyzer cron jobs.
type SOMAlertsEvent struct {
	// Tree is the name of the tree.
	Tree string `protobuf:"bytes,1,opt,name=tree" json:"tree,omitempty"`
	// Timestamp is when the alerts were generated.
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// RequestId is the id of the incoming http request for the cron handler
	// that generated these alerts. This ID appears in the GAE request logs as
	// protoPayload.requestId.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Alerts are the set of alerts generated by an analyzer cron job run.
	Alerts []*SOMAlertsEvent_Alert `protobuf:"bytes,4,rep,name=Alerts" json:"Alerts,omitempty"`
}

func (m *SOMAlertsEvent) Reset()                    { *m = SOMAlertsEvent{} }
func (m *SOMAlertsEvent) String() string            { return proto.CompactTextString(m) }
func (*SOMAlertsEvent) ProtoMessage()               {}
func (*SOMAlertsEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SOMAlertsEvent) GetTree() string {
	if m != nil {
		return m.Tree
	}
	return ""
}

func (m *SOMAlertsEvent) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SOMAlertsEvent) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *SOMAlertsEvent) GetAlerts() []*SOMAlertsEvent_Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type SOMAlertsEvent_Alert struct {
	// Key is an opaque key generated for each alert.
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Title is the human-readable title of the alert.
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// Body is the human-readable plain text body of the alert.
	Body string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	// Type is the type of alert.
	Type SOMAlertsEvent_Alert_AlertType `protobuf:"varint,4,opt,name=type,enum=som.events.SOMAlertsEvent_Alert_AlertType" json:"type,omitempty"`
	// BuildbotFailures contains information about build failures grouped into this alert.
	BuildbotFailures []*SOMAlertsEvent_Alert_BuildbotFailure `protobuf:"bytes,6,rep,name=buildbot_failures,json=buildbotFailures" json:"buildbot_failures,omitempty"`
}

func (m *SOMAlertsEvent_Alert) Reset()                    { *m = SOMAlertsEvent_Alert{} }
func (m *SOMAlertsEvent_Alert) String() string            { return proto.CompactTextString(m) }
func (*SOMAlertsEvent_Alert) ProtoMessage()               {}
func (*SOMAlertsEvent_Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *SOMAlertsEvent_Alert) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SOMAlertsEvent_Alert) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SOMAlertsEvent_Alert) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *SOMAlertsEvent_Alert) GetType() SOMAlertsEvent_Alert_AlertType {
	if m != nil {
		return m.Type
	}
	return SOMAlertsEvent_Alert_STALE_MASTER
}

func (m *SOMAlertsEvent_Alert) GetBuildbotFailures() []*SOMAlertsEvent_Alert_BuildbotFailure {
	if m != nil {
		return m.BuildbotFailures
	}
	return nil
}

// BuildBotFaiure describes a range of failing builds on a buildbot builder.
type SOMAlertsEvent_Alert_BuildbotFailure struct {
	// Master is the name of the buildbot master.
	Master string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	// Builder is the name of the builder.
	Builder string `protobuf:"bytes,2,opt,name=builder" json:"builder,omitempty"`
	// Step is the name of the failing build step.
	Step string `protobuf:"bytes,3,opt,name=step" json:"step,omitempty"`
	// FirstFailure is the eariest known build number for this run of failures.
	FirstFailure int64 `protobuf:"varint,4,opt,name=first_failure,json=firstFailure" json:"first_failure,omitempty"`
	// LatestFailure is the latest known build number for this run of failures.
	LatestFailure int64 `protobuf:"varint,5,opt,name=latest_failure,json=latestFailure" json:"latest_failure,omitempty"`
	// LatestPassing is the latest known build number where this step passed.
	LatestPassing int64 `protobuf:"varint,6,opt,name=latest_passing,json=latestPassing" json:"latest_passing,omitempty"`
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) Reset()         { *m = SOMAlertsEvent_Alert_BuildbotFailure{} }
func (m *SOMAlertsEvent_Alert_BuildbotFailure) String() string { return proto.CompactTextString(m) }
func (*SOMAlertsEvent_Alert_BuildbotFailure) ProtoMessage()    {}
func (*SOMAlertsEvent_Alert_BuildbotFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetBuilder() string {
	if m != nil {
		return m.Builder
	}
	return ""
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetStep() string {
	if m != nil {
		return m.Step
	}
	return ""
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetFirstFailure() int64 {
	if m != nil {
		return m.FirstFailure
	}
	return 0
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetLatestFailure() int64 {
	if m != nil {
		return m.LatestFailure
	}
	return 0
}

func (m *SOMAlertsEvent_Alert_BuildbotFailure) GetLatestPassing() int64 {
	if m != nil {
		return m.LatestPassing
	}
	return 0
}

type SOMAnnotationEvent struct {
	// Tree is the name of the tree.
	Tree string `protobuf:"bytes,1,opt,name=tree" json:"tree,omitempty"`
	// Timestamp is when the alerts were generated.
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// RequestId is the id of the incoming http request that generated this
	// annotation. This ID appears in the GAE request logs as protoPayload.requestId.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// User is the ID of the user making the annotation change.
	User string `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	// AlertKeyDigest is the key digest for the alert.
	AlertKeyDigest string `protobuf:"bytes,5,opt,name=alert_key_digest,json=alertKeyDigest" json:"alert_key_digest,omitempty"`
	// AlertKey is an opaque key for the alert being annotated.
	AlertKey string `protobuf:"bytes,6,opt,name=alert_key,json=alertKey" json:"alert_key,omitempty"`
	// Operation is the annoation operation.
	Operation SOMAnnotationEvent_OperationType `protobuf:"varint,7,opt,name=operation,enum=som.events.SOMAnnotationEvent_OperationType" json:"operation,omitempty"`
	// Bugs is the list of bug IDs or URLs attached to the alert.
	Bugs []string `protobuf:"bytes,8,rep,name=bugs" json:"bugs,omitempty"`
	// Comments is the list of comments attached to the alert.
	Comments []*SOMAnnotationEvent_Comment `protobuf:"bytes,9,rep,name=comments" json:"comments,omitempty"`
	// SnoozeTime is the time until which to snooze the alert.
	SnoozeTime *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=snooze_time,json=snoozeTime" json:"snooze_time,omitempty"`
	// GroupId is the name of the alert group to which the alert belongs.
	GroupId string `protobuf:"bytes,11,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	// ModificationTime is the time the annotation was modified.
	ModificationTime *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=modification_time,json=modificationTime" json:"modification_time,omitempty"`
}

func (m *SOMAnnotationEvent) Reset()                    { *m = SOMAnnotationEvent{} }
func (m *SOMAnnotationEvent) String() string            { return proto.CompactTextString(m) }
func (*SOMAnnotationEvent) ProtoMessage()               {}
func (*SOMAnnotationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SOMAnnotationEvent) GetTree() string {
	if m != nil {
		return m.Tree
	}
	return ""
}

func (m *SOMAnnotationEvent) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SOMAnnotationEvent) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *SOMAnnotationEvent) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SOMAnnotationEvent) GetAlertKeyDigest() string {
	if m != nil {
		return m.AlertKeyDigest
	}
	return ""
}

func (m *SOMAnnotationEvent) GetAlertKey() string {
	if m != nil {
		return m.AlertKey
	}
	return ""
}

func (m *SOMAnnotationEvent) GetOperation() SOMAnnotationEvent_OperationType {
	if m != nil {
		return m.Operation
	}
	return SOMAnnotationEvent_ADD
}

func (m *SOMAnnotationEvent) GetBugs() []string {
	if m != nil {
		return m.Bugs
	}
	return nil
}

func (m *SOMAnnotationEvent) GetComments() []*SOMAnnotationEvent_Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *SOMAnnotationEvent) GetSnoozeTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.SnoozeTime
	}
	return nil
}

func (m *SOMAnnotationEvent) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *SOMAnnotationEvent) GetModificationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ModificationTime
	}
	return nil
}

// Comment is a user comment attached to an alert.
type SOMAnnotationEvent_Comment struct {
	// Text is the text of the comment.
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// Time is the time when the comment was posted.
	Time *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=time" json:"time,omitempty"`
}

func (m *SOMAnnotationEvent_Comment) Reset()                    { *m = SOMAnnotationEvent_Comment{} }
func (m *SOMAnnotationEvent_Comment) String() string            { return proto.CompactTextString(m) }
func (*SOMAnnotationEvent_Comment) ProtoMessage()               {}
func (*SOMAnnotationEvent_Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *SOMAnnotationEvent_Comment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SOMAnnotationEvent_Comment) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*SOMAlertsEvent)(nil), "som.events.SOMAlertsEvent")
	proto.RegisterType((*SOMAlertsEvent_Alert)(nil), "som.events.SOMAlertsEvent.Alert")
	proto.RegisterType((*SOMAlertsEvent_Alert_BuildbotFailure)(nil), "som.events.SOMAlertsEvent.Alert.BuildbotFailure")
	proto.RegisterType((*SOMAnnotationEvent)(nil), "som.events.SOMAnnotationEvent")
	proto.RegisterType((*SOMAnnotationEvent_Comment)(nil), "som.events.SOMAnnotationEvent.Comment")
	proto.RegisterEnum("som.events.SOMAlertsEvent_Alert_AlertType", SOMAlertsEvent_Alert_AlertType_name, SOMAlertsEvent_Alert_AlertType_value)
	proto.RegisterEnum("som.events.SOMAnnotationEvent_OperationType", SOMAnnotationEvent_OperationType_name, SOMAnnotationEvent_OperationType_value)
}

func init() {
	proto.RegisterFile("infra/appengine/sheriff-o-matic/som/model/gen/events.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 720 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x53, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x6e, 0x6a, 0xe7, 0xc7, 0x27, 0x4d, 0xea, 0x0e, 0x08, 0x99, 0x20, 0x44, 0x14, 0x7e, 0x14,
	0x21, 0x6a, 0xa3, 0x72, 0x53, 0x81, 0x84, 0x94, 0x10, 0xa7, 0x04, 0xd2, 0x16, 0xb9, 0xe9, 0x0d,
	0x12, 0xb2, 0x9c, 0xfa, 0xc4, 0x58, 0x8d, 0x3d, 0xc6, 0x33, 0x46, 0x0d, 0xe2, 0x39, 0xf6, 0x2d,
	0xf6, 0x45, 0xf6, 0x45, 0xf6, 0x35, 0x56, 0x3e, 0x76, 0x9c, 0xa6, 0x7b, 0x91, 0xcb, 0xbd, 0x89,
	0xce, 0x7c, 0xfe, 0xce, 0x37, 0xe7, 0x7c, 0xf9, 0x06, 0x7e, 0x0c, 0xe3, 0x55, 0xea, 0x59, 0x5e,
	0x92, 0x60, 0x1c, 0x84, 0x31, 0x5a, 0xe2, 0x6f, 0x4c, 0xc3, 0xd5, 0xea, 0x9c, 0x9f, 0x47, 0x9e,
	0x0c, 0x1f, 0x2c, 0xc1, 0x23, 0x2b, 0xe2, 0x3e, 0xae, 0xad, 0x00, 0x63, 0x0b, 0xff, 0xc5, 0x58,
	0x0a, 0x33, 0x49, 0xb9, 0xe4, 0x0c, 0x04, 0x8f, 0xcc, 0x02, 0xe9, 0x7d, 0x11, 0x70, 0x1e, 0xac,
	0xd1, 0xa2, 0x2f, 0xcb, 0x6c, 0x65, 0xc9, 0x30, 0x42, 0x21, 0xbd, 0x28, 0x29, 0xc8, 0x83, 0xb7,
	0x75, 0xe8, 0xde, 0xdd, 0x5e, 0x8f, 0xd6, 0x98, 0x4a, 0x61, 0xe7, 0x4d, 0x8c, 0x81, 0x2a, 0x53,
	0x44, 0xa3, 0xd6, 0xaf, 0x0d, 0x35, 0x87, 0x6a, 0x76, 0x09, 0x5a, 0xd5, 0x69, 0x1c, 0xf7, 0x6b,
	0xc3, 0xf6, 0x45, 0xcf, 0x2c, 0xb4, 0xcd, 0xad, 0xb6, 0xb9, 0xd8, 0x32, 0x9c, 0x1d, 0x99, 0x7d,
	0x0e, 0x90, 0xe2, 0x3f, 0x19, 0x0a, 0xe9, 0x86, 0xbe, 0xa1, 0x90, 0xa6, 0x56, 0x22, 0x33, 0x9f,
	0x5d, 0x42, 0xa3, 0xb8, 0xdb, 0x50, 0xfb, 0xca, 0xb0, 0x7d, 0xd1, 0x37, 0x77, 0xd3, 0x9b, 0xfb,
	0x83, 0x99, 0x54, 0x3b, 0x25, 0xbf, 0xf7, 0x5a, 0x85, 0x3a, 0x95, 0x4c, 0x07, 0xe5, 0x11, 0x37,
	0xe5, 0xbc, 0x79, 0xc9, 0x3e, 0x86, 0xba, 0x0c, 0xe5, 0x1a, 0x69, 0x54, 0xcd, 0x29, 0x0e, 0xf9,
	0x62, 0x4b, 0xee, 0x6f, 0xca, 0x21, 0xa8, 0x66, 0x3f, 0x83, 0x2a, 0x37, 0x09, 0x1a, 0x6a, 0xbf,
	0x36, 0xec, 0x5e, 0x7c, 0x7b, 0xe8, 0xf6, 0xe2, 0x77, 0xb1, 0x49, 0xd0, 0xa1, 0x3e, 0xf6, 0x17,
	0x9c, 0x2d, 0xb3, 0x70, 0xed, 0x2f, 0xb9, 0x74, 0x57, 0x5e, 0xb8, 0xce, 0x52, 0x14, 0x46, 0x83,
	0x56, 0xf9, 0xfe, 0xa0, 0xd8, 0xb8, 0xec, 0x9c, 0x16, 0x8d, 0x8e, 0xbe, 0xdc, 0x07, 0x44, 0xef,
	0x4d, 0x0d, 0x4e, 0x5f, 0xb0, 0xd8, 0x27, 0xd0, 0x88, 0x3c, 0x21, 0x31, 0x2d, 0x37, 0x2e, 0x4f,
	0xcc, 0x80, 0x26, 0xf5, 0x63, 0x5a, 0xae, 0xbd, 0x3d, 0xe6, 0x8b, 0x0b, 0x89, 0xc9, 0x76, 0xf1,
	0xbc, 0x66, 0x5f, 0x42, 0x67, 0x15, 0xa6, 0xa2, 0x9a, 0x9a, 0x1c, 0x50, 0x9c, 0x13, 0x02, 0xb7,
	0x57, 0x7d, 0x0d, 0xdd, 0xb5, 0x27, 0xf1, 0x19, 0xab, 0x4e, 0xac, 0x4e, 0x81, 0xbe, 0x4f, 0x4b,
	0x3c, 0x21, 0xc2, 0x38, 0x30, 0x1a, 0xcf, 0x69, 0x7f, 0x14, 0xe0, 0xe0, 0x7f, 0xd0, 0x2a, 0xfb,
	0x98, 0x0e, 0x27, 0x77, 0x8b, 0xd1, 0xdc, 0x76, 0xaf, 0x47, 0x77, 0x0b, 0xdb, 0xd1, 0x8f, 0x72,
	0xe4, 0xd7, 0xfb, 0x9b, 0x2b, 0x77, 0x7c, 0x3f, 0x9b, 0x4f, 0x6c, 0x47, 0xaf, 0xb1, 0x8f, 0xe0,
	0xf4, 0x76, 0x3a, 0x9d, 0xcf, 0x6e, 0xec, 0x0a, 0x3c, 0xce, 0x69, 0xb3, 0xc9, 0x7c, 0x87, 0x28,
	0xec, 0x0c, 0x3a, 0xb3, 0x9b, 0xa9, 0x33, 0x72, 0xa7, 0xa3, 0xd9, 0xfc, 0xde, 0xb1, 0x75, 0x35,
	0x87, 0xe8, 0x7b, 0x05, 0xd5, 0x07, 0xaf, 0xea, 0xc0, 0xf2, 0x7f, 0x21, 0x8e, 0xb9, 0xf4, 0x64,
	0xc8, 0xe3, 0x0f, 0x90, 0x76, 0x06, 0x6a, 0x26, 0x30, 0x25, 0xaf, 0x35, 0x87, 0x6a, 0x36, 0x04,
	0xdd, 0xcb, 0x5d, 0x71, 0x1f, 0x71, 0xe3, 0xfa, 0x61, 0x80, 0x42, 0x92, 0xcb, 0x9a, 0xd3, 0x25,
	0xfc, 0x77, 0xdc, 0x4c, 0x08, 0x65, 0x9f, 0x81, 0x56, 0x31, 0xc9, 0x61, 0xcd, 0x69, 0x6d, 0x29,
	0xec, 0x37, 0xd0, 0x78, 0x82, 0x29, 0x6d, 0x66, 0x34, 0x29, 0xcd, 0xdf, 0xbd, 0x0c, 0xe0, 0xfe,
	0xea, 0xe6, 0xed, 0x96, 0x4f, 0x79, 0xde, 0xb5, 0xd3, 0x43, 0xc9, 0x02, 0x61, 0xb4, 0xfa, 0x0a,
	0x3d, 0x94, 0x2c, 0x10, 0x6c, 0x0c, 0xad, 0x07, 0x1e, 0x45, 0xb9, 0x96, 0xa1, 0x51, 0xbe, 0xbf,
	0x39, 0x20, 0xff, 0x4b, 0x41, 0x77, 0xaa, 0x3e, 0xf6, 0x13, 0xb4, 0x45, 0xcc, 0xf9, 0x7f, 0xe8,
	0xe6, 0x8e, 0x19, 0x70, 0xd0, 0x59, 0x28, 0xe8, 0x39, 0xc0, 0x3e, 0x85, 0x56, 0x90, 0xf2, 0x2c,
	0xc9, 0x8d, 0x6d, 0x17, 0xf9, 0xa6, 0xf3, 0xcc, 0x67, 0x57, 0x70, 0x16, 0x71, 0x3f, 0x5c, 0x85,
	0x0f, 0x74, 0x7d, 0xa1, 0x7e, 0x72, 0x50, 0x5d, 0x7f, 0xde, 0x94, 0xc3, 0xbd, 0x6b, 0x68, 0x96,
	0x53, 0x53, 0x2e, 0xf0, 0x49, 0x56, 0xb9, 0xc0, 0x27, 0xc9, 0x4c, 0x50, 0x49, 0xfa, 0x70, 0x24,
	0x88, 0x37, 0xf8, 0x0a, 0x3a, 0x7b, 0x1e, 0xb3, 0x26, 0x28, 0xa3, 0xc9, 0x44, 0x3f, 0x62, 0x00,
	0x8d, 0x89, 0x3d, 0xb7, 0x17, 0xb6, 0x5e, 0x1b, 0xd7, 0xff, 0x54, 0x02, 0x8c, 0x97, 0x0d, 0x92,
	0xf9, 0xe1, 0x5d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x31, 0x73, 0x3a, 0xfb, 0x05, 0x00, 0x00,
}
