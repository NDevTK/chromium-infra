// Copyright 2015 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

syntax = "proto3";

package luci.migration;

option go_package = "config";

message Config {
    // Buildbot masters that we want to migrate to LUCI.
    repeated Master masters = 1;

    // New bugs for discovered builders are filed on this Monorail instance.
    string monorail_hostname = 2;
    // Buildbot master information is fetched from this instance.
    string buildbot_service_hostname = 3;
    // Builds will be searched and scheduled on this instance of buildbucket.
    string buildbucket_hostname = 4;
}

// A single buildbot master.
message Master {
    // Name of the master without "master." prefix, e.g.
    // "tryserver.chromium.linux".
    string name = 1;
    // SchedulingType defines how builders on this mastter will be analyzed.
    SchedulingType scheduling_type = 2;
    // OS defines "OS" Monorail label.
    OS os = 3;

    // LuciBucket is the equivalent LUCI buildbucket bucket.
    // It is assumed to have "LUCI <buildbot_builder_name>" builders for each
    // Buildbot builder.
    string luci_bucket = 4;

    // If public, access is not controlled for read-only requests.
    bool public = 5;
}

enum SchedulingType {
    UNSET_SCHEDULING_TYPE = 0;
    // TRYJOBS builds are scheduled for uncommitted CLs.
    TRYJOBS = 1;
    // CONTINUOUS builds are scheduled for landed CLs.
    CONTINUOUS = 2;
    // PERIODIC builds are scheduled every X time-units.
    PERIODIC = 3;
}

// OS is an Operating System.
// OS names must match built-in "OS-<value>" Monorail labels.
enum OS {
    UNSET_OS = 0;
    LINUX = 1;
    MAC = 2;
    WINDOWS = 3;
    ANDROID = 4;
    IOS = 5;
}
