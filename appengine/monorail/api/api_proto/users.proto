// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is govered by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

syntax = "proto3";

package monorail;

import "api/api_proto/user_objects.proto";
import "api/api_proto/common.proto";

service Users {
  rpc GetUser (GetUserRequest) returns (User) {}
  rpc ListReferencedUsers (ListReferencedUsersRequest) returns (ListReferencedUsersResponse) {}
  rpc GetMemberships (GetMembershipsRequest) returns (GetMembershipsResponse) {}
  rpc GetUserCommits (GetUserCommitsRequest) returns (GetUserCommitsResponse) {}
  rpc GetUserStarCount (GetUserStarCountRequest) returns (GetUserStarCountResponse) {}
  rpc StarUser (StarUserRequest) returns (StarUserResponse) {}
  rpc SetExpandPermsPreference (SetExpandPermsPreferenceRequest) returns (SetExpandPermsPreferenceResponse) {}
}


// TODO(jojwang): monorail:1701, fill User with all info necessary for
// creating a user profile page.
// Next available tag: 4
message User {
  string email = 1;
  int64 user_id = 2;
  bool is_site_admin = 3;
}


// Next available tag: 3
message ListReferencedUsersRequest {
  RequestTrace trace = 1;
  repeated string emails = 2;
}


message ListReferencedUsersResponse {
  repeated User users = 1;
}


// Next available tag: 3
message GetUserRequest {
  RequestTrace trace = 1;
  UserRef user_ref = 2;
}


// Next available tag: 3
message GetMembershipsRequest {
  RequestTrace trace = 1;
  UserRef user_ref = 2;
}


// Next available tag: 2
message GetMembershipsResponse {
  repeated UserRef group_refs = 1;
}


// Next available tag: 4
message GetUserCommitsRequest {
  RequestTrace trace = 1;
  string email = 2;
  fixed32 from_timestamp = 3;
  fixed32 until_timestamp = 4;
}


message GetUserCommitsResponse {
  repeated Commit user_commits = 1;
}


// Next available tag: 3
message GetUserStarCountRequest {
  RequestTrace trace = 1;
  UserRef user_ref = 2;
}


// Next available tag: 2
message GetUserStarCountResponse {
  uint32 star_count = 1;
}


// Next available tag: 4
message StarUserRequest {
  RequestTrace trace = 1;
  UserRef user_ref = 2;
  bool starred = 3;
}


// Next available tag: 2
message StarUserResponse {
  uint32 star_count = 1;
}


// Next available tag: 3
message SetExpandPermsPreferenceRequest {
  RequestTrace trace = 1;
  bool expand_perms = 2;
}


// Next available tag: 1
message SetExpandPermsPreferenceResponse {
}
