// Code generated by protoc-gen-go.
// source: infra/appengine/luci-migration/config/config.proto
// DO NOT EDIT!

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	infra/appengine/luci-migration/config/config.proto

It has these top-level messages:
	Config
	Master
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SchedulingType int32

const (
	SchedulingType_UNSET_SCHEDULING_TYPE SchedulingType = 0
	// TRYJOBS builds are scheduled for uncommitted CLs.
	SchedulingType_TRYJOBS SchedulingType = 1
	// CONTINUOUS builds are scheduled for landed CLs.
	SchedulingType_CONTINUOUS SchedulingType = 2
	// PERIODIC builds are scheduled every X time-units.
	SchedulingType_PERIODIC SchedulingType = 3
)

var SchedulingType_name = map[int32]string{
	0: "UNSET_SCHEDULING_TYPE",
	1: "TRYJOBS",
	2: "CONTINUOUS",
	3: "PERIODIC",
}
var SchedulingType_value = map[string]int32{
	"UNSET_SCHEDULING_TYPE": 0,
	"TRYJOBS":               1,
	"CONTINUOUS":            2,
	"PERIODIC":              3,
}

func (x SchedulingType) String() string {
	return proto.EnumName(SchedulingType_name, int32(x))
}
func (SchedulingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// OS is an Operating System.
// OS names must match built-in "OS-<value>" Monorail labels.
type OS int32

const (
	OS_UNSET_OS OS = 0
	OS_LINUX    OS = 1
	OS_MAC      OS = 2
	OS_WINDOWS  OS = 3
	OS_ANDROID  OS = 4
	OS_IOS      OS = 5
)

var OS_name = map[int32]string{
	0: "UNSET_OS",
	1: "LINUX",
	2: "MAC",
	3: "WINDOWS",
	4: "ANDROID",
	5: "IOS",
}
var OS_value = map[string]int32{
	"UNSET_OS": 0,
	"LINUX":    1,
	"MAC":      2,
	"WINDOWS":  3,
	"ANDROID":  4,
	"IOS":      5,
}

func (x OS) String() string {
	return proto.EnumName(OS_name, int32(x))
}
func (OS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Config struct {
	// Buildbot masters that we want to migrated to LUCI.
	Masters []*Master `protobuf:"bytes,1,rep,name=masters" json:"masters,omitempty"`
	// New bugs for discovered builders are filed on this Monorail instance.
	MonorailHostname string `protobuf:"bytes,2,opt,name=monorail_hostname,json=monorailHostname" json:"monorail_hostname,omitempty"`
	// Buildbot master information is fetched from this instance.
	BuildbotServiceHostname string `protobuf:"bytes,3,opt,name=buildbot_service_hostname,json=buildbotServiceHostname" json:"buildbot_service_hostname,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetMasters() []*Master {
	if m != nil {
		return m.Masters
	}
	return nil
}

func (m *Config) GetMonorailHostname() string {
	if m != nil {
		return m.MonorailHostname
	}
	return ""
}

func (m *Config) GetBuildbotServiceHostname() string {
	if m != nil {
		return m.BuildbotServiceHostname
	}
	return ""
}

// A single buildbot master.
type Master struct {
	// Name of the master without "master." prefix, e.g.
	// "tryserver.chromium.linux"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// if true, this master will be publicly visible
	Public bool `protobuf:"varint,2,opt,name=public" json:"public,omitempty"`
	// SchedulingTypes defines how builders on this mastter will be analyzed.
	SchedulingType SchedulingType `protobuf:"varint,3,opt,name=scheduling_type,json=schedulingType,enum=luci.migration.SchedulingType" json:"scheduling_type,omitempty"`
	// OS defines "OS" Monorail label.
	Os OS `protobuf:"varint,4,opt,name=os,enum=luci.migration.OS" json:"os,omitempty"`
	// LuciBucket is the equiavlent LUCI buildbucket bucket.
	// It is assumed to have "LUCI <builder_name>" builders for each Buildbot
	// builder.
	LuciBucket string `protobuf:"bytes,5,opt,name=luci_bucket,json=luciBucket" json:"luci_bucket,omitempty"`
}

func (m *Master) Reset()                    { *m = Master{} }
func (m *Master) String() string            { return proto.CompactTextString(m) }
func (*Master) ProtoMessage()               {}
func (*Master) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Master) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Master) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *Master) GetSchedulingType() SchedulingType {
	if m != nil {
		return m.SchedulingType
	}
	return SchedulingType_UNSET_SCHEDULING_TYPE
}

func (m *Master) GetOs() OS {
	if m != nil {
		return m.Os
	}
	return OS_UNSET_OS
}

func (m *Master) GetLuciBucket() string {
	if m != nil {
		return m.LuciBucket
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "luci.migration.Config")
	proto.RegisterType((*Master)(nil), "luci.migration.Master")
	proto.RegisterEnum("luci.migration.SchedulingType", SchedulingType_name, SchedulingType_value)
	proto.RegisterEnum("luci.migration.OS", OS_name, OS_value)
}

func init() { proto.RegisterFile("infra/appengine/luci-migration/config/config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0x6f, 0x9b, 0x40,
	0x10, 0xc5, 0x03, 0xb6, 0xb1, 0x33, 0xae, 0xe8, 0x76, 0xa4, 0xa6, 0xce, 0xa5, 0x8d, 0x7c, 0x8a,
	0x52, 0xd5, 0xae, 0xdc, 0x5b, 0x6f, 0x31, 0x58, 0xc9, 0x56, 0x09, 0x1b, 0xb1, 0xd0, 0x34, 0xbd,
	0x20, 0x20, 0x1b, 0x67, 0x55, 0xcc, 0x22, 0xfe, 0x54, 0xca, 0xe7, 0xe9, 0x37, 0xe9, 0x27, 0xab,
	0x58, 0xec, 0x54, 0xce, 0x09, 0xe6, 0xbd, 0xdf, 0x9b, 0x07, 0xd2, 0xc0, 0x42, 0xe6, 0x0f, 0x65,
	0x3c, 0x8f, 0x8b, 0x42, 0xe4, 0x6b, 0x99, 0x8b, 0x79, 0xd6, 0xa4, 0xf2, 0xd3, 0x46, 0xae, 0xcb,
	0xb8, 0x96, 0x2a, 0x9f, 0xa7, 0x2a, 0x7f, 0x90, 0xeb, 0xed, 0x63, 0x56, 0x94, 0xaa, 0x56, 0x68,
	0xb7, 0xcc, 0xec, 0x99, 0x99, 0xfe, 0x31, 0xc0, 0x72, 0x34, 0x80, 0x9f, 0x61, 0xb8, 0x89, 0xab,
	0x5a, 0x94, 0xd5, 0xc4, 0x38, 0xe9, 0x9d, 0x8e, 0x17, 0x47, 0xb3, 0x7d, 0x78, 0x76, 0xad, 0x6d,
	0x7f, 0x87, 0xe1, 0x47, 0x78, 0xb3, 0x51, 0xb9, 0x2a, 0x63, 0x99, 0x45, 0x8f, 0xaa, 0xaa, 0xf3,
	0x78, 0x23, 0x26, 0xe6, 0x89, 0x71, 0x7a, 0xe8, 0x93, 0x9d, 0x71, 0xb9, 0xd5, 0xf1, 0x2b, 0x1c,
	0x27, 0x8d, 0xcc, 0xee, 0x13, 0x55, 0x47, 0x95, 0x28, 0x7f, 0xcb, 0x54, 0xfc, 0x0f, 0xf5, 0x74,
	0xe8, 0xdd, 0x0e, 0xe0, 0x9d, 0xbf, 0xcb, 0x4e, 0xff, 0x1a, 0x60, 0x75, 0xe5, 0x88, 0xd0, 0xd7,
	0x09, 0x43, 0x27, 0xf4, 0x3b, 0x1e, 0x81, 0x55, 0x34, 0x49, 0x26, 0x53, 0x5d, 0x3e, 0xf2, 0xb7,
	0x13, 0x5e, 0xc0, 0xeb, 0x2a, 0x7d, 0x14, 0xf7, 0x4d, 0x26, 0xf3, 0x75, 0x54, 0x3f, 0x15, 0x5d,
	0x91, 0xbd, 0x78, 0xff, 0xf2, 0xcf, 0xf8, 0x33, 0x16, 0x3c, 0x15, 0xc2, 0xb7, 0xab, 0xbd, 0x19,
	0xa7, 0x60, 0xaa, 0x6a, 0xd2, 0xd7, 0x59, 0x7c, 0x99, 0x65, 0xdc, 0x37, 0x55, 0x85, 0x1f, 0x60,
	0xdc, 0x1a, 0x51, 0xd2, 0xa4, 0xbf, 0x44, 0x3d, 0x19, 0xe8, 0xef, 0x83, 0x56, 0x5a, 0x6a, 0xe5,
	0xec, 0x3b, 0xd8, 0xfb, 0x35, 0x78, 0x0c, 0x6f, 0x43, 0x8f, 0xaf, 0x82, 0x88, 0x3b, 0x97, 0x2b,
	0x37, 0xbc, 0xa2, 0xde, 0x45, 0x14, 0xdc, 0xdd, 0xac, 0xc8, 0x01, 0x8e, 0x61, 0x18, 0xf8, 0x77,
	0xdf, 0xd8, 0x92, 0x13, 0x03, 0x6d, 0x00, 0x87, 0x79, 0x01, 0xf5, 0x42, 0x16, 0x72, 0x62, 0xe2,
	0x2b, 0x18, 0xdd, 0xac, 0x7c, 0xca, 0x5c, 0xea, 0x90, 0xde, 0x19, 0x05, 0x93, 0xf1, 0x56, 0xeb,
	0x76, 0x31, 0x4e, 0x0e, 0xf0, 0x10, 0x06, 0x57, 0xd4, 0x0b, 0x7f, 0x10, 0x03, 0x87, 0xd0, 0xbb,
	0x3e, 0x77, 0x88, 0xd9, 0xae, 0xbc, 0xa5, 0x9e, 0xcb, 0x6e, 0x39, 0xe9, 0xb5, 0xc3, 0xb9, 0xe7,
	0xfa, 0x8c, 0xba, 0xa4, 0xdf, 0x22, 0x94, 0x71, 0x32, 0x58, 0x8e, 0x7e, 0x5a, 0xdd, 0xb5, 0x24,
	0x96, 0x3e, 0x97, 0x2f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xfc, 0xa5, 0x06, 0x64, 0x02,
	0x00, 0x00,
}
