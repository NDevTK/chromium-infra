// Copyright 2017 The Chromium Authors. All rights reserved.  Use of this source
// code is governed by a BSD-style license that can be found in the LICENSE
// file.

syntax = "proto3";

package admin;

import "infra/tricium/api/admin/v1/workflow.proto";
import "infra/tricium/api/v1/config.proto";

service Config {
  // Validates a Tricium config.
  //
  // The config to validate is specified in the request.
  // TODO(emso): Make this RPC public to let users validate configs when they want or via luci-config.
  rpc Validate(ValidateRequest) returns (ValidateResponse);

  // Generates a workflow config from a Tricium config.
  //
  // The Tricium config to generate for is specified by the request.
  rpc GenerateWorkflow(GenerateWorkflowRequest) returns (GenerateWorkflowResponse);
}

message ValidateRequest {
  // The project configuration to validate.
  tricium.ProjectConfig project_config = 1;

  // The service config to use.
  //
  // This field is optional. If not provided the default service config will be used.
  tricium.ServiceConfig service_config = 2;
}

// TODO(emso): Return structured errors for invalid configs.
message ValidateResponse {
  // The config used for validation.
  //
  // This is the resulting config after flattening and merging of the
  // provided project and service config.
  tricium.ProjectConfig validated_config = 1;
}

message GenerateWorkflowRequest {
  // The project to generate a workflow config for.
  //
  // The project name used must be known to Tricium.
  string project = 1;

  // The paths to generate the workflow config.
  //
  // These paths are used to decide which workers to include in the workflow.
  repeated string paths = 2;
}

message GenerateWorkflowResponse {
  // The generated workflow.
  Workflow workflow = 1;
}
