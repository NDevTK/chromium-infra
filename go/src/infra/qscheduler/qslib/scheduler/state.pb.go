// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/scheduler/state.proto

package scheduler

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// StateProto represents the overall state of a quota scheduler worker pool,
// account set, and task queue. This is represented separately from
// configuration information. The state is expected to be updated frequently,
// on each scheduler tick.
type StateProto struct {
	// QueuedRequests is the set of Requests that are waiting to be assigned to a
	// worker, keyed by request id.
	QueuedRequests map[string]*TaskRequest `protobuf:"bytes,1,rep,name=queued_requests,json=queuedRequests,proto3" json:"queued_requests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Balance of all quota accounts for this pool, keyed by account id.
	Balances map[string]*StateProto_Balance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Workers that may run tasks, and their states, keyed by worker id.
	Workers map[string]*Worker `protobuf:"bytes,3,rep,name=workers,proto3" json:"workers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// LastUpdateTime is the last time at which UpdateTime was called on a scheduler,
	// and corresponds to the when the quota account balances were updated.
	LastUpdateTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StateProto) Reset()         { *m = StateProto{} }
func (m *StateProto) String() string { return proto.CompactTextString(m) }
func (*StateProto) ProtoMessage()    {}
func (*StateProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6b2685915185dd1, []int{0}
}

func (m *StateProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateProto.Unmarshal(m, b)
}
func (m *StateProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateProto.Marshal(b, m, deterministic)
}
func (m *StateProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateProto.Merge(m, src)
}
func (m *StateProto) XXX_Size() int {
	return xxx_messageInfo_StateProto.Size(m)
}
func (m *StateProto) XXX_DiscardUnknown() {
	xxx_messageInfo_StateProto.DiscardUnknown(m)
}

var xxx_messageInfo_StateProto proto.InternalMessageInfo

func (m *StateProto) GetQueuedRequests() map[string]*TaskRequest {
	if m != nil {
		return m.QueuedRequests
	}
	return nil
}

func (m *StateProto) GetBalances() map[string]*StateProto_Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *StateProto) GetWorkers() map[string]*Worker {
	if m != nil {
		return m.Workers
	}
	return nil
}

func (m *StateProto) GetLastUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdateTime
	}
	return nil
}

type StateProto_Balance struct {
	Value                []float64 `protobuf:"fixed64,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StateProto_Balance) Reset()         { *m = StateProto_Balance{} }
func (m *StateProto_Balance) String() string { return proto.CompactTextString(m) }
func (*StateProto_Balance) ProtoMessage()    {}
func (*StateProto_Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6b2685915185dd1, []int{0, 1}
}

func (m *StateProto_Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateProto_Balance.Unmarshal(m, b)
}
func (m *StateProto_Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateProto_Balance.Marshal(b, m, deterministic)
}
func (m *StateProto_Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateProto_Balance.Merge(m, src)
}
func (m *StateProto_Balance) XXX_Size() int {
	return xxx_messageInfo_StateProto_Balance.Size(m)
}
func (m *StateProto_Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_StateProto_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_StateProto_Balance proto.InternalMessageInfo

func (m *StateProto_Balance) GetValue() []float64 {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*StateProto)(nil), "scheduler.StateProto")
	proto.RegisterMapType((map[string]*StateProto_Balance)(nil), "scheduler.StateProto.BalancesEntry")
	proto.RegisterMapType((map[string]*TaskRequest)(nil), "scheduler.StateProto.QueuedRequestsEntry")
	proto.RegisterMapType((map[string]*Worker)(nil), "scheduler.StateProto.WorkersEntry")
	proto.RegisterType((*StateProto_Balance)(nil), "scheduler.StateProto.Balance")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/scheduler/state.proto", fileDescriptor_d6b2685915185dd1)
}

var fileDescriptor_d6b2685915185dd1 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x5f, 0x4b, 0xfa, 0x50,
	0x18, 0xc7, 0x99, 0xfa, 0xfb, 0x99, 0xc7, 0x32, 0x3b, 0x45, 0x8c, 0x41, 0x28, 0x76, 0x91, 0x91,
	0x9d, 0x81, 0xde, 0x44, 0x04, 0x41, 0xd4, 0x65, 0x50, 0xcb, 0x88, 0xba, 0x91, 0x33, 0x7d, 0x34,
	0xd9, 0x74, 0xee, 0xfc, 0x29, 0x7c, 0x8f, 0xbd, 0xa8, 0xd8, 0x39, 0xdb, 0xdc, 0x60, 0xe4, 0x9d,
	0x3e, 0xfb, 0x7c, 0xbe, 0xcf, 0x73, 0xbe, 0xa8, 0x37, 0x5f, 0x4e, 0x19, 0xb5, 0x43, 0x3e, 0xfe,
	0x84, 0x89, 0xf4, 0x81, 0xd9, 0x21, 0xf7, 0xe7, 0xae, 0xbd, 0xf9, 0xcf, 0x05, 0x15, 0x40, 0x56,
	0x2c, 0x10, 0x01, 0xae, 0xa5, 0x63, 0xab, 0x35, 0x0b, 0x82, 0x99, 0x0f, 0xb6, 0xfa, 0xe0, 0xca,
	0xa9, 0x2d, 0xe6, 0x0b, 0xe0, 0x82, 0x2e, 0x56, 0x9a, 0xb5, 0x2e, 0xb6, 0x26, 0x0b, 0xca, 0xbd,
	0x18, 0xbe, 0xdc, 0x0a, 0x7f, 0x07, 0xcc, 0x03, 0xa6, 0xf1, 0xce, 0x4f, 0x05, 0xa1, 0x97, 0xe8,
	0xae, 0x27, 0x75, 0x96, 0x83, 0xf6, 0x43, 0x09, 0x12, 0x26, 0x23, 0x06, 0xa1, 0x04, 0x2e, 0xb8,
	0x69, 0xb4, 0xcb, 0xdd, 0x7a, 0xff, 0x9c, 0xa4, 0x01, 0x64, 0xc3, 0x93, 0x67, 0x05, 0x3b, 0x31,
	0xfb, 0xb0, 0x14, 0x6c, 0xed, 0x34, 0xc2, 0xdc, 0x10, 0xdf, 0xa2, 0x1d, 0x97, 0xfa, 0x74, 0x39,
	0x06, 0x6e, 0x96, 0x54, 0xd8, 0x69, 0x71, 0xd8, 0x5d, 0x4c, 0xe9, 0x98, 0x54, 0xc2, 0x37, 0xa8,
	0xaa, 0x6f, 0xe6, 0x66, 0x59, 0xf9, 0x9d, 0x62, 0xff, 0x4d, 0x43, 0x5a, 0x4f, 0x14, 0x7c, 0x8f,
	0x9a, 0x3e, 0xe5, 0x62, 0x24, 0x57, 0x13, 0x2a, 0x60, 0x14, 0x95, 0x6b, 0x56, 0xda, 0x46, 0xb7,
	0xde, 0xb7, 0x88, 0x6e, 0x9e, 0x24, 0xcd, 0x93, 0x61, 0xd2, 0xbc, 0xd3, 0x88, 0x9c, 0x57, 0xa5,
	0x44, 0x43, 0xeb, 0x1d, 0x1d, 0x16, 0xbc, 0x15, 0x37, 0x51, 0xd9, 0x83, 0xb5, 0x69, 0xb4, 0x8d,
	0x6e, 0xcd, 0x89, 0x7e, 0xe2, 0x1e, 0xfa, 0xf7, 0x45, 0x7d, 0x09, 0x66, 0x49, 0xed, 0x38, 0xce,
	0x9c, 0x3a, 0xa4, 0xdc, 0x8b, 0x75, 0x47, 0x43, 0xd7, 0xa5, 0x2b, 0xc3, 0x6a, 0xa1, 0x6a, 0xfc,
	0x72, 0x7c, 0x94, 0xc8, 0x51, 0xe9, 0x46, 0x0c, 0x59, 0x1f, 0x68, 0x2f, 0x57, 0x4d, 0xc1, 0xd6,
	0x41, 0x7e, 0xeb, 0xc9, 0x9f, 0x05, 0x67, 0x97, 0x3f, 0xa2, 0xdd, 0x6c, 0x6d, 0x05, 0xd1, 0x67,
	0xf9, 0xe8, 0x83, 0x4c, 0xb4, 0x36, 0x33, 0x71, 0xee, 0x7f, 0x55, 0xe5, 0xe0, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x7a, 0x65, 0xa1, 0xb8, 0x0d, 0x03, 0x00, 0x00,
}
