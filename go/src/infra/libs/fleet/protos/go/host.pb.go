// Code generated by protoc-gen-go. DO NOT EDIT.
// source: host.proto

package fleet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RackHost struct {
	RackId               *RackID        `protobuf:"bytes,1,opt,name=rack_id,json=rackId,proto3" json:"rack_id,omitempty"`
	LseId                *LabSetupEnvID `protobuf:"bytes,2,opt,name=lse_id,json=lseId,proto3" json:"lse_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RackHost) Reset()         { *m = RackHost{} }
func (m *RackHost) String() string { return proto.CompactTextString(m) }
func (*RackHost) ProtoMessage()    {}
func (*RackHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e40b83b4d50a8d, []int{0}
}

func (m *RackHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackHost.Unmarshal(m, b)
}
func (m *RackHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackHost.Marshal(b, m, deterministic)
}
func (m *RackHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackHost.Merge(m, src)
}
func (m *RackHost) XXX_Size() int {
	return xxx_messageInfo_RackHost.Size(m)
}
func (m *RackHost) XXX_DiscardUnknown() {
	xxx_messageInfo_RackHost.DiscardUnknown(m)
}

var xxx_messageInfo_RackHost proto.InternalMessageInfo

func (m *RackHost) GetRackId() *RackID {
	if m != nil {
		return m.RackId
	}
	return nil
}

func (m *RackHost) GetLseId() *LabSetupEnvID {
	if m != nil {
		return m.LseId
	}
	return nil
}

type MachineHost struct {
	MachineId            *MachineID     `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	LseId                *LabSetupEnvID `protobuf:"bytes,2,opt,name=lse_id,json=lseId,proto3" json:"lse_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MachineHost) Reset()         { *m = MachineHost{} }
func (m *MachineHost) String() string { return proto.CompactTextString(m) }
func (*MachineHost) ProtoMessage()    {}
func (*MachineHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e40b83b4d50a8d, []int{1}
}

func (m *MachineHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineHost.Unmarshal(m, b)
}
func (m *MachineHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineHost.Marshal(b, m, deterministic)
}
func (m *MachineHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineHost.Merge(m, src)
}
func (m *MachineHost) XXX_Size() int {
	return xxx_messageInfo_MachineHost.Size(m)
}
func (m *MachineHost) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineHost.DiscardUnknown(m)
}

var xxx_messageInfo_MachineHost proto.InternalMessageInfo

func (m *MachineHost) GetMachineId() *MachineID {
	if m != nil {
		return m.MachineId
	}
	return nil
}

func (m *MachineHost) GetLseId() *LabSetupEnvID {
	if m != nil {
		return m.LseId
	}
	return nil
}

func init() {
	proto.RegisterType((*RackHost)(nil), "fleet.RackHost")
	proto.RegisterType((*MachineHost)(nil), "fleet.MachineHost")
}

func init() { proto.RegisterFile("host.proto", fileDescriptor_85e40b83b4d50a8d) }

var fileDescriptor_85e40b83b4d50a8d = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc8, 0x2f, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0xcb, 0x49, 0x4d, 0x2d, 0x91, 0xe2, 0xc9,
	0x29, 0x4e, 0x8d, 0xcf, 0x4c, 0x81, 0x08, 0x4a, 0x09, 0xe4, 0x26, 0x26, 0x67, 0x64, 0xe6, 0x21,
	0x89, 0xf0, 0x16, 0x25, 0x26, 0x67, 0xc3, 0xb9, 0x4a, 0xf1, 0x5c, 0x1c, 0x41, 0x89, 0xc9, 0xd9,
	0x1e, 0xf9, 0xc5, 0x25, 0x42, 0x6a, 0x5c, 0xec, 0x50, 0x49, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e,
	0x23, 0x5e, 0x3d, 0xb0, 0x99, 0x7a, 0x20, 0x15, 0x9e, 0x2e, 0x41, 0x6c, 0x20, 0x59, 0xcf, 0x14,
	0x21, 0x6d, 0x2e, 0x36, 0x88, 0x25, 0x12, 0x4c, 0x60, 0x65, 0x22, 0x50, 0x65, 0x3e, 0x89, 0x49,
	0xc1, 0xa9, 0x25, 0xa5, 0x05, 0xae, 0x79, 0x65, 0x9e, 0x2e, 0x41, 0xac, 0x39, 0xc5, 0xa9, 0x9e,
	0x29, 0x4a, 0xd9, 0x5c, 0xdc, 0xbe, 0x10, 0x37, 0x80, 0xed, 0xd0, 0xe7, 0xe2, 0x42, 0x38, 0x09,
	0x6a, 0x8d, 0x00, 0x54, 0x3f, 0x54, 0x9d, 0xa7, 0x4b, 0x10, 0x27, 0x54, 0x0d, 0x89, 0x96, 0x39,
	0x71, 0x46, 0xb1, 0xeb, 0x59, 0x83, 0xe5, 0x93, 0xd8, 0xc0, 0xfe, 0x33, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xac, 0x19, 0xb2, 0x3e, 0x23, 0x01, 0x00, 0x00,
}
