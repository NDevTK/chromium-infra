// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tricium/api/v1/function.proto

package tricium

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Tricium functions; isolators and analyzers.
type Function_Type int32

const (
	Function_NONE     Function_Type = 0
	Function_ISOLATOR Function_Type = 1
	Function_ANALYZER Function_Type = 2
)

var Function_Type_name = map[int32]string{
	0: "NONE",
	1: "ISOLATOR",
	2: "ANALYZER",
}

var Function_Type_value = map[string]int32{
	"NONE":     0,
	"ISOLATOR": 1,
	"ANALYZER": 2,
}

func (x Function_Type) String() string {
	return proto.EnumName(Function_Type_name, int32(x))
}

func (Function_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{0, 0}
}

// Tricium function.
//
// There are two types of functions; isolators and analyzers.
// All functions have one input (needs) and one output (provides).
// For analyzer functions, the output must be of type Data.Results.
type Function struct {
	// The type of this function.
	//
	// This field is required.
	Type Function_Type `protobuf:"varint,1,opt,name=type,proto3,enum=tricium.Function_Type" json:"type,omitempty"`
	// The name of the function.
	//
	// This name is used for selection, customization and reporting of
	// progress/results. The name must be unique among Tricium functions within a
	// Tricium instance.
	//
	// The name is expected to be CamelCase; no spaces, underscores or dashes are
	// allowed.
	//
	// This field is required.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Data needed by this function.
	//
	// This field is required.
	Needs Data_Type `protobuf:"varint,3,opt,name=needs,proto3,enum=tricium.Data_Type" json:"needs,omitempty"`
	// Data provided by this function.
	//
	// This field is required.
	Provides Data_Type `protobuf:"varint,4,opt,name=provides,proto3,enum=tricium.Data_Type" json:"provides,omitempty"`
	// Path filters for this function.
	//
	// Applicable when this function is an analyzer. Defined as a glob.
	// The path filters only apply to the last part of the path.
	PathFilters []string `protobuf:"bytes,5,rep,name=path_filters,json=pathFilters,proto3" json:"path_filters,omitempty"`
	// Email address of the owner of this function.
	//
	// This field is required.
	Owner string `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	// Monorail bug component for bug filing.
	//
	// This field is required.
	MonorailComponent string `protobuf:"bytes,7,opt,name=monorail_component,json=monorailComponent,proto3" json:"monorail_component,omitempty"`
	// Function configuration options.
	//
	// These options enable projects to configure how a function behaves without
	// customization via a new implementation. For instance, an analyzer function
	// may expose the list of possible checks as configuration options.
	ConfigDefs []*ConfigDef `protobuf:"bytes,8,rep,name=config_defs,json=configDefs,proto3" json:"config_defs,omitempty"`
	// Function implementations.
	//
	// A function may run on many platforms and the implementation per platform
	// may differ. When possible, an implementation may be shared between several
	// platforms.
	Impls                []*Impl  `protobuf:"bytes,9,rep,name=impls,proto3" json:"impls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{0}
}

func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (m *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(m, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetType() Function_Type {
	if m != nil {
		return m.Type
	}
	return Function_NONE
}

func (m *Function) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Function) GetNeeds() Data_Type {
	if m != nil {
		return m.Needs
	}
	return Data_NONE
}

func (m *Function) GetProvides() Data_Type {
	if m != nil {
		return m.Provides
	}
	return Data_NONE
}

func (m *Function) GetPathFilters() []string {
	if m != nil {
		return m.PathFilters
	}
	return nil
}

func (m *Function) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Function) GetMonorailComponent() string {
	if m != nil {
		return m.MonorailComponent
	}
	return ""
}

func (m *Function) GetConfigDefs() []*ConfigDef {
	if m != nil {
		return m.ConfigDefs
	}
	return nil
}

func (m *Function) GetImpls() []*Impl {
	if m != nil {
		return m.Impls
	}
	return nil
}

// Definition of a function configuration.
//
// An analyzer may expose flags as configuration options, e.g. ClangTidy
// is configured with a 'checks' flag.
type ConfigDef struct {
	// Name of configuration option.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Default value for the config, e.g., checks="all".
	Default              string   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigDef) Reset()         { *m = ConfigDef{} }
func (m *ConfigDef) String() string { return proto.CompactTextString(m) }
func (*ConfigDef) ProtoMessage()    {}
func (*ConfigDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{1}
}

func (m *ConfigDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigDef.Unmarshal(m, b)
}
func (m *ConfigDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigDef.Marshal(b, m, deterministic)
}
func (m *ConfigDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigDef.Merge(m, src)
}
func (m *ConfigDef) XXX_Size() int {
	return xxx_messageInfo_ConfigDef.Size(m)
}
func (m *ConfigDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigDef.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigDef proto.InternalMessageInfo

func (m *ConfigDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigDef) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

// Function implementation.
//
// Implementation can be either command-based or recipe-based.
// NB! Recipe-based implementations are not supported yet.
//
// If platform-specific data is needed or provided, the specific platform
// details should be provided in the implementation. Note that the runtime
// platform of the implementation may be different then the platform(s)
// used to refine the data-dependency.
type Impl struct {
	// Data-dependency details specific to this implementation.
	//
	// For instance, if the needed data must be parameterized with a
	// specific platform then the 'needs_for_platform' field should be set to
	// that platform. Likewise for any provided data type that must be
	// parameterized with a specific platform, this should be indicated with
	// the 'provides_for_platform' field. Either if these fields can be left
	// out for implementations of functions not needing or providing
	// platform-specific data.
	NeedsForPlatform    Platform_Name `protobuf:"varint,1,opt,name=needs_for_platform,json=needsForPlatform,proto3,enum=tricium.Platform_Name" json:"needs_for_platform,omitempty"`
	ProvidesForPlatform Platform_Name `protobuf:"varint,2,opt,name=provides_for_platform,json=providesForPlatform,proto3,enum=tricium.Platform_Name" json:"provides_for_platform,omitempty"`
	// The platform to run this implementation on.
	//
	// This may be different from the platforms used to refine data-dependencies,
	// as long as the data consumed/produced follows the specification.
	RuntimePlatform Platform_Name `protobuf:"varint,3,opt,name=runtime_platform,json=runtimePlatform,proto3,enum=tricium.Platform_Name" json:"runtime_platform,omitempty"`
	// CIPD packages needed by this implementation.
	CipdPackages []*CipdPackage `protobuf:"bytes,4,rep,name=cipd_packages,json=cipdPackages,proto3" json:"cipd_packages,omitempty"`
	// Types that are valid to be assigned to Impl:
	//	*Impl_Recipe
	//	*Impl_Cmd
	Impl isImpl_Impl `protobuf_oneof:"impl"`
	// Deadline for execution of corresponding workers.
	//
	// Note that this deadline includes the launch of a swarming task for the
	// corresponding worker, and collection of results from that worker.
	// Deadline should be given in seconds.
	Deadline             int32    `protobuf:"varint,7,opt,name=deadline,proto3" json:"deadline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Impl) Reset()         { *m = Impl{} }
func (m *Impl) String() string { return proto.CompactTextString(m) }
func (*Impl) ProtoMessage()    {}
func (*Impl) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{2}
}

func (m *Impl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Impl.Unmarshal(m, b)
}
func (m *Impl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Impl.Marshal(b, m, deterministic)
}
func (m *Impl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Impl.Merge(m, src)
}
func (m *Impl) XXX_Size() int {
	return xxx_messageInfo_Impl.Size(m)
}
func (m *Impl) XXX_DiscardUnknown() {
	xxx_messageInfo_Impl.DiscardUnknown(m)
}

var xxx_messageInfo_Impl proto.InternalMessageInfo

func (m *Impl) GetNeedsForPlatform() Platform_Name {
	if m != nil {
		return m.NeedsForPlatform
	}
	return Platform_ANY
}

func (m *Impl) GetProvidesForPlatform() Platform_Name {
	if m != nil {
		return m.ProvidesForPlatform
	}
	return Platform_ANY
}

func (m *Impl) GetRuntimePlatform() Platform_Name {
	if m != nil {
		return m.RuntimePlatform
	}
	return Platform_ANY
}

func (m *Impl) GetCipdPackages() []*CipdPackage {
	if m != nil {
		return m.CipdPackages
	}
	return nil
}

type isImpl_Impl interface {
	isImpl_Impl()
}

type Impl_Recipe struct {
	Recipe *Recipe `protobuf:"bytes,5,opt,name=recipe,proto3,oneof"`
}

type Impl_Cmd struct {
	Cmd *Cmd `protobuf:"bytes,6,opt,name=cmd,proto3,oneof"`
}

func (*Impl_Recipe) isImpl_Impl() {}

func (*Impl_Cmd) isImpl_Impl() {}

func (m *Impl) GetImpl() isImpl_Impl {
	if m != nil {
		return m.Impl
	}
	return nil
}

func (m *Impl) GetRecipe() *Recipe {
	if x, ok := m.GetImpl().(*Impl_Recipe); ok {
		return x.Recipe
	}
	return nil
}

func (m *Impl) GetCmd() *Cmd {
	if x, ok := m.GetImpl().(*Impl_Cmd); ok {
		return x.Cmd
	}
	return nil
}

func (m *Impl) GetDeadline() int32 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Impl) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Impl_Recipe)(nil),
		(*Impl_Cmd)(nil),
	}
}

// Specification of a recipe for a recipe-based analyzer.
type Recipe struct {
	// Recipe CIPD package.
	CipdPackage string `protobuf:"bytes,1,opt,name=cipd_package,json=cipdPackage,proto3" json:"cipd_package,omitempty"`
	// CIPD package version.
	CipdVersion string `protobuf:"bytes,2,opt,name=cipd_version,json=cipdVersion,proto3" json:"cipd_version,omitempty"`
	// Extra recipe properties to add, as a JSON mapping of keys to values.
	Properties string `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	// Name of the recipe to run.
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Recipe) Reset()         { *m = Recipe{} }
func (m *Recipe) String() string { return proto.CompactTextString(m) }
func (*Recipe) ProtoMessage()    {}
func (*Recipe) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{3}
}

func (m *Recipe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipe.Unmarshal(m, b)
}
func (m *Recipe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipe.Marshal(b, m, deterministic)
}
func (m *Recipe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipe.Merge(m, src)
}
func (m *Recipe) XXX_Size() int {
	return xxx_messageInfo_Recipe.Size(m)
}
func (m *Recipe) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipe.DiscardUnknown(m)
}

var xxx_messageInfo_Recipe proto.InternalMessageInfo

func (m *Recipe) GetCipdPackage() string {
	if m != nil {
		return m.CipdPackage
	}
	return ""
}

func (m *Recipe) GetCipdVersion() string {
	if m != nil {
		return m.CipdVersion
	}
	return ""
}

func (m *Recipe) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

func (m *Recipe) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Specification of a command.
type Cmd struct {
	// Executable binary.
	Exec string `protobuf:"bytes,1,opt,name=exec,proto3" json:"exec,omitempty"`
	// Arguments in order.
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cmd) Reset()         { *m = Cmd{} }
func (m *Cmd) String() string { return proto.CompactTextString(m) }
func (*Cmd) ProtoMessage()    {}
func (*Cmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{4}
}

func (m *Cmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cmd.Unmarshal(m, b)
}
func (m *Cmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cmd.Marshal(b, m, deterministic)
}
func (m *Cmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cmd.Merge(m, src)
}
func (m *Cmd) XXX_Size() int {
	return xxx_messageInfo_Cmd.Size(m)
}
func (m *Cmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cmd proto.InternalMessageInfo

func (m *Cmd) GetExec() string {
	if m != nil {
		return m.Exec
	}
	return ""
}

func (m *Cmd) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// Specification of a CIPD package that is installed as a dependency of an
// analyzer.
type CipdPackage struct {
	// CIPD package name.
	PackageName string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// Relative path from the working directory where the package shall be
	// installed. Cannot be empty or start with a slash.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// CIPD package version.
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipdPackage) Reset()         { *m = CipdPackage{} }
func (m *CipdPackage) String() string { return proto.CompactTextString(m) }
func (*CipdPackage) ProtoMessage()    {}
func (*CipdPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_494474ef965cee69, []int{5}
}

func (m *CipdPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipdPackage.Unmarshal(m, b)
}
func (m *CipdPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipdPackage.Marshal(b, m, deterministic)
}
func (m *CipdPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipdPackage.Merge(m, src)
}
func (m *CipdPackage) XXX_Size() int {
	return xxx_messageInfo_CipdPackage.Size(m)
}
func (m *CipdPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_CipdPackage.DiscardUnknown(m)
}

var xxx_messageInfo_CipdPackage proto.InternalMessageInfo

func (m *CipdPackage) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *CipdPackage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CipdPackage) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterEnum("tricium.Function_Type", Function_Type_name, Function_Type_value)
	proto.RegisterType((*Function)(nil), "tricium.Function")
	proto.RegisterType((*ConfigDef)(nil), "tricium.ConfigDef")
	proto.RegisterType((*Impl)(nil), "tricium.Impl")
	proto.RegisterType((*Recipe)(nil), "tricium.Recipe")
	proto.RegisterType((*Cmd)(nil), "tricium.Cmd")
	proto.RegisterType((*CipdPackage)(nil), "tricium.CipdPackage")
}

func init() {
	proto.RegisterFile("infra/tricium/api/v1/function.proto", fileDescriptor_494474ef965cee69)
}

var fileDescriptor_494474ef965cee69 = []byte{
	// 631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcf, 0x6f, 0xd3, 0x3c,
	0x18, 0x5e, 0x9a, 0xb4, 0x6b, 0xdf, 0x74, 0xdf, 0xfa, 0xf9, 0xdb, 0x87, 0xa2, 0x1d, 0xa0, 0x64,
	0x97, 0x82, 0x58, 0x2b, 0xb6, 0xd3, 0x8e, 0xa5, 0xdb, 0xb4, 0xa1, 0xa9, 0x9b, 0xcc, 0x84, 0x04,
	0x07, 0x22, 0x93, 0x38, 0xc3, 0x22, 0xb1, 0x2d, 0x27, 0x1d, 0xec, 0xca, 0x85, 0x7f, 0x80, 0x3f,
	0x18, 0xd9, 0x89, 0xd3, 0x4c, 0x8c, 0xdd, 0xde, 0x1f, 0xcf, 0xfb, 0xf8, 0x8d, 0x9f, 0xc7, 0x81,
	0x3d, 0xc6, 0x53, 0x45, 0x66, 0xa5, 0x62, 0x31, 0x5b, 0xe5, 0x33, 0x22, 0xd9, 0xec, 0xf6, 0xf5,
	0x2c, 0x5d, 0xf1, 0xb8, 0x64, 0x82, 0x4f, 0xa5, 0x12, 0xa5, 0x40, 0x9b, 0x75, 0x7b, 0xf7, 0xd9,
	0x83, 0xe8, 0x84, 0x94, 0xa4, 0x42, 0xee, 0x3e, 0x4c, 0x27, 0x33, 0x52, 0xa6, 0x42, 0xe5, 0x15,
	0x28, 0xfc, 0xe5, 0x42, 0xff, 0xb4, 0x3e, 0x01, 0xbd, 0x04, 0xaf, 0xbc, 0x93, 0x34, 0x70, 0xc6,
	0xce, 0xe4, 0x9f, 0x83, 0x27, 0xd3, 0x7a, 0x74, 0x6a, 0x01, 0xd3, 0xeb, 0x3b, 0x49, 0xb1, 0xc1,
	0x20, 0x04, 0x1e, 0x27, 0x39, 0x0d, 0x3a, 0x63, 0x67, 0x32, 0xc0, 0x26, 0x46, 0x13, 0xe8, 0x72,
	0x4a, 0x93, 0x22, 0x70, 0x0d, 0x01, 0x6a, 0x08, 0x8e, 0xf5, 0x56, 0x66, 0xb8, 0x02, 0xa0, 0x29,
	0xf4, 0xa5, 0x12, 0xb7, 0x2c, 0xa1, 0x45, 0xe0, 0xfd, 0x15, 0xdc, 0x60, 0xd0, 0x73, 0x18, 0x4a,
	0x52, 0x7e, 0x89, 0x52, 0x96, 0x95, 0x54, 0x15, 0x41, 0x77, 0xec, 0x4e, 0x06, 0xd8, 0xd7, 0xb5,
	0xd3, 0xaa, 0x84, 0x76, 0xa0, 0x2b, 0xbe, 0x71, 0xaa, 0x82, 0x9e, 0xd9, 0xa8, 0x4a, 0xd0, 0x3e,
	0xa0, 0x5c, 0x70, 0xa1, 0x08, 0xcb, 0xa2, 0x58, 0xe4, 0x52, 0x70, 0xca, 0xcb, 0x60, 0xd3, 0x40,
	0xfe, 0xb5, 0x9d, 0x85, 0x6d, 0xa0, 0x43, 0xf0, 0x63, 0xc1, 0x53, 0x76, 0x13, 0x25, 0x34, 0x2d,
	0x82, 0xfe, 0xd8, 0x9d, 0xf8, 0xad, 0xd5, 0x16, 0xa6, 0x77, 0x4c, 0x53, 0x0c, 0xb1, 0x0d, 0x0b,
	0xb4, 0x07, 0x5d, 0x96, 0xcb, 0xac, 0x08, 0x06, 0x06, 0xbe, 0xd5, 0xc0, 0xcf, 0x73, 0x99, 0xe1,
	0xaa, 0x17, 0xbe, 0x02, 0x4f, 0x7f, 0x13, 0xea, 0x83, 0xb7, 0xbc, 0x5c, 0x9e, 0x8c, 0x36, 0xd0,
	0x10, 0xfa, 0xe7, 0xef, 0x2e, 0x2f, 0xe6, 0xd7, 0x97, 0x78, 0xe4, 0xe8, 0x6c, 0xbe, 0x9c, 0x5f,
	0x7c, 0xf8, 0x78, 0x82, 0x47, 0x9d, 0xf0, 0x08, 0x06, 0xcd, 0x59, 0xcd, 0x55, 0x3b, 0xad, 0xab,
	0x0e, 0x60, 0x33, 0xa1, 0x29, 0x59, 0x65, 0x65, 0xad, 0x80, 0x4d, 0xc3, 0x9f, 0x2e, 0x78, 0xfa,
	0x60, 0x74, 0x0c, 0xc8, 0x5c, 0x76, 0x94, 0x0a, 0x15, 0x59, 0xd9, 0xff, 0xd0, 0xf6, 0xca, 0xfa,
	0x61, 0x49, 0x72, 0x8a, 0x47, 0x66, 0xe2, 0x54, 0x28, 0x5b, 0x46, 0x6f, 0xe1, 0x7f, 0xab, 0xc2,
	0x7d, 0xa2, 0xce, 0xa3, 0x44, 0xff, 0xd9, 0xa1, 0x36, 0xd7, 0x1c, 0x46, 0x6a, 0xc5, 0x4b, 0x96,
	0xd3, 0x35, 0x8d, 0xfb, 0x28, 0xcd, 0x76, 0x8d, 0x6f, 0x28, 0x8e, 0x60, 0x2b, 0x66, 0x32, 0x89,
	0x24, 0x89, 0xbf, 0x92, 0x1b, 0xe3, 0x1e, 0x7d, 0xe7, 0x3b, 0x6b, 0x89, 0x98, 0x4c, 0xae, 0xaa,
	0x26, 0x1e, 0xc6, 0xeb, 0xa4, 0x40, 0x2f, 0xa0, 0xa7, 0x68, 0xcc, 0x24, 0x0d, 0xba, 0x63, 0x67,
	0xe2, 0x1f, 0x6c, 0x37, 0x33, 0xd8, 0x94, 0xcf, 0x36, 0x70, 0x0d, 0x40, 0x63, 0x70, 0xe3, 0x3c,
	0x31, 0x4e, 0xf2, 0x0f, 0x86, 0x6b, 0xee, 0x3c, 0x39, 0xdb, 0xc0, 0xba, 0x85, 0x76, 0xa1, 0x9f,
	0x50, 0x92, 0x64, 0x8c, 0x53, 0xe3, 0xa6, 0x2e, 0x6e, 0xf2, 0x37, 0x3d, 0xf0, 0xb4, 0xe6, 0xe1,
	0x0f, 0x07, 0x7a, 0x15, 0xb5, 0xf6, 0x6f, 0x7b, 0xed, 0x5a, 0x4a, 0xbf, 0xb5, 0x5f, 0x03, 0xb9,
	0xa5, 0xaa, 0x60, 0x82, 0xd7, 0xb2, 0x1a, 0xc8, 0xfb, 0xaa, 0x84, 0x9e, 0x02, 0x48, 0x25, 0x24,
	0x55, 0x25, 0xa3, 0xd5, 0x23, 0x1b, 0xe0, 0x56, 0xa5, 0x31, 0x8a, 0xb7, 0x36, 0x4a, 0xb8, 0x0f,
	0xee, 0x22, 0x4f, 0x74, 0x8b, 0x7e, 0xa7, 0xb1, 0xf5, 0x90, 0x8e, 0x75, 0x8d, 0xa8, 0x9b, 0x22,
	0xe8, 0x98, 0xc7, 0x64, 0xe2, 0xf0, 0x13, 0xf8, 0x8b, 0xfb, 0x4b, 0xd5, 0x2b, 0x47, 0x2d, 0x0b,
	0xfa, 0x75, 0x4d, 0x4b, 0xa4, 0x59, 0xf4, 0x33, 0xb4, 0x3f, 0x02, 0x1d, 0x6b, 0x77, 0xda, 0xcf,
	0xa8, 0xb6, 0xb4, 0xe9, 0xe7, 0x9e, 0xf9, 0xed, 0x1c, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xd3,
	0x1e, 0xde, 0x94, 0xec, 0x04, 0x00, 0x00,
}
