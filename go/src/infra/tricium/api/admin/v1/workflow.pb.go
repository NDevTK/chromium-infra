// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tricium/api/admin/v1/workflow.proto

package admin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "infra/tricium/api/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Tricium workflow configuration.
//
// Workflow configurations are typically generated from a Tricium configuration.
type Workflow struct {
	ServiceAccount       string    `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Workers              []*Worker `protobuf:"bytes,2,rep,name=workers,proto3" json:"workers,omitempty"`
	SwarmingServer       string    `protobuf:"bytes,3,opt,name=swarming_server,json=swarmingServer,proto3" json:"swarming_server,omitempty"`
	IsolateServer        string    `protobuf:"bytes,4,opt,name=isolate_server,json=isolateServer,proto3" json:"isolate_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflow_1e47e277cca24c99, []int{0}
}
func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (dst *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(dst, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *Workflow) GetWorkers() []*Worker {
	if m != nil {
		return m.Workers
	}
	return nil
}

func (m *Workflow) GetSwarmingServer() string {
	if m != nil {
		return m.SwarmingServer
	}
	return ""
}

func (m *Workflow) GetIsolateServer() string {
	if m != nil {
		return m.IsolateServer
	}
	return ""
}

// A Tricium worker includes the details needed to execute a function on a
// specific platform as swarming task.
type Worker struct {
	// Name of worker is combination of the function and platform name
	// for which results are provided, e.g "GitFileIsolator_LINUX".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Includes data dependencies for runtime type checking.
	// Platform-specific details are provided when required by the corresponding
	// data type.
	Needs               v1.Data_Type     `protobuf:"varint,2,opt,name=needs,proto3,enum=tricium.Data_Type" json:"needs,omitempty"`
	NeedsForPlatform    v1.Platform_Name `protobuf:"varint,3,opt,name=needs_for_platform,json=needsForPlatform,proto3,enum=tricium.Platform_Name" json:"needs_for_platform,omitempty"`
	Provides            v1.Data_Type     `protobuf:"varint,4,opt,name=provides,proto3,enum=tricium.Data_Type" json:"provides,omitempty"`
	ProvidesForPlatform v1.Platform_Name `protobuf:"varint,5,opt,name=provides_for_platform,json=providesForPlatform,proto3,enum=tricium.Platform_Name" json:"provides_for_platform,omitempty"`
	// Workers to run after this one.
	Next []string `protobuf:"bytes,6,rep,name=next,proto3" json:"next,omitempty"`
	// Name of the runtime platform configuration.
	RuntimePlatform v1.Platform_Name `protobuf:"varint,7,opt,name=runtime_platform,json=runtimePlatform,proto3,enum=tricium.Platform_Name" json:"runtime_platform,omitempty"`
	// Swarming dimensions for execution of the worker. These should be on the
	// form "key:value", using keys and values known to the swarming service.
	Dimensions []string `protobuf:"bytes,8,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	// List of cipd packages needed for the swarming task used to execute the
	// worker.
	CipdPackages []*v1.CipdPackage `protobuf:"bytes,9,rep,name=cipd_packages,json=cipdPackages,proto3" json:"cipd_packages,omitempty"`
	// Types that are valid to be assigned to Impl:
	//	*Worker_Cmd
	//	*Worker_Recipe
	Impl isWorker_Impl `protobuf_oneof:"impl"`
	// Deadline for execution of the worker in minutes. Note that this time
	// should include the overhead of triggering the corresponding swarming task
	// collecting result from it.
	Deadline             int32    `protobuf:"varint,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Worker) Reset()         { *m = Worker{} }
func (m *Worker) String() string { return proto.CompactTextString(m) }
func (*Worker) ProtoMessage()    {}
func (*Worker) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflow_1e47e277cca24c99, []int{1}
}
func (m *Worker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Worker.Unmarshal(m, b)
}
func (m *Worker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Worker.Marshal(b, m, deterministic)
}
func (dst *Worker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker.Merge(dst, src)
}
func (m *Worker) XXX_Size() int {
	return xxx_messageInfo_Worker.Size(m)
}
func (m *Worker) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker.DiscardUnknown(m)
}

var xxx_messageInfo_Worker proto.InternalMessageInfo

type isWorker_Impl interface {
	isWorker_Impl()
}

type Worker_Cmd struct {
	Cmd *v1.Cmd `protobuf:"bytes,10,opt,name=cmd,proto3,oneof"`
}
type Worker_Recipe struct {
	Recipe *v1.Recipe `protobuf:"bytes,12,opt,name=recipe,proto3,oneof"`
}

func (*Worker_Cmd) isWorker_Impl()    {}
func (*Worker_Recipe) isWorker_Impl() {}

func (m *Worker) GetImpl() isWorker_Impl {
	if m != nil {
		return m.Impl
	}
	return nil
}

func (m *Worker) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Worker) GetNeeds() v1.Data_Type {
	if m != nil {
		return m.Needs
	}
	return v1.Data_NONE
}

func (m *Worker) GetNeedsForPlatform() v1.Platform_Name {
	if m != nil {
		return m.NeedsForPlatform
	}
	return v1.Platform_ANY
}

func (m *Worker) GetProvides() v1.Data_Type {
	if m != nil {
		return m.Provides
	}
	return v1.Data_NONE
}

func (m *Worker) GetProvidesForPlatform() v1.Platform_Name {
	if m != nil {
		return m.ProvidesForPlatform
	}
	return v1.Platform_ANY
}

func (m *Worker) GetNext() []string {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *Worker) GetRuntimePlatform() v1.Platform_Name {
	if m != nil {
		return m.RuntimePlatform
	}
	return v1.Platform_ANY
}

func (m *Worker) GetDimensions() []string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *Worker) GetCipdPackages() []*v1.CipdPackage {
	if m != nil {
		return m.CipdPackages
	}
	return nil
}

func (m *Worker) GetCmd() *v1.Cmd {
	if x, ok := m.GetImpl().(*Worker_Cmd); ok {
		return x.Cmd
	}
	return nil
}

func (m *Worker) GetRecipe() *v1.Recipe {
	if x, ok := m.GetImpl().(*Worker_Recipe); ok {
		return x.Recipe
	}
	return nil
}

func (m *Worker) GetDeadline() int32 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Worker) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Worker_OneofMarshaler, _Worker_OneofUnmarshaler, _Worker_OneofSizer, []interface{}{
		(*Worker_Cmd)(nil),
		(*Worker_Recipe)(nil),
	}
}

func _Worker_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Worker)
	// impl
	switch x := m.Impl.(type) {
	case *Worker_Cmd:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cmd); err != nil {
			return err
		}
	case *Worker_Recipe:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Recipe); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Worker.Impl has unexpected type %T", x)
	}
	return nil
}

func _Worker_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Worker)
	switch tag {
	case 10: // impl.cmd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.Cmd)
		err := b.DecodeMessage(msg)
		m.Impl = &Worker_Cmd{msg}
		return true, err
	case 12: // impl.recipe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.Recipe)
		err := b.DecodeMessage(msg)
		m.Impl = &Worker_Recipe{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Worker_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Worker)
	// impl
	switch x := m.Impl.(type) {
	case *Worker_Cmd:
		s := proto.Size(x.Cmd)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Worker_Recipe:
		s := proto.Size(x.Recipe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Workflow)(nil), "admin.Workflow")
	proto.RegisterType((*Worker)(nil), "admin.Worker")
}

func init() {
	proto.RegisterFile("infra/tricium/api/admin/v1/workflow.proto", fileDescriptor_workflow_1e47e277cca24c99)
}

var fileDescriptor_workflow_1e47e277cca24c99 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4b, 0x6f, 0xd4, 0x3e,
	0x14, 0xc5, 0x9b, 0xff, 0x3c, 0x3a, 0xbd, 0xf3, 0xaa, 0xfc, 0x07, 0x14, 0xcd, 0x02, 0xa2, 0x22,
	0xd4, 0x74, 0x93, 0xa8, 0xc3, 0x8a, 0x65, 0xa1, 0x42, 0x15, 0x0b, 0x54, 0x05, 0xa4, 0x2e, 0x23,
	0x63, 0xdf, 0x54, 0x56, 0xe3, 0x87, 0x1c, 0xcf, 0x4c, 0xf9, 0x4c, 0xf0, 0x21, 0x51, 0x9c, 0xc7,
	0x14, 0x51, 0xcd, 0xce, 0x3e, 0xf7, 0x77, 0xcf, 0x3d, 0xbe, 0x32, 0x5c, 0x08, 0x55, 0x58, 0x9a,
	0x3a, 0x2b, 0x98, 0xd8, 0xc8, 0x94, 0x1a, 0x91, 0x52, 0x2e, 0x85, 0x4a, 0xb7, 0x97, 0xe9, 0x4e,
	0xdb, 0x87, 0xa2, 0xd4, 0xbb, 0xc4, 0x58, 0xed, 0x34, 0x19, 0xf9, 0xc2, 0xea, 0xcd, 0xbf, 0x1d,
	0xdb, 0xcb, 0x94, 0x53, 0x47, 0x1b, 0x6e, 0xf5, 0xf6, 0x59, 0xa0, 0xd8, 0x28, 0xe6, 0x84, 0x56,
	0x07, 0x21, 0x53, 0x52, 0x57, 0x68, 0x2b, 0x1b, 0xe8, 0xec, 0x77, 0x00, 0x93, 0xbb, 0x36, 0x04,
	0x39, 0x87, 0x65, 0x85, 0x76, 0x2b, 0x18, 0xe6, 0x94, 0x31, 0xbd, 0x51, 0x2e, 0x0c, 0xa2, 0x20,
	0x3e, 0xc9, 0x16, 0xad, 0x7c, 0xd5, 0xa8, 0xe4, 0x1c, 0x8e, 0xeb, 0xe4, 0x68, 0xab, 0xf0, 0xbf,
	0x68, 0x10, 0x4f, 0xd7, 0xf3, 0xc4, 0x27, 0x4f, 0xee, 0xbc, 0x9a, 0x75, 0x55, 0xef, 0xb8, 0xa3,
	0x56, 0x0a, 0x75, 0x9f, 0xd7, 0x1e, 0x68, 0xc3, 0x41, 0xeb, 0xd8, 0xca, 0xdf, 0xbc, 0x4a, 0xde,
	0xc1, 0x42, 0x54, 0xba, 0xa4, 0x0e, 0x3b, 0x6e, 0xe8, 0xb9, 0x79, 0xab, 0x36, 0xd8, 0xd9, 0xaf,
	0x21, 0x8c, 0x9b, 0x19, 0x84, 0xc0, 0x50, 0x51, 0x89, 0x6d, 0x42, 0x7f, 0x26, 0x31, 0x8c, 0x14,
	0x22, 0xaf, 0x53, 0x05, 0xf1, 0x62, 0x4d, 0x92, 0xf6, 0xf1, 0xc9, 0x75, 0xbd, 0xbb, 0xef, 0x3f,
	0x0d, 0x66, 0x0d, 0x40, 0xae, 0x81, 0xf8, 0x43, 0x5e, 0x68, 0x9b, 0x77, 0x3b, 0xf1, 0xd9, 0x16,
	0xeb, 0x57, 0x7d, 0xdb, 0x6d, 0xb7, 0xac, 0xaf, 0x54, 0x62, 0x76, 0xea, 0x3b, 0x3e, 0x6b, 0xdb,
	0xc9, 0x24, 0x81, 0x89, 0xb1, 0x7a, 0x2b, 0x38, 0x56, 0x3e, 0xef, 0xf3, 0x23, 0x7b, 0x86, 0x7c,
	0x81, 0x97, 0xdd, 0xf9, 0xef, 0xc1, 0xa3, 0x83, 0x83, 0xff, 0xef, 0x9a, 0x9e, 0xce, 0xae, 0xdf,
	0x8f, 0x8f, 0x2e, 0x1c, 0x47, 0x03, 0xff, 0x7e, 0x7c, 0x74, 0xe4, 0x0a, 0x4e, 0xed, 0x46, 0x39,
	0x21, 0x71, 0x6f, 0x7d, 0x7c, 0xd0, 0x7a, 0xd9, 0xf2, 0xbd, 0xed, 0x6b, 0x00, 0x2e, 0x24, 0xaa,
	0x4a, 0x68, 0x55, 0x85, 0x13, 0x6f, 0xfe, 0x44, 0x21, 0x1f, 0x60, 0xce, 0x84, 0xe1, 0xb9, 0xa1,
	0xec, 0x81, 0xde, 0x63, 0x15, 0x9e, 0xf8, 0x0f, 0xf0, 0xa2, 0xf7, 0xff, 0x24, 0x0c, 0xbf, 0x6d,
	0x8a, 0xd9, 0x8c, 0xed, 0x2f, 0x15, 0x89, 0x60, 0xc0, 0x24, 0x0f, 0x21, 0x0a, 0xe2, 0xe9, 0x7a,
	0xb6, 0x6f, 0x90, 0xfc, 0xe6, 0x28, 0xab, 0x4b, 0xe4, 0x02, 0xc6, 0x16, 0x99, 0x30, 0x18, 0xce,
	0x3c, 0xb4, 0xec, 0xa1, 0xcc, 0xcb, 0x37, 0x47, 0x59, 0x0b, 0x90, 0x15, 0x4c, 0x38, 0x52, 0x5e,
	0x0a, 0x85, 0xe1, 0x34, 0x0a, 0xe2, 0x51, 0xd6, 0xdf, 0x3f, 0x8e, 0x61, 0x28, 0xa4, 0x29, 0x7f,
	0x8c, 0xfd, 0x1f, 0x7f, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xb0, 0x8e, 0x7f, 0x82, 0x03,
	0x00, 0x00,
}
