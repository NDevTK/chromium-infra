// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rack_lse.proto

package fleet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RackLSE struct {
	Id          *LabSetupEnvID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrototypeId *RackPrototypeID `protobuf:"bytes,2,opt,name=prototype_id,json=prototypeId,proto3" json:"prototype_id,omitempty"`
	// Types that are valid to be assigned to Lse:
	//	*RackLSE_ChromeRackLse
	//	*RackLSE_ChromeosRackLse
	Lse                  isRackLSE_Lse `protobuf_oneof:"lse"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RackLSE) Reset()         { *m = RackLSE{} }
func (m *RackLSE) String() string { return proto.CompactTextString(m) }
func (*RackLSE) ProtoMessage()    {}
func (*RackLSE) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec346d1065a5819f, []int{0}
}

func (m *RackLSE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackLSE.Unmarshal(m, b)
}
func (m *RackLSE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackLSE.Marshal(b, m, deterministic)
}
func (m *RackLSE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackLSE.Merge(m, src)
}
func (m *RackLSE) XXX_Size() int {
	return xxx_messageInfo_RackLSE.Size(m)
}
func (m *RackLSE) XXX_DiscardUnknown() {
	xxx_messageInfo_RackLSE.DiscardUnknown(m)
}

var xxx_messageInfo_RackLSE proto.InternalMessageInfo

func (m *RackLSE) GetId() *LabSetupEnvID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RackLSE) GetPrototypeId() *RackPrototypeID {
	if m != nil {
		return m.PrototypeId
	}
	return nil
}

type isRackLSE_Lse interface {
	isRackLSE_Lse()
}

type RackLSE_ChromeRackLse struct {
	ChromeRackLse *ChromeRackLSE `protobuf:"bytes,3,opt,name=chrome_rack_lse,json=chromeRackLse,proto3,oneof"`
}

type RackLSE_ChromeosRackLse struct {
	ChromeosRackLse *ChromeOSRackLSE `protobuf:"bytes,4,opt,name=chromeos_rack_lse,json=chromeosRackLse,proto3,oneof"`
}

func (*RackLSE_ChromeRackLse) isRackLSE_Lse() {}

func (*RackLSE_ChromeosRackLse) isRackLSE_Lse() {}

func (m *RackLSE) GetLse() isRackLSE_Lse {
	if m != nil {
		return m.Lse
	}
	return nil
}

func (m *RackLSE) GetChromeRackLse() *ChromeRackLSE {
	if x, ok := m.GetLse().(*RackLSE_ChromeRackLse); ok {
		return x.ChromeRackLse
	}
	return nil
}

func (m *RackLSE) GetChromeosRackLse() *ChromeOSRackLSE {
	if x, ok := m.GetLse().(*RackLSE_ChromeosRackLse); ok {
		return x.ChromeosRackLse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RackLSE) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RackLSE_ChromeRackLse)(nil),
		(*RackLSE_ChromeosRackLse)(nil),
	}
}

type ChromeRackLSE struct {
	RpmHostnames         []*PeripheralHost `protobuf:"bytes,1,rep,name=rpm_hostnames,json=rpmHostnames,proto3" json:"rpm_hostnames,omitempty"`
	KvmHostnames         []*PeripheralHost `protobuf:"bytes,2,rep,name=kvm_hostnames,json=kvmHostnames,proto3" json:"kvm_hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChromeRackLSE) Reset()         { *m = ChromeRackLSE{} }
func (m *ChromeRackLSE) String() string { return proto.CompactTextString(m) }
func (*ChromeRackLSE) ProtoMessage()    {}
func (*ChromeRackLSE) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec346d1065a5819f, []int{1}
}

func (m *ChromeRackLSE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromeRackLSE.Unmarshal(m, b)
}
func (m *ChromeRackLSE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromeRackLSE.Marshal(b, m, deterministic)
}
func (m *ChromeRackLSE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromeRackLSE.Merge(m, src)
}
func (m *ChromeRackLSE) XXX_Size() int {
	return xxx_messageInfo_ChromeRackLSE.Size(m)
}
func (m *ChromeRackLSE) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromeRackLSE.DiscardUnknown(m)
}

var xxx_messageInfo_ChromeRackLSE proto.InternalMessageInfo

func (m *ChromeRackLSE) GetRpmHostnames() []*PeripheralHost {
	if m != nil {
		return m.RpmHostnames
	}
	return nil
}

func (m *ChromeRackLSE) GetKvmHostnames() []*PeripheralHost {
	if m != nil {
		return m.KvmHostnames
	}
	return nil
}

type ChromeOSRackLSE struct {
	Rpm                  []*RPM            `protobuf:"bytes,1,rep,name=rpm,proto3" json:"rpm,omitempty"`
	Switches             []*Switch         `protobuf:"bytes,2,rep,name=switches,proto3" json:"switches,omitempty"`
	RpmHostnames         []*PeripheralHost `protobuf:"bytes,3,rep,name=rpm_hostnames,json=rpmHostnames,proto3" json:"rpm_hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChromeOSRackLSE) Reset()         { *m = ChromeOSRackLSE{} }
func (m *ChromeOSRackLSE) String() string { return proto.CompactTextString(m) }
func (*ChromeOSRackLSE) ProtoMessage()    {}
func (*ChromeOSRackLSE) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec346d1065a5819f, []int{2}
}

func (m *ChromeOSRackLSE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromeOSRackLSE.Unmarshal(m, b)
}
func (m *ChromeOSRackLSE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromeOSRackLSE.Marshal(b, m, deterministic)
}
func (m *ChromeOSRackLSE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromeOSRackLSE.Merge(m, src)
}
func (m *ChromeOSRackLSE) XXX_Size() int {
	return xxx_messageInfo_ChromeOSRackLSE.Size(m)
}
func (m *ChromeOSRackLSE) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromeOSRackLSE.DiscardUnknown(m)
}

var xxx_messageInfo_ChromeOSRackLSE proto.InternalMessageInfo

func (m *ChromeOSRackLSE) GetRpm() []*RPM {
	if m != nil {
		return m.Rpm
	}
	return nil
}

func (m *ChromeOSRackLSE) GetSwitches() []*Switch {
	if m != nil {
		return m.Switches
	}
	return nil
}

func (m *ChromeOSRackLSE) GetRpmHostnames() []*PeripheralHost {
	if m != nil {
		return m.RpmHostnames
	}
	return nil
}

type PeripheralHost struct {
	HardwareId           string   `protobuf:"bytes,1,opt,name=hardware_id,json=hardwareId,proto3" json:"hardware_id,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeripheralHost) Reset()         { *m = PeripheralHost{} }
func (m *PeripheralHost) String() string { return proto.CompactTextString(m) }
func (*PeripheralHost) ProtoMessage()    {}
func (*PeripheralHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec346d1065a5819f, []int{3}
}

func (m *PeripheralHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeripheralHost.Unmarshal(m, b)
}
func (m *PeripheralHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeripheralHost.Marshal(b, m, deterministic)
}
func (m *PeripheralHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeripheralHost.Merge(m, src)
}
func (m *PeripheralHost) XXX_Size() int {
	return xxx_messageInfo_PeripheralHost.Size(m)
}
func (m *PeripheralHost) XXX_DiscardUnknown() {
	xxx_messageInfo_PeripheralHost.DiscardUnknown(m)
}

var xxx_messageInfo_PeripheralHost proto.InternalMessageInfo

func (m *PeripheralHost) GetHardwareId() string {
	if m != nil {
		return m.HardwareId
	}
	return ""
}

func (m *PeripheralHost) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func init() {
	proto.RegisterType((*RackLSE)(nil), "fleet.RackLSE")
	proto.RegisterType((*ChromeRackLSE)(nil), "fleet.ChromeRackLSE")
	proto.RegisterType((*ChromeOSRackLSE)(nil), "fleet.ChromeOSRackLSE")
	proto.RegisterType((*PeripheralHost)(nil), "fleet.PeripheralHost")
}

func init() { proto.RegisterFile("rack_lse.proto", fileDescriptor_ec346d1065a5819f) }

var fileDescriptor_ec346d1065a5819f = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4f, 0x6b, 0xa3, 0x40,
	0x14, 0x5f, 0x75, 0xb3, 0x49, 0x9e, 0x31, 0x21, 0xb3, 0x7f, 0x90, 0xb0, 0xb0, 0x41, 0xf6, 0x90,
	0xbd, 0x78, 0xc8, 0x9e, 0x76, 0x0b, 0x3d, 0xa4, 0x09, 0x44, 0x48, 0x68, 0x18, 0x6f, 0xbd, 0x88,
	0xd1, 0x29, 0x8a, 0x1a, 0x87, 0x19, 0x9b, 0xd0, 0x4f, 0xd0, 0x6f, 0xd0, 0xaf, 0xda, 0x6b, 0x71,
	0x32, 0x6a, 0x6d, 0xa1, 0xf4, 0xe6, 0x7b, 0xbf, 0x7f, 0xef, 0x8d, 0x0f, 0x86, 0xcc, 0x0f, 0x12,
	0x2f, 0xe5, 0xc4, 0xa6, 0x2c, 0x2f, 0x72, 0xd4, 0xb9, 0x4d, 0x09, 0x29, 0x26, 0x63, 0x4a, 0x58,
	0x4c, 0x23, 0xc2, 0xfc, 0x94, 0x9f, 0x91, 0xc9, 0x20, 0xe5, 0xc4, 0x8b, 0x43, 0x59, 0x7d, 0x2d,
	0x2b, 0xf1, 0x59, 0xdc, 0x53, 0x29, 0xb6, 0x9e, 0x14, 0xe8, 0x62, 0x3f, 0x48, 0x36, 0xee, 0x0a,
	0xfd, 0x06, 0x35, 0x0e, 0x4d, 0x65, 0xaa, 0xcc, 0xf4, 0xf9, 0x37, 0x5b, 0xb8, 0xda, 0x1b, 0x7f,
	0xef, 0x92, 0xe2, 0x8e, 0xae, 0x0e, 0x47, 0x67, 0x89, 0xd5, 0x38, 0x44, 0xff, 0x60, 0x50, 0x9b,
	0x78, 0x71, 0x68, 0xaa, 0x82, 0xff, 0x43, 0xf2, 0x4b, 0xaf, 0x5d, 0x05, 0x3b, 0x4b, 0xac, 0xd7,
	0x5c, 0x27, 0x44, 0x97, 0x30, 0x0a, 0x22, 0x96, 0x67, 0xc4, 0xab, 0x56, 0x30, 0xb5, 0x56, 0xda,
	0x95, 0x40, 0xe5, 0x3c, 0xeb, 0x4f, 0xd8, 0x08, 0x9a, 0x06, 0x27, 0x68, 0x09, 0xe3, 0x73, 0x23,
	0xe7, 0x8d, 0xc3, 0xe7, 0x56, 0xfe, 0xd9, 0xe1, 0xda, 0x6d, 0x3c, 0x46, 0x95, 0x44, 0xba, 0x2c,
	0x3a, 0xa0, 0xa5, 0x9c, 0x58, 0x0f, 0x0a, 0x18, 0xad, 0x3c, 0xf4, 0x1f, 0x0c, 0x46, 0x33, 0x2f,
	0xca, 0x79, 0x71, 0xf0, 0x33, 0xc2, 0x4d, 0x65, 0xaa, 0xcd, 0xf4, 0xf9, 0x77, 0x69, 0xbd, 0xab,
	0xdf, 0x77, 0x9d, 0xf3, 0x02, 0x0f, 0x18, 0xcd, 0xd6, 0x15, 0xb5, 0xd4, 0x26, 0xc7, 0x97, 0x5a,
	0xf5, 0x5d, 0x6d, 0x72, 0x6c, 0xb4, 0xd6, 0xa3, 0x02, 0xa3, 0x57, 0x73, 0xa3, 0x9f, 0xa0, 0x31,
	0x9a, 0xc9, 0x09, 0xa0, 0x7a, 0xdc, 0xdd, 0x16, 0x97, 0x6d, 0xf4, 0x07, 0x7a, 0xfc, 0x14, 0x17,
	0x41, 0x54, 0x07, 0x19, 0x92, 0xe2, 0x8a, 0x36, 0xae, 0xe1, 0xb7, 0x4b, 0x69, 0x1f, 0x5e, 0xca,
	0xda, 0xc2, 0xb0, 0x8d, 0xa3, 0x5f, 0xa0, 0x47, 0x3e, 0x0b, 0x4f, 0x3e, 0x13, 0xff, 0xbe, 0xbc,
	0x95, 0x3e, 0x86, 0xaa, 0xe5, 0x84, 0x68, 0x02, 0xbd, 0x2a, 0x4a, 0x5c, 0x46, 0x1f, 0xd7, 0xf5,
	0xa2, 0x7f, 0xd3, 0xb5, 0x2f, 0x44, 0xec, 0xfe, 0x8b, 0x38, 0x8b, 0xbf, 0xcf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd3, 0x32, 0x5f, 0xca, 0xcc, 0x02, 0x00, 0x00,
}
