// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/api_proto/issue_objects.proto

package monorail_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// States that an issue or its comments can be in (aip.dev/216).
// Next available tag: 4
type IssueContentState int32

const (
	// The default value. This value is used if the state is omitted.
	IssueContentState_STATE_UNSPECIFIED IssueContentState = 0
	// The Issue or Comment is available.
	IssueContentState_ACTIVE IssueContentState = 1
	// The Issue or Comment has been deleted.
	IssueContentState_DELETED IssueContentState = 2
	// The Issue or Comment has been flagged as spam.
	IssueContentState_SPAM IssueContentState = 3
)

var IssueContentState_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "ACTIVE",
	2: "DELETED",
	3: "SPAM",
}

var IssueContentState_value = map[string]int32{
	"STATE_UNSPECIFIED": 0,
	"ACTIVE":            1,
	"DELETED":           2,
	"SPAM":              3,
}

func (x IssueContentState) String() string {
	return proto.EnumName(IssueContentState_name, int32(x))
}

func (IssueContentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3be6850bd655a92b, []int{0}
}

// Documents and tracks a bug, task, or feature request within a Project.
// Next available tag: 3
type Issue struct {
	// Resource name of the issue.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// TODO(monorail:6988): The UI limits summary length while the backend does
	// not. Resolve this discrepancy.
	Summary              string   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Issue) Reset()         { *m = Issue{} }
func (m *Issue) String() string { return proto.CompactTextString(m) }
func (*Issue) ProtoMessage()    {}
func (*Issue) Descriptor() ([]byte, []int) {
	return fileDescriptor_3be6850bd655a92b, []int{0}
}

func (m *Issue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Issue.Unmarshal(m, b)
}
func (m *Issue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Issue.Marshal(b, m, deterministic)
}
func (m *Issue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Issue.Merge(m, src)
}
func (m *Issue) XXX_Size() int {
	return xxx_messageInfo_Issue.Size(m)
}
func (m *Issue) XXX_DiscardUnknown() {
	xxx_messageInfo_Issue.DiscardUnknown(m)
}

var xxx_messageInfo_Issue proto.InternalMessageInfo

func (m *Issue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Issue) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

// Specifies a column in an issues list view.
// Next available tag: 2
type IssuesListColumn struct {
	// Column name shown in the column header.
	Column               string   `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuesListColumn) Reset()         { *m = IssuesListColumn{} }
func (m *IssuesListColumn) String() string { return proto.CompactTextString(m) }
func (*IssuesListColumn) ProtoMessage()    {}
func (*IssuesListColumn) Descriptor() ([]byte, []int) {
	return fileDescriptor_3be6850bd655a92b, []int{1}
}

func (m *IssuesListColumn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuesListColumn.Unmarshal(m, b)
}
func (m *IssuesListColumn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuesListColumn.Marshal(b, m, deterministic)
}
func (m *IssuesListColumn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuesListColumn.Merge(m, src)
}
func (m *IssuesListColumn) XXX_Size() int {
	return xxx_messageInfo_IssuesListColumn.Size(m)
}
func (m *IssuesListColumn) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuesListColumn.DiscardUnknown(m)
}

var xxx_messageInfo_IssuesListColumn proto.InternalMessageInfo

func (m *IssuesListColumn) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

// Represents a comment and any associated changes to an Issue.
//
// Comments cannot be Created or Updated through standard methods. The
// OUTPUT_ONLY annotations here indicate fields that would never be provided
// by the user even if these methods were made available.
// Next available tag: 7
type Comment struct {
	// Resource name of the comment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The state of the comment.
	State IssueContentState `protobuf:"varint,2,opt,name=state,proto3,enum=monorail.v1.IssueContentState" json:"state,omitempty"`
	// The text of the comment.
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// Resource name of the author of the comment.
	Commenter string `protobuf:"bytes,4,opt,name=commenter,proto3" json:"commenter,omitempty"`
	// The time this comment was added to the Issue.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Optional string full text of an email that caused this comment to be added.
	InboundMessage       string   `protobuf:"bytes,6,opt,name=inbound_message,json=inboundMessage,proto3" json:"inbound_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3be6850bd655a92b, []int{2}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Comment) GetState() IssueContentState {
	if m != nil {
		return m.State
	}
	return IssueContentState_STATE_UNSPECIFIED
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetCommenter() string {
	if m != nil {
		return m.Commenter
	}
	return ""
}

func (m *Comment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Comment) GetInboundMessage() string {
	if m != nil {
		return m.InboundMessage
	}
	return ""
}

// The value of an approval for an issue.
// Next available tag: 2
type ApprovalValue struct {
	// The resource name of the approval value.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApprovalValue) Reset()         { *m = ApprovalValue{} }
func (m *ApprovalValue) String() string { return proto.CompactTextString(m) }
func (*ApprovalValue) ProtoMessage()    {}
func (*ApprovalValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_3be6850bd655a92b, []int{3}
}

func (m *ApprovalValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalValue.Unmarshal(m, b)
}
func (m *ApprovalValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalValue.Marshal(b, m, deterministic)
}
func (m *ApprovalValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalValue.Merge(m, src)
}
func (m *ApprovalValue) XXX_Size() int {
	return xxx_messageInfo_ApprovalValue.Size(m)
}
func (m *ApprovalValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalValue.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalValue proto.InternalMessageInfo

func (m *ApprovalValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("monorail.v1.IssueContentState", IssueContentState_name, IssueContentState_value)
	proto.RegisterType((*Issue)(nil), "monorail.v1.Issue")
	proto.RegisterType((*IssuesListColumn)(nil), "monorail.v1.IssuesListColumn")
	proto.RegisterType((*Comment)(nil), "monorail.v1.Comment")
	proto.RegisterType((*ApprovalValue)(nil), "monorail.v1.ApprovalValue")
}

func init() {
	proto.RegisterFile("api/v1/api_proto/issue_objects.proto", fileDescriptor_3be6850bd655a92b)
}

var fileDescriptor_3be6850bd655a92b = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0x36, 0xbf, 0xed, 0x04, 0x6b, 0xba, 0x5a, 0x39, 0x22, 0x68, 0x08, 0x22, 0xa5, 0x94, 0x5b,
	0x5a, 0x05, 0x35, 0xbe, 0x78, 0x4d, 0x4e, 0x08, 0x34, 0x12, 0x92, 0xb4, 0x0f, 0x82, 0x1c, 0x7b,
	0xd7, 0x6d, 0x3c, 0xb9, 0xbd, 0x3d, 0x77, 0xf7, 0x02, 0x12, 0xf2, 0xe2, 0x5f, 0xda, 0xe7, 0x3c,
	0xf8, 0x07, 0xf8, 0x24, 0xb7, 0xbb, 0xc1, 0x06, 0x5b, 0x7c, 0xba, 0xf9, 0x66, 0xbe, 0xef, 0xe6,
	0x9b, 0x99, 0x85, 0x17, 0x24, 0x8b, 0xf1, 0xe2, 0x18, 0x93, 0x2c, 0x0e, 0x32, 0xc1, 0x15, 0xc7,
	0xb1, 0x94, 0x39, 0x0d, 0x78, 0xf8, 0x8d, 0x46, 0x4a, 0xba, 0x3a, 0x87, 0x9a, 0x8c, 0xa7, 0x5c,
	0x90, 0x38, 0x71, 0x17, 0xc7, 0xed, 0xa3, 0x39, 0xe7, 0xf3, 0x84, 0x5a, 0xba, 0x01, 0x85, 0x1e,
	0x5f, 0xc5, 0x34, 0xb9, 0x0c, 0x42, 0xfa, 0x95, 0x2c, 0x62, 0x2e, 0x8c, 0xb4, 0xfd, 0xf2, 0x2e,
	0xb6, 0xa0, 0x92, 0xe7, 0x22, 0xa2, 0x96, 0xf7, 0xdc, 0x96, 0x34, 0x0a, 0xf3, 0x2b, 0xac, 0x62,
	0x46, 0xa5, 0x22, 0x2c, 0x33, 0x84, 0xee, 0x77, 0xa8, 0x0d, 0x0b, 0x6b, 0x08, 0x41, 0x35, 0x25,
	0x8c, 0x3a, 0xa5, 0x4e, 0xe9, 0x60, 0x67, 0xa2, 0x63, 0xe4, 0x40, 0x43, 0xe6, 0x8c, 0x11, 0xf1,
	0xc3, 0x29, 0xeb, 0xf4, 0x06, 0xf6, 0x7a, 0x6b, 0xef, 0x0d, 0x3c, 0x22, 0x59, 0xec, 0x46, 0x22,
	0xcc, 0xe7, 0x6e, 0xc4, 0x19, 0x36, 0xff, 0xe9, 0x64, 0x82, 0x17, 0x43, 0xe2, 0xa5, 0x0d, 0x56,
	0x66, 0x76, 0x89, 0x97, 0xfa, 0xbb, 0xea, 0x1e, 0x42, 0x4b, 0x53, 0xe5, 0x59, 0x2c, 0x55, 0x9f,
	0x27, 0x39, 0x4b, 0xd1, 0x13, 0xa8, 0x47, 0x3a, 0xb2, 0xfd, 0x2d, 0xea, 0xfe, 0x2a, 0x43, 0xa3,
	0xcf, 0x19, 0xa3, 0xa9, 0xba, 0xd5, 0xe1, 0x3b, 0xa8, 0x49, 0x45, 0x14, 0xd5, 0xfe, 0x76, 0x4f,
	0x9e, 0xb9, 0x37, 0x56, 0xea, 0xea, 0x2e, 0x7d, 0x9e, 0x2a, 0x9a, 0xaa, 0x69, 0xc1, 0x3a, 0xad,
	0x5c, 0x7b, 0x95, 0x89, 0x51, 0x14, 0xc3, 0x45, 0xa6, 0xe6, 0x54, 0xcc, 0x70, 0x16, 0xa2, 0xb7,
	0xb0, 0x13, 0x99, 0x9e, 0x54, 0x38, 0xd5, 0xa2, 0x76, 0xda, 0xbe, 0xf6, 0x2a, 0xbf, 0xbd, 0xc7,
	0x80, 0xb6, 0x47, 0x3e, 0x97, 0x54, 0x4c, 0xfe, 0x92, 0xd1, 0x07, 0x68, 0x46, 0x82, 0x12, 0x45,
	0x83, 0x62, 0xcf, 0x4e, 0xad, 0x53, 0x3a, 0x68, 0x9e, 0xb4, 0x5d, 0x73, 0x04, 0x77, 0x73, 0x04,
	0x77, 0xb6, 0x39, 0x82, 0x31, 0x04, 0x46, 0x53, 0x64, 0xd1, 0x11, 0x3c, 0x8c, 0xd3, 0x90, 0xe7,
	0xe9, 0x65, 0xc0, 0xa8, 0x94, 0x64, 0x4e, 0x9d, 0xba, 0x76, 0xa0, 0x99, 0xbb, 0xb6, 0x36, 0x32,
	0xa5, 0xde, 0x78, 0xed, 0x8d, 0x60, 0x7f, 0xdb, 0xd3, 0x66, 0x5d, 0xaf, 0xed, 0xfe, 0xe5, 0x9d,
	0x97, 0xc0, 0xd6, 0xb8, 0xc4, 0x4b, 0x1b, 0xad, 0xba, 0x3f, 0x4b, 0xf0, 0xc0, 0xcb, 0x32, 0xc1,
	0x17, 0x24, 0xb9, 0x20, 0xc9, 0xed, 0x0f, 0xa3, 0xf7, 0x65, 0xed, 0x7d, 0x86, 0xa7, 0xdb, 0x7d,
	0xb7, 0x55, 0xef, 0xff, 0xdf, 0x9d, 0xdc, 0x14, 0x48, 0xbc, 0xdc, 0xe0, 0xd5, 0xe1, 0x08, 0xf6,
	0xfe, 0xb9, 0x1d, 0xda, 0x87, 0xbd, 0xe9, 0xcc, 0x9b, 0xf9, 0xc1, 0xf9, 0xa7, 0xe9, 0xd8, 0xef,
	0x0f, 0x3f, 0x0e, 0xfd, 0x41, 0xeb, 0x1e, 0x02, 0xa8, 0x7b, 0xfd, 0xd9, 0xf0, 0xc2, 0x6f, 0x95,
	0x50, 0x13, 0x1a, 0x03, 0xff, 0xcc, 0x9f, 0xf9, 0x83, 0x56, 0x19, 0xdd, 0x87, 0xea, 0x74, 0xec,
	0x8d, 0x5a, 0x95, 0xb0, 0xae, 0x17, 0xff, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x2a,
	0x1e, 0xaa, 0x96, 0x03, 0x00, 0x00,
}
