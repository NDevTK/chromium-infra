// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/api_proto/user_objects.proto

package monorail_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The global site role for a User.
// Next available tag: 3
type UserSettings_SiteRole int32

const (
	// Default value. This value is unused.
	UserSettings_SITE_ROLE_UNSPECIFIED UserSettings_SiteRole = 0
	// Normal site user with no special site-wide extra permissions.
	UserSettings_NORMAL UserSettings_SiteRole = 1
	// Site-wide admin role.
	UserSettings_ADMIN UserSettings_SiteRole = 2
)

var UserSettings_SiteRole_name = map[int32]string{
	0: "SITE_ROLE_UNSPECIFIED",
	1: "NORMAL",
	2: "ADMIN",
}

var UserSettings_SiteRole_value = map[string]int32{
	"SITE_ROLE_UNSPECIFIED": 0,
	"NORMAL":                1,
	"ADMIN":                 2,
}

func (x UserSettings_SiteRole) String() string {
	return proto.EnumName(UserSettings_SiteRole_name, int32(x))
}

func (UserSettings_SiteRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8c6722b190bb817, []int{1, 0}
}

// Subscription mode of this saved query
// Next available tag: 3
type UserSavedQuery_SubscriptionMode int32

const (
	// Default API value. This value is unused.
	UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED UserSavedQuery_SubscriptionMode = 0
	// Do not subscribe to notifications.
	UserSavedQuery_NO_NOTIFICATION UserSavedQuery_SubscriptionMode = 1
	// Subscribe to notifications.
	UserSavedQuery_IMMEDIATE_NOTIFICATION UserSavedQuery_SubscriptionMode = 2
)

var UserSavedQuery_SubscriptionMode_name = map[int32]string{
	0: "SUBSCRIPTION_MODE_UNSPECIFIED",
	1: "NO_NOTIFICATION",
	2: "IMMEDIATE_NOTIFICATION",
}

var UserSavedQuery_SubscriptionMode_value = map[string]int32{
	"SUBSCRIPTION_MODE_UNSPECIFIED": 0,
	"NO_NOTIFICATION":               1,
	"IMMEDIATE_NOTIFICATION":        2,
}

func (x UserSavedQuery_SubscriptionMode) String() string {
	return proto.EnumName(UserSavedQuery_SubscriptionMode_name, int32(x))
}

func (UserSavedQuery_SubscriptionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8c6722b190bb817, []int{2, 0}
}

// User represents a user of the Monorail site.
// Next available tag: 4
type User struct {
	// Resource name of the user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Obscured or un-obscured user email or name to show other users using the site.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// User-written indication of their availability or working hours.
	AvailabilityMessage  string   `protobuf:"bytes,3,opt,name=availability_message,json=availabilityMessage,proto3" json:"availability_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8c6722b190bb817, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetAvailabilityMessage() string {
	if m != nil {
		return m.AvailabilityMessage
	}
	return ""
}

// UserSettings represents preferences and account settings of a User.
// Next available tag: 4
type UserSettings struct {
	// Resource name of the user that has these settings.
	Name     string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SiteRole UserSettings_SiteRole `protobuf:"varint,2,opt,name=site_role,json=siteRole,proto3,enum=monorail.v1.UserSettings_SiteRole" json:"site_role,omitempty"`
	// Resource name of a linked primary User.
	LinkedPrimaryUser    string   `protobuf:"bytes,3,opt,name=linked_primary_user,json=linkedPrimaryUser,proto3" json:"linked_primary_user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSettings) Reset()         { *m = UserSettings{} }
func (m *UserSettings) String() string { return proto.CompactTextString(m) }
func (*UserSettings) ProtoMessage()    {}
func (*UserSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8c6722b190bb817, []int{1}
}

func (m *UserSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSettings.Unmarshal(m, b)
}
func (m *UserSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSettings.Marshal(b, m, deterministic)
}
func (m *UserSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSettings.Merge(m, src)
}
func (m *UserSettings) XXX_Size() int {
	return xxx_messageInfo_UserSettings.Size(m)
}
func (m *UserSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSettings.DiscardUnknown(m)
}

var xxx_messageInfo_UserSettings proto.InternalMessageInfo

func (m *UserSettings) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserSettings) GetSiteRole() UserSettings_SiteRole {
	if m != nil {
		return m.SiteRole
	}
	return UserSettings_SITE_ROLE_UNSPECIFIED
}

func (m *UserSettings) GetLinkedPrimaryUser() string {
	if m != nil {
		return m.LinkedPrimaryUser
	}
	return ""
}

// Defines saved queries that belong to a user
//
// Next available tag: 6
type UserSavedQuery struct {
	// Resource name of this saved query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this saved query, ie 'open issues'.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Search term of this saved query.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// List of projects this query can be searched in.
	Projects             []string                        `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	SubscriptionMode     UserSavedQuery_SubscriptionMode `protobuf:"varint,5,opt,name=subscription_mode,json=subscriptionMode,proto3,enum=monorail.v1.UserSavedQuery_SubscriptionMode" json:"subscription_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UserSavedQuery) Reset()         { *m = UserSavedQuery{} }
func (m *UserSavedQuery) String() string { return proto.CompactTextString(m) }
func (*UserSavedQuery) ProtoMessage()    {}
func (*UserSavedQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8c6722b190bb817, []int{2}
}

func (m *UserSavedQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSavedQuery.Unmarshal(m, b)
}
func (m *UserSavedQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSavedQuery.Marshal(b, m, deterministic)
}
func (m *UserSavedQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSavedQuery.Merge(m, src)
}
func (m *UserSavedQuery) XXX_Size() int {
	return xxx_messageInfo_UserSavedQuery.Size(m)
}
func (m *UserSavedQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSavedQuery.DiscardUnknown(m)
}

var xxx_messageInfo_UserSavedQuery proto.InternalMessageInfo

func (m *UserSavedQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserSavedQuery) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserSavedQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *UserSavedQuery) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *UserSavedQuery) GetSubscriptionMode() UserSavedQuery_SubscriptionMode {
	if m != nil {
		return m.SubscriptionMode
	}
	return UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("monorail.v1.UserSettings_SiteRole", UserSettings_SiteRole_name, UserSettings_SiteRole_value)
	proto.RegisterEnum("monorail.v1.UserSavedQuery_SubscriptionMode", UserSavedQuery_SubscriptionMode_name, UserSavedQuery_SubscriptionMode_value)
	proto.RegisterType((*User)(nil), "monorail.v1.User")
	proto.RegisterType((*UserSettings)(nil), "monorail.v1.UserSettings")
	proto.RegisterType((*UserSavedQuery)(nil), "monorail.v1.UserSavedQuery")
}

func init() {
	proto.RegisterFile("api/v1/api_proto/user_objects.proto", fileDescriptor_b8c6722b190bb817)
}

var fileDescriptor_b8c6722b190bb817 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x5d, 0x4f, 0xdb, 0x30,
	0x14, 0x5d, 0x5b, 0x40, 0x70, 0x41, 0x50, 0xcc, 0xc7, 0xba, 0x8a, 0x69, 0xd0, 0x69, 0x88, 0x49,
	0x28, 0x11, 0x63, 0xda, 0x24, 0x34, 0x69, 0x72, 0x69, 0x91, 0x32, 0x91, 0xa4, 0x4b, 0xca, 0xc3,
	0x9e, 0x2c, 0xa7, 0x31, 0x9d, 0xb7, 0xa4, 0xce, 0xec, 0xb4, 0x52, 0x85, 0xf8, 0x2d, 0x7b, 0xdb,
	0x5f, 0xd9, 0xdf, 0xe0, 0x99, 0x9f, 0xc0, 0xd3, 0x94, 0x0f, 0x58, 0x5a, 0xba, 0xbd, 0xf9, 0xde,
	0x73, 0x8e, 0x73, 0xef, 0x39, 0x0e, 0xbc, 0xa4, 0x11, 0xd7, 0x47, 0x47, 0x3a, 0x8d, 0x38, 0x89,
	0xa4, 0x88, 0x85, 0x3e, 0x54, 0x4c, 0x12, 0xe1, 0x7d, 0x63, 0xbd, 0x58, 0x69, 0x69, 0x0b, 0x2d,
	0x87, 0x62, 0x20, 0x24, 0xe5, 0x81, 0x36, 0x3a, 0xaa, 0xef, 0xf7, 0x85, 0xe8, 0x07, 0x2c, 0x67,
	0x67, 0x45, 0x22, 0xd7, 0x25, 0x53, 0x62, 0x28, 0x7b, 0x2c, 0x13, 0xd5, 0x0f, 0xff, 0xc5, 0xbb,
	0xe4, 0x2c, 0xf0, 0x89, 0xc7, 0xbe, 0xd2, 0x11, 0x17, 0x32, 0x63, 0x37, 0x7e, 0x96, 0x60, 0xee,
	0x42, 0x31, 0x89, 0x10, 0xcc, 0x0d, 0x68, 0xc8, 0x6a, 0xa5, 0xdd, 0xd2, 0xc1, 0x92, 0x93, 0x9e,
	0xd1, 0x3e, 0xac, 0xf8, 0x5c, 0x45, 0x01, 0x1d, 0x93, 0x14, 0x2b, 0x27, 0x58, 0xb3, 0x72, 0x83,
	0x2b, 0xce, 0x72, 0x0e, 0x58, 0x09, 0xef, 0x08, 0x36, 0xe9, 0x88, 0xf2, 0x80, 0x7a, 0x3c, 0xe0,
	0xf1, 0x98, 0x84, 0x4c, 0x29, 0xda, 0x67, 0xb5, 0x4a, 0x7a, 0xd7, 0x46, 0x11, 0x33, 0x33, 0xe8,
	0xe4, 0xe0, 0x16, 0xbf, 0x02, 0x44, 0x23, 0xae, 0xf5, 0xa4, 0x37, 0xec, 0x6b, 0x3d, 0x11, 0xea,
	0xe9, 0x1c, 0x6b, 0x89, 0x0f, 0x4a, 0xbf, 0x4a, 0xed, 0xe0, 0xfe, 0x75, 0xe3, 0x77, 0x19, 0x56,
	0x12, 0xc4, 0x65, 0x71, 0xcc, 0x07, 0x7d, 0x85, 0x8e, 0x8b, 0x93, 0x36, 0x5f, 0xdc, 0xe1, 0x1d,
	0xa8, 0x3f, 0xbe, 0xe8, 0x9e, 0x9e, 0xaf, 0xf2, 0x11, 0x96, 0x14, 0x8f, 0x19, 0x91, 0x22, 0xc8,
	0xf6, 0x58, 0x7d, 0xd3, 0xd0, 0x0a, 0xf6, 0x6a, 0x45, 0x8d, 0xe6, 0xf2, 0x98, 0x39, 0x22, 0x60,
	0xce, 0xa2, 0xca, 0x4f, 0xe8, 0x13, 0x6c, 0x04, 0x7c, 0xf0, 0x9d, 0xf9, 0x24, 0x92, 0x3c, 0xa4,
	0x72, 0x4c, 0x92, 0x09, 0xb3, 0x15, 0x9b, 0xf5, 0x1b, 0x5c, 0xb9, 0xc3, 0x9b, 0xb3, 0x16, 0x72,
	0xd6, 0x33, 0x59, 0x27, 0x53, 0x25, 0xad, 0xc6, 0x07, 0x58, 0xbc, 0xff, 0x02, 0x7a, 0x06, 0x5b,
	0xae, 0xd1, 0x6d, 0x13, 0xc7, 0x3e, 0x6f, 0x93, 0x0b, 0xcb, 0xed, 0xb4, 0x4f, 0x8d, 0x33, 0xa3,
	0xdd, 0xaa, 0x3e, 0x41, 0x00, 0x0b, 0x96, 0xed, 0x98, 0xf8, 0xbc, 0x5a, 0x42, 0x4b, 0x30, 0x8f,
	0x5b, 0xa6, 0x61, 0x55, 0xcb, 0x27, 0xef, 0x6f, 0xf1, 0xdb, 0xff, 0x6d, 0x8c, 0xb6, 0x53, 0x0b,
	0xf3, 0xaa, 0xe0, 0xe4, 0xaf, 0x0a, 0xac, 0xa6, 0x44, 0x3a, 0x62, 0xfe, 0xe7, 0x21, 0x93, 0xe3,
	0x99, 0xa9, 0xef, 0xcd, 0x4a, 0x7d, 0x32, 0xf0, 0x4d, 0x98, 0xff, 0x91, 0xe8, 0xf3, 0x84, 0xb3,
	0x02, 0xbd, 0x83, 0xc5, 0x48, 0x8a, 0xf4, 0x01, 0xd7, 0xe6, 0x76, 0x2b, 0x89, 0x2f, 0x77, 0xf8,
	0x29, 0x6c, 0x4d, 0x8e, 0xda, 0xc9, 0x28, 0xce, 0x03, 0x17, 0x7d, 0x81, 0x75, 0x35, 0xf4, 0x54,
	0x4f, 0xf2, 0x28, 0xe6, 0x62, 0x40, 0x42, 0xe1, 0xb3, 0xda, 0x7c, 0x9a, 0xd1, 0xe1, 0xe3, 0x8c,
	0x1e, 0x86, 0xd7, 0xdc, 0x82, 0xc8, 0x14, 0x3e, 0x73, 0xaa, 0x6a, 0xaa, 0xd3, 0xb8, 0x84, 0xea,
	0x34, 0x0b, 0xed, 0xc1, 0x73, 0xf7, 0xa2, 0xe9, 0x9e, 0x3a, 0x46, 0xa7, 0x6b, 0xd8, 0x16, 0x31,
	0xed, 0xd6, 0xb4, 0xf3, 0x1b, 0xb0, 0x66, 0xd9, 0xc4, 0xb2, 0xbb, 0xc6, 0x99, 0x71, 0x8a, 0x13,
	0x56, 0xb5, 0x84, 0xea, 0xb0, 0x6d, 0x98, 0x66, 0xbb, 0x65, 0xe0, 0x6e, 0x7b, 0x12, 0x2b, 0x9f,
	0x9c, 0xdf, 0x62, 0x03, 0x76, 0x66, 0x64, 0xf2, 0xd7, 0xea, 0xd7, 0x53, 0x0f, 0x5b, 0x57, 0xf7,
	0x18, 0x67, 0x4a, 0xbf, 0x7a, 0xa8, 0xc6, 0xd7, 0xde, 0x42, 0xfa, 0x6f, 0x1e, 0xff, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x5e, 0xb4, 0xf7, 0x69, 0x25, 0x04, 0x00, 0x00,
}
