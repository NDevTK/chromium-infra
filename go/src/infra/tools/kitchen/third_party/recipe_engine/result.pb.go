// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tools/kitchen/third_party/recipe_engine/result.proto

package recipe_engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The result of a recipe execution.
type Result struct {
	// Types that are valid to be assigned to OneofResult:
	//	*Result_JsonResult
	//	*Result_Failure
	OneofResult isResult_OneofResult `protobuf_oneof:"oneof_result"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isResult_OneofResult interface {
	isResult_OneofResult()
}

type Result_JsonResult struct {
	JsonResult string `protobuf:"bytes,1,opt,name=json_result,json=jsonResult,oneof"`
}
type Result_Failure struct {
	Failure *Failure `protobuf:"bytes,2,opt,name=failure,oneof"`
}

func (*Result_JsonResult) isResult_OneofResult() {}
func (*Result_Failure) isResult_OneofResult()    {}

func (m *Result) GetOneofResult() isResult_OneofResult {
	if m != nil {
		return m.OneofResult
	}
	return nil
}

func (m *Result) GetJsonResult() string {
	if x, ok := m.GetOneofResult().(*Result_JsonResult); ok {
		return x.JsonResult
	}
	return ""
}

func (m *Result) GetFailure() *Failure {
	if x, ok := m.GetOneofResult().(*Result_Failure); ok {
		return x.Failure
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Result) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Result_OneofMarshaler, _Result_OneofUnmarshaler, _Result_OneofSizer, []interface{}{
		(*Result_JsonResult)(nil),
		(*Result_Failure)(nil),
	}
}

func _Result_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Result)
	// oneof_result
	switch x := m.OneofResult.(type) {
	case *Result_JsonResult:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonResult)
	case *Result_Failure:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Failure); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Result.OneofResult has unexpected type %T", x)
	}
	return nil
}

func _Result_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Result)
	switch tag {
	case 1: // oneof_result.json_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.OneofResult = &Result_JsonResult{x}
		return true, err
	case 2: // oneof_result.failure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Failure)
		err := b.DecodeMessage(msg)
		m.OneofResult = &Result_Failure{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Result_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Result)
	// oneof_result
	switch x := m.OneofResult.(type) {
	case *Result_JsonResult:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.JsonResult)))
		n += len(x.JsonResult)
	case *Result_Failure:
		s := proto.Size(x.Failure)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Failure struct {
	// A reason readable by humans. Printed to the UI, and will be seen by users.
	HumanReason string `protobuf:"bytes,1,opt,name=human_reason,json=humanReason" json:"human_reason,omitempty"`
	// The cause of this failure.
	//
	// Types that are valid to be assigned to FailureType:
	//	*Failure_Timeout
	//	*Failure_Exception
	//	*Failure_StepData
	//	*Failure_Failure
	FailureType isFailure_FailureType `protobuf_oneof:"failure_type"`
}

func (m *Failure) Reset()                    { *m = Failure{} }
func (m *Failure) String() string            { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()               {}
func (*Failure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type isFailure_FailureType interface {
	isFailure_FailureType()
}

type Failure_Timeout struct {
	Timeout *Timeout `protobuf:"bytes,2,opt,name=timeout,oneof"`
}
type Failure_Exception struct {
	Exception *Exception `protobuf:"bytes,3,opt,name=exception,oneof"`
}
type Failure_StepData struct {
	StepData *StepData `protobuf:"bytes,4,opt,name=step_data,json=stepData,oneof"`
}
type Failure_Failure struct {
	Failure *StepFailure `protobuf:"bytes,5,opt,name=failure,oneof"`
}

func (*Failure_Timeout) isFailure_FailureType()   {}
func (*Failure_Exception) isFailure_FailureType() {}
func (*Failure_StepData) isFailure_FailureType()  {}
func (*Failure_Failure) isFailure_FailureType()   {}

func (m *Failure) GetFailureType() isFailure_FailureType {
	if m != nil {
		return m.FailureType
	}
	return nil
}

func (m *Failure) GetHumanReason() string {
	if m != nil {
		return m.HumanReason
	}
	return ""
}

func (m *Failure) GetTimeout() *Timeout {
	if x, ok := m.GetFailureType().(*Failure_Timeout); ok {
		return x.Timeout
	}
	return nil
}

func (m *Failure) GetException() *Exception {
	if x, ok := m.GetFailureType().(*Failure_Exception); ok {
		return x.Exception
	}
	return nil
}

func (m *Failure) GetStepData() *StepData {
	if x, ok := m.GetFailureType().(*Failure_StepData); ok {
		return x.StepData
	}
	return nil
}

func (m *Failure) GetFailure() *StepFailure {
	if x, ok := m.GetFailureType().(*Failure_Failure); ok {
		return x.Failure
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Failure) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Failure_OneofMarshaler, _Failure_OneofUnmarshaler, _Failure_OneofSizer, []interface{}{
		(*Failure_Timeout)(nil),
		(*Failure_Exception)(nil),
		(*Failure_StepData)(nil),
		(*Failure_Failure)(nil),
	}
}

func _Failure_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Failure)
	// failure_type
	switch x := m.FailureType.(type) {
	case *Failure_Timeout:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timeout); err != nil {
			return err
		}
	case *Failure_Exception:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exception); err != nil {
			return err
		}
	case *Failure_StepData:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StepData); err != nil {
			return err
		}
	case *Failure_Failure:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Failure); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Failure.FailureType has unexpected type %T", x)
	}
	return nil
}

func _Failure_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Failure)
	switch tag {
	case 2: // failure_type.timeout
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Timeout)
		err := b.DecodeMessage(msg)
		m.FailureType = &Failure_Timeout{msg}
		return true, err
	case 3: // failure_type.exception
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Exception)
		err := b.DecodeMessage(msg)
		m.FailureType = &Failure_Exception{msg}
		return true, err
	case 4: // failure_type.step_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StepData)
		err := b.DecodeMessage(msg)
		m.FailureType = &Failure_StepData{msg}
		return true, err
	case 5: // failure_type.failure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StepFailure)
		err := b.DecodeMessage(msg)
		m.FailureType = &Failure_Failure{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Failure_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Failure)
	// failure_type
	switch x := m.FailureType.(type) {
	case *Failure_Timeout:
		s := proto.Size(x.Timeout)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Failure_Exception:
		s := proto.Size(x.Exception)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Failure_StepData:
		s := proto.Size(x.StepData)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Failure_Failure:
		s := proto.Size(x.Failure)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// An unexpected exception occured during execution. Caused by the builtin
// Exception class.
type Exception struct {
	// Traceback of an exception which occured.
	Traceback []string `protobuf:"bytes,1,rep,name=traceback" json:"traceback,omitempty"`
}

func (m *Exception) Reset()                    { *m = Exception{} }
func (m *Exception) String() string            { return proto.CompactTextString(m) }
func (*Exception) ProtoMessage()               {}
func (*Exception) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Exception) GetTraceback() []string {
	if m != nil {
		return m.Traceback
	}
	return nil
}

// A step timed out during its execution. Caused by StepTimeout in
// recipe_api.py
type Timeout struct {
	// The timeout set for the step.
	TimeoutS float32 `protobuf:"fixed32,1,opt,name=timeout_s,json=timeoutS" json:"timeout_s,omitempty"`
}

func (m *Timeout) Reset()                    { *m = Timeout{} }
func (m *Timeout) String() string            { return proto.CompactTextString(m) }
func (*Timeout) ProtoMessage()               {}
func (*Timeout) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Timeout) GetTimeoutS() float32 {
	if m != nil {
		return m.TimeoutS
	}
	return 0
}

// A step attempted to access data which did not exist. Caused by
// StepDataAttributeError in types.py.
type StepData struct {
	// The step which attempted to access invalid data.
	Step string `protobuf:"bytes,1,opt,name=step" json:"step,omitempty"`
}

func (m *StepData) Reset()                    { *m = StepData{} }
func (m *StepData) String() string            { return proto.CompactTextString(m) }
func (*StepData) ProtoMessage()               {}
func (*StepData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *StepData) GetStep() string {
	if m != nil {
		return m.Step
	}
	return ""
}

// A step failed to execute "correctly". Correct generally is indicated by a
// return code of 0, but the step can allow for other return codes as well.
type StepFailure struct {
	// The step which failed.
	Step string `protobuf:"bytes,1,opt,name=step" json:"step,omitempty"`
}

func (m *StepFailure) Reset()                    { *m = StepFailure{} }
func (m *StepFailure) String() string            { return proto.CompactTextString(m) }
func (*StepFailure) ProtoMessage()               {}
func (*StepFailure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *StepFailure) GetStep() string {
	if m != nil {
		return m.Step
	}
	return ""
}

func init() {
	proto.RegisterType((*Result)(nil), "recipe_engine.Result")
	proto.RegisterType((*Failure)(nil), "recipe_engine.Failure")
	proto.RegisterType((*Exception)(nil), "recipe_engine.Exception")
	proto.RegisterType((*Timeout)(nil), "recipe_engine.Timeout")
	proto.RegisterType((*StepData)(nil), "recipe_engine.StepData")
	proto.RegisterType((*StepFailure)(nil), "recipe_engine.StepFailure")
}

func init() {
	proto.RegisterFile("infra/tools/kitchen/third_party/recipe_engine/result.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x6f, 0xe2, 0x30,
	0x10, 0x4d, 0x80, 0x05, 0x32, 0x61, 0xf7, 0xe0, 0xc3, 0x6e, 0xb4, 0xbb, 0x5a, 0x41, 0x0e, 0x2b,
	0x7a, 0x21, 0x12, 0x95, 0x50, 0xd5, 0x63, 0xd5, 0x56, 0x39, 0x9b, 0xde, 0x23, 0x13, 0x86, 0xe2,
	0x02, 0x76, 0xe4, 0x4c, 0xa4, 0xf2, 0x57, 0xfa, 0x6b, 0xab, 0x38, 0xa6, 0x14, 0x44, 0x6f, 0xa3,
	0xf7, 0xe1, 0x37, 0xf3, 0x64, 0xb8, 0x95, 0x6a, 0x65, 0x44, 0x42, 0x5a, 0x6f, 0xcb, 0x64, 0x23,
	0x29, 0x5f, 0xa3, 0x4a, 0x68, 0x2d, 0xcd, 0x32, 0x2b, 0x84, 0xa1, 0x7d, 0x62, 0x30, 0x97, 0x05,
	0x66, 0xa8, 0x9e, 0xa5, 0xc2, 0xc4, 0x60, 0x59, 0x6d, 0x69, 0x52, 0x18, 0x4d, 0x9a, 0x7d, 0x3f,
	0xe1, 0x62, 0x0d, 0x5d, 0x6e, 0x69, 0x36, 0x82, 0xf0, 0xa5, 0xd4, 0x2a, 0x6b, 0xd4, 0x91, 0x3f,
	0xf4, 0xc7, 0x41, 0xea, 0x71, 0xa8, 0x41, 0x27, 0x99, 0x42, 0x6f, 0x25, 0xe4, 0xb6, 0x32, 0x18,
	0xb5, 0x86, 0xfe, 0x38, 0x9c, 0xfe, 0x9c, 0x9c, 0xbc, 0x36, 0x79, 0x6c, 0xd8, 0xd4, 0xe3, 0x07,
	0xe1, 0xdd, 0x0f, 0x18, 0x68, 0x85, 0x7a, 0xe5, 0xde, 0x8d, 0xdf, 0x5a, 0xd0, 0x73, 0x32, 0x36,
	0x82, 0xc1, 0xba, 0xda, 0x89, 0x3a, 0x53, 0x94, 0x5a, 0x35, 0x99, 0x3c, 0xb4, 0x18, 0xb7, 0x50,
	0x1d, 0x49, 0x72, 0x87, 0xba, 0xa2, 0x2f, 0x22, 0x9f, 0x1a, 0xb6, 0x8e, 0x74, 0x42, 0x76, 0x03,
	0x01, 0xbe, 0xe6, 0x58, 0x90, 0xd4, 0x2a, 0x6a, 0x5b, 0x57, 0x74, 0xe6, 0x7a, 0x38, 0xf0, 0xa9,
	0xc7, 0x8f, 0x62, 0x36, 0x83, 0xa0, 0x24, 0x2c, 0xb2, 0xa5, 0x20, 0x11, 0x75, 0xac, 0xf3, 0xd7,
	0x99, 0x73, 0x4e, 0x58, 0xdc, 0x0b, 0x12, 0xa9, 0xc7, 0xfb, 0xa5, 0x9b, 0xd9, 0xec, 0x58, 0xcc,
	0x37, 0xeb, 0xfa, 0x7d, 0xc1, 0x75, 0xb9, 0x1c, 0x37, 0x66, 0xb4, 0x2f, 0x30, 0xbe, 0x82, 0xe0,
	0x63, 0x33, 0xf6, 0x17, 0x02, 0x32, 0x22, 0xc7, 0x85, 0xc8, 0x37, 0x91, 0x3f, 0x6c, 0x8f, 0x03,
	0x7e, 0x04, 0xe2, 0xff, 0xd0, 0x73, 0xa7, 0xb3, 0x3f, 0x10, 0xb8, 0xd3, 0xb3, 0xd2, 0x76, 0xd8,
	0xe2, 0x7d, 0x07, 0xcc, 0xe3, 0x7f, 0xd0, 0x3f, 0xac, 0xcc, 0x18, 0x74, 0xea, 0x95, 0x5d, 0xcf,
	0x76, 0x8e, 0x47, 0x10, 0x7e, 0x5a, 0xee, 0x92, 0x64, 0xd1, 0xb5, 0x3f, 0xe7, 0xfa, 0x3d, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0xb4, 0x8a, 0xcf, 0x77, 0x02, 0x00, 0x00,
}
