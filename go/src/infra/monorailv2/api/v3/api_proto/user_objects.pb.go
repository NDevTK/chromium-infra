// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v3/api_proto/user_objects.proto

package monorail_v3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Potential roles of a user.
// Next available tag: 3
type UserSettings_SiteRole int32

const (
	// Default value. This value is unused.
	UserSettings_SITE_ROLE_UNSPECIFIED UserSettings_SiteRole = 0
	// Normal site user with no special site-wide extra permissions.
	UserSettings_NORMAL UserSettings_SiteRole = 1
	// Site-wide admin role.
	UserSettings_ADMIN UserSettings_SiteRole = 2
)

var UserSettings_SiteRole_name = map[int32]string{
	0: "SITE_ROLE_UNSPECIFIED",
	1: "NORMAL",
	2: "ADMIN",
}

var UserSettings_SiteRole_value = map[string]int32{
	"SITE_ROLE_UNSPECIFIED": 0,
	"NORMAL":                1,
	"ADMIN":                 2,
}

func (x UserSettings_SiteRole) String() string {
	return proto.EnumName(UserSettings_SiteRole_name, int32(x))
}

func (UserSettings_SiteRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 0}
}

// Trait options for notifications the user receives.
// Next available tag: 6;
type UserSettings_NotificationTraits int32

const (
	// Default value. This value is unused.
	UserSettings_NOTIFICATION_TRAITS_UNSPECIFIED UserSettings_NotificationTraits = 0
	// Send change notifications for issues where user is owner or cc.
	UserSettings_NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES UserSettings_NotificationTraits = 1
	// Send change notifications for issues the user has starred.
	UserSettings_NOTIFY_ON_STARRED_ISSUE_CHANGES UserSettings_NotificationTraits = 2
	// Send date-type field notifications for issues the user has starred.
	// See monorail/doc/userguide/email.md#why-did-i-get-a-follow_up-email-notification.
	UserSettings_NOTIFY_ON_STARRED_NOTIFY_DATES UserSettings_NotificationTraits = 3
	// Email subject lines should be compact.
	UserSettings_COMPACT_SUBJECT_LINE UserSettings_NotificationTraits = 4
	// Include a button link to the issue, in Gmail.
	UserSettings_GMAIL_INCLUDE_ISSUE_LINK_BUTTON UserSettings_NotificationTraits = 5
)

var UserSettings_NotificationTraits_name = map[int32]string{
	0: "NOTIFICATION_TRAITS_UNSPECIFIED",
	1: "NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES",
	2: "NOTIFY_ON_STARRED_ISSUE_CHANGES",
	3: "NOTIFY_ON_STARRED_NOTIFY_DATES",
	4: "COMPACT_SUBJECT_LINE",
	5: "GMAIL_INCLUDE_ISSUE_LINK_BUTTON",
}

var UserSettings_NotificationTraits_value = map[string]int32{
	"NOTIFICATION_TRAITS_UNSPECIFIED":     0,
	"NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES": 1,
	"NOTIFY_ON_STARRED_ISSUE_CHANGES":     2,
	"NOTIFY_ON_STARRED_NOTIFY_DATES":      3,
	"COMPACT_SUBJECT_LINE":                4,
	"GMAIL_INCLUDE_ISSUE_LINK_BUTTON":     5,
}

func (x UserSettings_NotificationTraits) String() string {
	return proto.EnumName(UserSettings_NotificationTraits_name, int32(x))
}

func (UserSettings_NotificationTraits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 1}
}

// Privacy trait options for the user.
// Next available tag: 2
type UserSettings_PrivacyTraits int32

const (
	// Default value. This value is unused.
	UserSettings_PRIVACY_TRAITS_UNSPECIFIED UserSettings_PrivacyTraits = 0
	// Obscure the user's email from non-project members throughout the site.
	UserSettings_OBSCURE_EMAIL UserSettings_PrivacyTraits = 1
)

var UserSettings_PrivacyTraits_name = map[int32]string{
	0: "PRIVACY_TRAITS_UNSPECIFIED",
	1: "OBSCURE_EMAIL",
}

var UserSettings_PrivacyTraits_value = map[string]int32{
	"PRIVACY_TRAITS_UNSPECIFIED": 0,
	"OBSCURE_EMAIL":              1,
}

func (x UserSettings_PrivacyTraits) String() string {
	return proto.EnumName(UserSettings_PrivacyTraits_name, int32(x))
}

func (UserSettings_PrivacyTraits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 2}
}

// Site interaction trait options for the user.
// Next available tag: 3
type UserSettings_SiteInteractionTraits int32

const (
	// Default value. This value is unused.
	UserSettings_SITE_INTERACTION_TRAITS_UNSPECIFIED UserSettings_SiteInteractionTraits = 0
	// Add 'Restrict-View-Google' labels to new issues the user reports.
	// Issues will only be visible to the user (issue reporter)
	// and users with the `Google` permission.
	UserSettings_REPORT_RESTRICT_VIEW_GOOGLE_ISSUES UserSettings_SiteInteractionTraits = 1
	// When viewing public issues, show a banner to remind the user not
	// to post sensitive information.
	UserSettings_PUBLIC_ISSUE_BANNER UserSettings_SiteInteractionTraits = 2
)

var UserSettings_SiteInteractionTraits_name = map[int32]string{
	0: "SITE_INTERACTION_TRAITS_UNSPECIFIED",
	1: "REPORT_RESTRICT_VIEW_GOOGLE_ISSUES",
	2: "PUBLIC_ISSUE_BANNER",
}

var UserSettings_SiteInteractionTraits_value = map[string]int32{
	"SITE_INTERACTION_TRAITS_UNSPECIFIED": 0,
	"REPORT_RESTRICT_VIEW_GOOGLE_ISSUES":  1,
	"PUBLIC_ISSUE_BANNER":                 2,
}

func (x UserSettings_SiteInteractionTraits) String() string {
	return proto.EnumName(UserSettings_SiteInteractionTraits_name, int32(x))
}

func (UserSettings_SiteInteractionTraits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 3}
}

// Potential status of a user's access to the site.
// Next available tag: 3
type UserSettings_SiteAccess_Status int32

const (
	// Default value. This value is unused.
	UserSettings_SiteAccess_STATUS_UNSPECIFIED UserSettings_SiteAccess_Status = 0
	// The user has access to the site.
	UserSettings_SiteAccess_FULL_ACCESS UserSettings_SiteAccess_Status = 1
	// The user is banned from the site.
	UserSettings_SiteAccess_BANNED UserSettings_SiteAccess_Status = 2
)

var UserSettings_SiteAccess_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "FULL_ACCESS",
	2: "BANNED",
}

var UserSettings_SiteAccess_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"FULL_ACCESS":        1,
	"BANNED":             2,
}

func (x UserSettings_SiteAccess_Status) String() string {
	return proto.EnumName(UserSettings_SiteAccess_Status_name, int32(x))
}

func (UserSettings_SiteAccess_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 0, 0}
}

// Subscription mode of this saved query
// Next available tag: 3
type UserSavedQuery_SubscriptionMode int32

const (
	// Default API value. This value is unused.
	UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED UserSavedQuery_SubscriptionMode = 0
	// Do not subscribe to notifications.
	UserSavedQuery_NO_NOTIFICATION UserSavedQuery_SubscriptionMode = 1
	// Subscribe to notifications.
	UserSavedQuery_IMMEDIATE_NOTIFICATION UserSavedQuery_SubscriptionMode = 2
)

var UserSavedQuery_SubscriptionMode_name = map[int32]string{
	0: "SUBSCRIPTION_MODE_UNSPECIFIED",
	1: "NO_NOTIFICATION",
	2: "IMMEDIATE_NOTIFICATION",
}

var UserSavedQuery_SubscriptionMode_value = map[string]int32{
	"SUBSCRIPTION_MODE_UNSPECIFIED": 0,
	"NO_NOTIFICATION":               1,
	"IMMEDIATE_NOTIFICATION":        2,
}

func (x UserSavedQuery_SubscriptionMode) String() string {
	return proto.EnumName(UserSavedQuery_SubscriptionMode_name, int32(x))
}

func (UserSavedQuery_SubscriptionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{2, 0}
}

// User represents a user of the Monorail site.
// Next available tag: 4
type User struct {
	// Resource name of the user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Obscured or un-obscured user email or name to show other users using the site.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// User-written indication of their availability or working hours.
	AvailabilityMessage  string   `protobuf:"bytes,3,opt,name=availability_message,json=availabilityMessage,proto3" json:"availability_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetAvailabilityMessage() string {
	if m != nil {
		return m.AvailabilityMessage
	}
	return ""
}

// UserSettings represents preferences and account settings of a User.
// Next available tag: 8
type UserSettings struct {
	// Resource name of the user that has these settings.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The global site role for the user.
	SiteRole UserSettings_SiteRole `protobuf:"varint,2,opt,name=site_role,json=siteRole,proto3,enum=monorail.v3.UserSettings_SiteRole" json:"site_role,omitempty"`
	// Resource name of linked secondary users.
	LinkedSecondaryUsers []string `protobuf:"bytes,3,rep,name=linked_secondary_users,json=linkedSecondaryUsers,proto3" json:"linked_secondary_users,omitempty"`
	// The user's access to the site.
	SiteAccess *UserSettings_SiteAccess `protobuf:"bytes,4,opt,name=site_access,json=siteAccess,proto3" json:"site_access,omitempty"`
	// Notification trait preferences of the user.
	NotificationTraits []UserSettings_NotificationTraits `protobuf:"varint,5,rep,packed,name=notification_traits,json=notificationTraits,proto3,enum=monorail.v3.UserSettings_NotificationTraits" json:"notification_traits,omitempty"`
	// Privacy trait preferences of the user.
	PrivacyTraits []UserSettings_PrivacyTraits `protobuf:"varint,6,rep,packed,name=privacy_traits,json=privacyTraits,proto3,enum=monorail.v3.UserSettings_PrivacyTraits" json:"privacy_traits,omitempty"`
	// Site interaction trait preferences of the user.
	SiteInteractionTraits []UserSettings_SiteInteractionTraits `protobuf:"varint,7,rep,packed,name=site_interaction_traits,json=siteInteractionTraits,proto3,enum=monorail.v3.UserSettings_SiteInteractionTraits" json:"site_interaction_traits,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                             `json:"-"`
	XXX_unrecognized      []byte                               `json:"-"`
	XXX_sizecache         int32                                `json:"-"`
}

func (m *UserSettings) Reset()         { *m = UserSettings{} }
func (m *UserSettings) String() string { return proto.CompactTextString(m) }
func (*UserSettings) ProtoMessage()    {}
func (*UserSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1}
}

func (m *UserSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSettings.Unmarshal(m, b)
}
func (m *UserSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSettings.Marshal(b, m, deterministic)
}
func (m *UserSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSettings.Merge(m, src)
}
func (m *UserSettings) XXX_Size() int {
	return xxx_messageInfo_UserSettings.Size(m)
}
func (m *UserSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSettings.DiscardUnknown(m)
}

var xxx_messageInfo_UserSettings proto.InternalMessageInfo

func (m *UserSettings) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserSettings) GetSiteRole() UserSettings_SiteRole {
	if m != nil {
		return m.SiteRole
	}
	return UserSettings_SITE_ROLE_UNSPECIFIED
}

func (m *UserSettings) GetLinkedSecondaryUsers() []string {
	if m != nil {
		return m.LinkedSecondaryUsers
	}
	return nil
}

func (m *UserSettings) GetSiteAccess() *UserSettings_SiteAccess {
	if m != nil {
		return m.SiteAccess
	}
	return nil
}

func (m *UserSettings) GetNotificationTraits() []UserSettings_NotificationTraits {
	if m != nil {
		return m.NotificationTraits
	}
	return nil
}

func (m *UserSettings) GetPrivacyTraits() []UserSettings_PrivacyTraits {
	if m != nil {
		return m.PrivacyTraits
	}
	return nil
}

func (m *UserSettings) GetSiteInteractionTraits() []UserSettings_SiteInteractionTraits {
	if m != nil {
		return m.SiteInteractionTraits
	}
	return nil
}

// The access the user has to the site.
// Next available tag: 3
type UserSettings_SiteAccess struct {
	// The status of the user's access to the site.
	Status UserSettings_SiteAccess_Status `protobuf:"varint,1,opt,name=status,proto3,enum=monorail.v3.UserSettings_SiteAccess_Status" json:"status,omitempty"`
	// An explanation for the value of `status`.
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSettings_SiteAccess) Reset()         { *m = UserSettings_SiteAccess{} }
func (m *UserSettings_SiteAccess) String() string { return proto.CompactTextString(m) }
func (*UserSettings_SiteAccess) ProtoMessage()    {}
func (*UserSettings_SiteAccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{1, 0}
}

func (m *UserSettings_SiteAccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSettings_SiteAccess.Unmarshal(m, b)
}
func (m *UserSettings_SiteAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSettings_SiteAccess.Marshal(b, m, deterministic)
}
func (m *UserSettings_SiteAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSettings_SiteAccess.Merge(m, src)
}
func (m *UserSettings_SiteAccess) XXX_Size() int {
	return xxx_messageInfo_UserSettings_SiteAccess.Size(m)
}
func (m *UserSettings_SiteAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSettings_SiteAccess.DiscardUnknown(m)
}

var xxx_messageInfo_UserSettings_SiteAccess proto.InternalMessageInfo

func (m *UserSettings_SiteAccess) GetStatus() UserSettings_SiteAccess_Status {
	if m != nil {
		return m.Status
	}
	return UserSettings_SiteAccess_STATUS_UNSPECIFIED
}

func (m *UserSettings_SiteAccess) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// Defines saved queries that belong to a user.
//
// Next available tag: 6
type UserSavedQuery struct {
	// Resource name of this saved query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this saved query, ie 'open issues'.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Search term of this saved query.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// List of projects this query can be searched in.
	Projects             []string                        `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	SubscriptionMode     UserSavedQuery_SubscriptionMode `protobuf:"varint,5,opt,name=subscription_mode,json=subscriptionMode,proto3,enum=monorail.v3.UserSavedQuery_SubscriptionMode" json:"subscription_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UserSavedQuery) Reset()         { *m = UserSavedQuery{} }
func (m *UserSavedQuery) String() string { return proto.CompactTextString(m) }
func (*UserSavedQuery) ProtoMessage()    {}
func (*UserSavedQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{2}
}

func (m *UserSavedQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSavedQuery.Unmarshal(m, b)
}
func (m *UserSavedQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSavedQuery.Marshal(b, m, deterministic)
}
func (m *UserSavedQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSavedQuery.Merge(m, src)
}
func (m *UserSavedQuery) XXX_Size() int {
	return xxx_messageInfo_UserSavedQuery.Size(m)
}
func (m *UserSavedQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSavedQuery.DiscardUnknown(m)
}

var xxx_messageInfo_UserSavedQuery proto.InternalMessageInfo

func (m *UserSavedQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserSavedQuery) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserSavedQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *UserSavedQuery) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *UserSavedQuery) GetSubscriptionMode() UserSavedQuery_SubscriptionMode {
	if m != nil {
		return m.SubscriptionMode
	}
	return UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED
}

// A project starred by a user.
//
// Next available tag: 2
type ProjectStar struct {
	// Resource name of the ProjectStar.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectStar) Reset()         { *m = ProjectStar{} }
func (m *ProjectStar) String() string { return proto.CompactTextString(m) }
func (*ProjectStar) ProtoMessage()    {}
func (*ProjectStar) Descriptor() ([]byte, []int) {
	return fileDescriptor_b189ef7ba4c7b32f, []int{3}
}

func (m *ProjectStar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectStar.Unmarshal(m, b)
}
func (m *ProjectStar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectStar.Marshal(b, m, deterministic)
}
func (m *ProjectStar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectStar.Merge(m, src)
}
func (m *ProjectStar) XXX_Size() int {
	return xxx_messageInfo_ProjectStar.Size(m)
}
func (m *ProjectStar) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectStar.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectStar proto.InternalMessageInfo

func (m *ProjectStar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("monorail.v3.UserSettings_SiteRole", UserSettings_SiteRole_name, UserSettings_SiteRole_value)
	proto.RegisterEnum("monorail.v3.UserSettings_NotificationTraits", UserSettings_NotificationTraits_name, UserSettings_NotificationTraits_value)
	proto.RegisterEnum("monorail.v3.UserSettings_PrivacyTraits", UserSettings_PrivacyTraits_name, UserSettings_PrivacyTraits_value)
	proto.RegisterEnum("monorail.v3.UserSettings_SiteInteractionTraits", UserSettings_SiteInteractionTraits_name, UserSettings_SiteInteractionTraits_value)
	proto.RegisterEnum("monorail.v3.UserSettings_SiteAccess_Status", UserSettings_SiteAccess_Status_name, UserSettings_SiteAccess_Status_value)
	proto.RegisterEnum("monorail.v3.UserSavedQuery_SubscriptionMode", UserSavedQuery_SubscriptionMode_name, UserSavedQuery_SubscriptionMode_value)
	proto.RegisterType((*User)(nil), "monorail.v3.User")
	proto.RegisterType((*UserSettings)(nil), "monorail.v3.UserSettings")
	proto.RegisterType((*UserSettings_SiteAccess)(nil), "monorail.v3.UserSettings.SiteAccess")
	proto.RegisterType((*UserSavedQuery)(nil), "monorail.v3.UserSavedQuery")
	proto.RegisterType((*ProjectStar)(nil), "monorail.v3.ProjectStar")
}

func init() {
	proto.RegisterFile("api/v3/api_proto/user_objects.proto", fileDescriptor_b189ef7ba4c7b32f)
}

var fileDescriptor_b189ef7ba4c7b32f = []byte{
	// 1035 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5f, 0x4f, 0xe3, 0xc6,
	0x17, 0xfd, 0x25, 0x81, 0xfc, 0xe0, 0x66, 0x01, 0xef, 0xf0, 0x2f, 0x1b, 0x6d, 0x77, 0x59, 0xd3,
	0xb2, 0x54, 0xbb, 0x4a, 0x54, 0xa8, 0x5a, 0x09, 0xb5, 0x0f, 0x13, 0xc7, 0xb0, 0xb3, 0x9b, 0xd8,
	0xe9, 0xd8, 0xd9, 0x15, 0x0f, 0xd5, 0xc8, 0x49, 0x86, 0x74, 0xda, 0x60, 0xa7, 0x1e, 0x27, 0x52,
	0x84, 0x78, 0xe8, 0x97, 0xe8, 0x6b, 0xdf, 0xaa, 0x7e, 0xac, 0x7d, 0xe6, 0x23, 0xf0, 0x54, 0x79,
	0xec, 0x40, 0x08, 0x01, 0xf5, 0xcd, 0xf7, 0xde, 0x73, 0xae, 0xcf, 0x9c, 0x99, 0xb9, 0x03, 0xbb,
	0xde, 0x40, 0x54, 0x46, 0x87, 0x15, 0x6f, 0x20, 0xd8, 0x20, 0x0c, 0xa2, 0xa0, 0x32, 0x94, 0x3c,
	0x64, 0x41, 0xfb, 0x57, 0xde, 0x89, 0x64, 0x59, 0xa5, 0x50, 0xe1, 0x3c, 0xf0, 0x83, 0xd0, 0x13,
	0xfd, 0xf2, 0xe8, 0xb0, 0xb4, 0xd7, 0x0b, 0x82, 0x5e, 0x9f, 0xa7, 0xe8, 0x24, 0x88, 0xe9, 0x95,
	0x90, 0xcb, 0x60, 0x18, 0x76, 0x78, 0x42, 0x2a, 0xbd, 0x7d, 0x08, 0x77, 0x26, 0x78, 0xbf, 0xcb,
	0xda, 0xfc, 0x17, 0x6f, 0x24, 0x82, 0x30, 0x41, 0xeb, 0x7f, 0x65, 0x60, 0xa1, 0x25, 0x79, 0x88,
	0x10, 0x2c, 0xf8, 0xde, 0x39, 0x2f, 0x66, 0x76, 0x32, 0xfb, 0xcb, 0x54, 0x7d, 0xa3, 0x3d, 0x78,
	0xd2, 0x15, 0x72, 0xd0, 0xf7, 0xc6, 0x4c, 0xd5, 0xb2, 0x71, 0xad, 0x9a, 0xfb, 0x8c, 0x73, 0xb4,
	0x90, 0x16, 0xac, 0x18, 0xf7, 0x0d, 0x6c, 0x78, 0x23, 0x4f, 0xf4, 0xbd, 0xb6, 0xe8, 0x8b, 0x68,
	0xcc, 0xce, 0xb9, 0x94, 0x5e, 0x8f, 0x17, 0x73, 0xaa, 0xd7, 0xfa, 0x74, 0xad, 0x91, 0x94, 0x8e,
	0xf6, 0xaf, 0xf0, 0x57, 0x80, 0xbc, 0x81, 0x28, 0x77, 0xc2, 0xf6, 0xb0, 0x57, 0xee, 0x04, 0xe7,
	0x15, 0xa5, 0x63, 0x2d, 0xf6, 0x41, 0x56, 0x2e, 0x94, 0x1d, 0xa2, 0x7b, 0xa9, 0xff, 0x09, 0xf0,
	0x24, 0xae, 0x38, 0x3c, 0x8a, 0x84, 0xdf, 0x93, 0xe8, 0x70, 0x5a, 0x69, 0xf5, 0xe5, 0x35, 0x7e,
	0x0e, 0xa5, 0xfb, 0x8d, 0x26, 0xf0, 0x74, 0x29, 0x35, 0x58, 0x96, 0x22, 0xe2, 0x2c, 0x0c, 0xfa,
	0xc9, 0x3a, 0x56, 0x0f, 0xf4, 0xf2, 0x94, 0xbd, 0xe5, 0x69, 0x4e, 0xd9, 0x11, 0x11, 0xa7, 0x41,
	0x9f, 0x27, 0x6b, 0x5d, 0x92, 0x69, 0x88, 0x9a, 0xb0, 0xd5, 0x17, 0xfe, 0x6f, 0xbc, 0xcb, 0x24,
	0xef, 0x04, 0x7e, 0xd7, 0x0b, 0xc7, 0x4c, 0xe9, 0x2d, 0xe6, 0x76, 0x72, 0xfb, 0xcb, 0xd5, 0xd2,
	0x67, 0x9c, 0xbb, 0xc6, 0x1b, 0xf3, 0x16, 0x46, 0x37, 0x12, 0xa6, 0x33, 0x21, 0xc6, 0x49, 0x89,
	0xde, 0x43, 0x41, 0xe9, 0xf2, 0x3a, 0x1d, 0x2e, 0x65, 0x71, 0x61, 0x27, 0xb3, 0x5f, 0x38, 0xf8,
	0xf2, 0x71, 0x65, 0x58, 0x61, 0x13, 0x6d, 0x20, 0x6f, 0x12, 0xe8, 0x67, 0x58, 0xf7, 0x83, 0x48,
	0x9c, 0x89, 0x8e, 0x17, 0x89, 0xc0, 0x67, 0x51, 0xe8, 0x89, 0x48, 0x16, 0x17, 0x77, 0x72, 0xfb,
	0xab, 0x07, 0x6f, 0x1f, 0xee, 0x69, 0x4d, 0x91, 0x5c, 0xc5, 0xa1, 0xc8, 0xbf, 0x97, 0x43, 0x16,
	0xac, 0x0e, 0x42, 0x31, 0xf2, 0x3a, 0xe3, 0x49, 0xe7, 0xbc, 0xea, 0xfc, 0xfa, 0xe1, 0xce, 0xcd,
	0x04, 0x9f, 0x36, 0x5d, 0x19, 0x4c, 0x87, 0xa8, 0x07, 0xdb, 0x6a, 0xe9, 0xc2, 0x8f, 0x78, 0xe8,
	0x75, 0xa6, 0x25, 0xff, 0x5f, 0x35, 0xae, 0x3c, 0x6e, 0x03, 0xb9, 0xe5, 0xa5, 0x3f, 0xd8, 0x94,
	0xf3, 0xd2, 0xa5, 0x7f, 0x32, 0x00, 0xb7, 0xbe, 0x21, 0x03, 0xf2, 0x32, 0xf2, 0xa2, 0xa1, 0x54,
	0x27, 0x68, 0xf5, 0xe0, 0xcd, 0x7f, 0x71, 0xbb, 0xec, 0x28, 0x0a, 0x4d, 0xa9, 0x68, 0x0b, 0xf2,
	0x21, 0xf7, 0x64, 0xe0, 0x27, 0x97, 0x82, 0xa6, 0x91, 0xfe, 0x23, 0xe4, 0x9d, 0x09, 0x02, 0x39,
	0x2e, 0x76, 0x5b, 0x0e, 0x6b, 0x59, 0x4e, 0xd3, 0x34, 0xc8, 0x31, 0x31, 0x6b, 0xda, 0xff, 0xd0,
	0x1a, 0x14, 0x8e, 0x5b, 0xf5, 0x3a, 0xc3, 0x86, 0x61, 0x3a, 0x8e, 0x96, 0x41, 0x00, 0xf9, 0x2a,
	0xb6, 0x2c, 0xb3, 0xa6, 0x65, 0xf5, 0x1f, 0x60, 0x69, 0x72, 0xf6, 0xd0, 0x33, 0xd8, 0x74, 0x88,
	0x6b, 0x32, 0x6a, 0xd7, 0xcd, 0x99, 0x1e, 0x00, 0x79, 0xcb, 0xa6, 0x0d, 0x5c, 0xd7, 0x32, 0x68,
	0x19, 0x16, 0x71, 0xad, 0x41, 0x2c, 0x2d, 0xab, 0x5f, 0x65, 0x00, 0xdd, 0xdf, 0x4c, 0xb4, 0x0b,
	0x2f, 0x2d, 0xdb, 0x25, 0xc7, 0xc4, 0xc0, 0x2e, 0xb1, 0x2d, 0xe6, 0x52, 0x4c, 0xdc, 0x59, 0x59,
	0xaf, 0x61, 0x57, 0x81, 0x4e, 0x99, 0x6d, 0x31, 0xfb, 0x93, 0x65, 0xd6, 0x98, 0x4d, 0x99, 0x61,
	0x30, 0xe2, 0x38, 0x2d, 0x93, 0x19, 0xef, 0xb0, 0x75, 0x62, 0xc6, 0x72, 0x27, 0xdd, 0x14, 0xd0,
	0x71, 0x31, 0xa5, 0x66, 0x6d, 0x06, 0x94, 0x45, 0x3a, 0xbc, 0xb8, 0x0f, 0x4a, 0x33, 0x35, 0xec,
	0x9a, 0x8e, 0x96, 0x43, 0x45, 0xd8, 0x30, 0xec, 0x46, 0x13, 0x1b, 0x2e, 0x73, 0x5a, 0xd5, 0xf7,
	0xa6, 0xe1, 0xb2, 0x3a, 0xb1, 0x4c, 0x6d, 0x21, 0xfe, 0xc5, 0x49, 0x03, 0x93, 0x3a, 0x23, 0x96,
	0x51, 0x6f, 0xd5, 0xcc, 0xb4, 0x7d, 0x9d, 0x58, 0x1f, 0x58, 0xb5, 0xe5, 0xba, 0xb6, 0xa5, 0x2d,
	0xea, 0x55, 0x58, 0xb9, 0x73, 0xbc, 0xd0, 0x0b, 0x28, 0x35, 0x29, 0xf9, 0x88, 0x8d, 0xd3, 0xf9,
	0x2b, 0x7c, 0x0a, 0x2b, 0x76, 0xd5, 0x31, 0x5a, 0xd4, 0x64, 0x66, 0xdc, 0x5d, 0xcb, 0xe8, 0x7f,
	0x64, 0x60, 0x73, 0xee, 0x51, 0x8a, 0xed, 0x50, 0xe6, 0x13, 0xcb, 0x35, 0x29, 0x36, 0x1e, 0xf6,
	0x6d, 0x0f, 0x74, 0x6a, 0x36, 0x6d, 0xea, 0x32, 0x6a, 0x3a, 0x2e, 0x25, 0x86, 0xcb, 0x3e, 0x12,
	0xf3, 0x13, 0x3b, 0xb1, 0xed, 0x93, 0x7a, 0xaa, 0x3c, 0xb6, 0x6d, 0x1b, 0xd6, 0x9b, 0xad, 0x6a,
	0x9d, 0x4c, 0x0c, 0x55, 0x5b, 0x4e, 0xb5, 0xec, 0xd1, 0xf7, 0x57, 0xf8, 0xdb, 0xc7, 0x06, 0x18,
	0xda, 0x52, 0x13, 0x26, 0x8d, 0xa6, 0x06, 0xe3, 0xdf, 0x39, 0x58, 0x55, 0x40, 0x6f, 0xc4, 0xbb,
	0x3f, 0x0d, 0x79, 0x38, 0x9e, 0x3b, 0xc4, 0x5f, 0xcd, 0x1b, 0xe2, 0x77, 0xe7, 0xf7, 0x06, 0x2c,
	0xfe, 0x1e, 0xf3, 0xd3, 0x81, 0x9d, 0x04, 0xe8, 0x3b, 0x58, 0x1a, 0x84, 0x81, 0x7a, 0x8f, 0x8a,
	0x0b, 0xc9, 0x78, 0xbb, 0xc6, 0xdb, 0xb0, 0x79, 0x57, 0x6a, 0x33, 0x81, 0xd0, 0x1b, 0x2c, 0x3a,
	0x85, 0xa7, 0x72, 0xd8, 0x96, 0x9d, 0x50, 0x0c, 0xd4, 0x9d, 0x3e, 0x0f, 0xba, 0xbc, 0xb8, 0xa8,
	0xae, 0xda, 0x9c, 0x21, 0x74, 0x23, 0xbe, 0xec, 0x4c, 0x91, 0x1a, 0x41, 0x97, 0x53, 0x4d, 0xce,
	0x64, 0xf4, 0x33, 0xd0, 0x66, 0x51, 0xe8, 0x15, 0x7c, 0xe1, 0xb4, 0xaa, 0x8e, 0x41, 0x49, 0x53,
	0xed, 0x52, 0xc3, 0xae, 0xcd, 0x5e, 0x97, 0x75, 0x58, 0xb3, 0x6c, 0x36, 0x7d, 0x07, 0xb4, 0x0c,
	0x2a, 0xc1, 0x16, 0x69, 0x34, 0xcc, 0x1a, 0xc1, 0xae, 0x79, 0xb7, 0x96, 0x3d, 0xaa, 0x5f, 0x61,
	0x02, 0xcf, 0xe7, 0xec, 0xc9, 0xad, 0xd5, 0x5f, 0xcf, 0xbc, 0x53, 0x15, 0x39, 0xa9, 0x09, 0x2e,
	0x2b, 0x17, 0x37, 0xd1, 0xf8, 0x52, 0xf7, 0xa1, 0x90, 0xba, 0xe4, 0x44, 0xde, 0xdc, 0x97, 0xf6,
	0xe8, 0xc3, 0x15, 0x7e, 0x07, 0xcf, 0xe6, 0x3a, 0xab, 0x38, 0x6f, 0x66, 0xff, 0x36, 0xb8, 0x2d,
	0xca, 0xca, 0x45, 0x1a, 0xa9, 0x0d, 0xbe, 0x6c, 0xe7, 0xd5, 0xd3, 0x7e, 0xf8, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x17, 0xa8, 0x9b, 0x72, 0x64, 0x08, 0x00, 0x00,
}
