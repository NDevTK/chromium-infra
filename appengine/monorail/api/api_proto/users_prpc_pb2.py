# Generated by the pRPC protocol buffer compiler plugin.  DO NOT EDIT!
# source: api/api_proto/users.proto

import base64
import zlib

from google.protobuf import descriptor_pb2

# Includes description of the api/api_proto/users.proto and all of its transitive
# dependencies. Includes source code info.
FILE_DESCRIPTOR_SET = descriptor_pb2.FileDescriptorSet()
FILE_DESCRIPTOR_SET.ParseFromString(zlib.decompress(base64.b64decode(
    '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'
    'yRaNK/BeA7EB6edc8Yj/BiWv3I0=')))
_INDEX = {
    f.name: {
      'descriptor': f,
      'services': {s.name: s for s in f.service},
    }
    for f in FILE_DESCRIPTOR_SET.file
}


UsersServiceDescription = {
  'file_descriptor_set': FILE_DESCRIPTOR_SET,
  'file_descriptor': _INDEX[u'api/api_proto/users.proto']['descriptor'],
  'service_descriptor': _INDEX[u'api/api_proto/users.proto']['services'][u'Users'],
}
