// Copyright 2015 The Swarming Authors. All rights reserved.
// Use of this source code is governed by the Apache v2.0 license that can be
// found in the LICENSE file.

// Schemas for project configs.

syntax = "proto2";

package buildbucket;

// A single access control rule.
message Acl {
  enum Role {
    // Can do read-only operations, such as search for builds.
    READER = 0;
    // Same as READER + can schedule and cancel builds.
    SCHEDULER = 1;
    // Can do all write operations.
    WRITER = 2;
  }
  // Role denotes a list of actions that an identity can perform.
  optional Role role = 1;
  // Name of the group defined in the auth service.
  optional string group = 2;
  // An email address or a full identity string "kind:name". See auth service
  // on kinds of identities. Anonymous users are "anonymous:anonymous".
  // Either identity or group must be present, not both.
  optional string identity = 3;
}

// Configuration of buildbucket-swarming integration for one bucket.
message Swarming {
  message Recipe {
    // Repository URL of the recipe package.
    optional string repository = 1;
    // Name of the recipe to run.
    optional string name = 2;
    // colon-separated build properties to set.
    // A property can be overriden by "properties" build parameter.
    //
    // Use this field for string properties and use properties_j for other
    // types.
    repeated string properties = 3;
    // Same as properties, but the value must valid JSON or empty. For example
    //   properties_j: "a:1"
    // means property a is a number 1, not string "1".
    //
    // If empty, it means no property must be defined. In particular, it removes
    // a default value for the property, if any.
    //
    // Fields properties and properties_j can be used together, but cannot both
    // specify values for same property.
    repeated string properties_j = 4;
  }

  message Builder {
    // Name of the builder. Will be propagated to "builder" build tag and
    // "buildername" recipe property.
    optional string name = 1;
    // Builder category. Will be used for visual grouping, for example in Code Review.
    optional string category = 6;
    // Will be become to swarming task tags.
    // Each tag will end up in "swarming_tag" buildbucket tag, for example
    // "swarming_tag:builder:release"
    repeated string swarming_tags = 2;
    // Colon-delimited key-value pair of task dimensions.
    //
    // If value is not specified ("<key>:"), then it excludes a default value.
    repeated string dimensions = 3;
    // Specifies that a recipe to run.
    optional Recipe recipe = 4;
    // Swarming task priority.
    optional uint32 priority = 5;
    // Maximum build execution time. Not to be confused with pending time.
    optional uint32 execution_timeout_secs = 7;
  }

  // Hostname of the swarming instance, e.g. "chromium-swarm.appspot.com".
  optional string hostname = 1;
  // Used to generate a URL for Build, may contain parameters
  // {swarming_hostname}, {task_id}, {bucket} and {builder}. Defaults to:
  // https://{swarming_hostname}/user/task/{task_id}
  optional string url_format = 2;

  // Defines default values for builders.
  optional Builder builder_defaults = 9;

  // DEPRECATED: use builder_defaults.
  // Will be put to all swarming tasks.
  repeated string common_swarming_tags = 3;

  // DEPRECATED: use builder_defaults.
  // Colon-delimited key-value pair of common task dimensions.
  //
  // If value is not specified ("<key>:"), then it excludes a value for the
  // same key specified in swarming task template.
  repeated string common_dimensions = 4;

  // Configuration for each builder.
  // Swarming tasks are created only for builds for builders that are not
  // explicitly specified.
  repeated Builder builders = 5;

  // DEPRECATED: use builder_defaults.
  // Defines a default recipe for all builders in this bucket.
  // A builder may override it or parts of it with something else.
  optional Recipe common_recipe = 6;

  // DEPRECATED: use builder_defaults.
  // Maximum build execution time. Not to be confused with pending time.
  // If not set, defaults to server defaults.
  optional uint32 common_execution_timeout_secs = 7;

  // Percentage of builds that should use a canary swarming task template.
  // A value from 0 to 100.
  optional uint32 task_template_canary_percentage = 8;
}

// Defines one bucket in buildbucket.cfg
message Bucket {
  // Name of the bucket. Names are unique within one instance of buildbucket.
  // If another project already uses this name, a config will be rejected.
  // Name reservation is first-come first-serve.
  optional string name = 1;
  // List of access control rules for the bucket.
  repeated Acl acls = 2;
  // Buildbucket-swarming integration.
  optional Swarming swarming = 3;
}

// Schema of buildbucket.cfg file, a project config.
message BuildbucketCfg {
  // All buckets defined for this project.
  repeated Bucket buckets = 1;
}
