// Code generated by cproto. DO NOT EDIT.

package testresults

import discovery "go.chromium.org/luci/grpc/discovery"

import "github.com/golang/protobuf/protoc-gen-go/descriptor"

func init() {
	discovery.RegisterDescriptorSetCompressed(
		[]string{
			"testresults.TestResults",
		},
		[]byte{31, 139,
			8, 0, 0, 0, 0, 0, 0, 255, 148, 86, 81, 110, 219, 70,
			19, 230, 114, 214, 178, 52, 146, 236, 104, 108, 57, 18, 149, 252,
			30, 27, 137, 157, 63, 141, 169, 214, 237, 67, 17, 244, 37, 113,
			82, 196, 69, 26, 7, 78, 218, 167, 2, 6, 45, 173, 66, 34,
			18, 169, 114, 87, 41, 124, 128, 158, 163, 239, 189, 68, 143, 208,
			43, 21, 187, 34, 41, 21, 72, 209, 244, 109, 191, 221, 153, 111,
			103, 190, 217, 25, 18, 255, 36, 28, 38, 233, 36, 143, 134, 209,
			124, 174, 210, 119, 73, 170, 134, 38, 207, 62, 168, 97, 52, 79,
			134, 70, 105, 147, 43, 189, 152, 26, 109, 113, 56, 207, 51, 147,
			81, 115, 109, 251, 240, 87, 137, 253, 179, 108, 58, 85, 35, 243,
			86, 105, 115, 185, 220, 190, 84, 63, 47, 148, 54, 244, 2, 55,
			19, 157, 77, 35, 163, 122, 130, 197, 131, 230, 105, 24, 174, 57,
			135, 255, 232, 24, 158, 47, 189, 46, 75, 119, 250, 17, 155, 215,
			139, 100, 58, 190, 94, 140, 222, 43, 211, 243, 29, 219, 233, 39,
			178, 61, 93, 121, 190, 240, 46, 215, 137, 232, 123, 172, 47, 97,
			102, 122, 224, 72, 135, 255, 137, 52, 179, 140, 21, 5, 17, 74,
			109, 212, 188, 39, 89, 60, 104, 92, 186, 117, 112, 129, 155, 69,
			58, 246, 56, 206, 180, 113, 98, 52, 46, 221, 154, 238, 96, 35,
			141, 102, 74, 207, 163, 145, 114, 121, 53, 46, 87, 27, 206, 35,
			210, 113, 15, 24, 156, 71, 164, 227, 224, 10, 235, 229, 229, 180,
			135, 181, 89, 164, 141, 202, 11, 206, 2, 81, 15, 55, 93, 80,
			42, 47, 56, 75, 72, 7, 216, 114, 203, 171, 116, 49, 187, 86,
			185, 203, 26, 10, 81, 94, 185, 173, 224, 1, 54, 215, 36, 163,
			126, 161, 209, 85, 50, 118, 183, 64, 65, 118, 62, 126, 186, 137,
			27, 110, 121, 248, 26, 131, 143, 73, 165, 231, 89, 170, 21, 157,
			98, 55, 93, 204, 174, 10, 81, 175, 70, 75, 75, 85, 210, 237,
			164, 139, 89, 225, 114, 86, 30, 157, 190, 199, 230, 26, 21, 253,
			132, 155, 197, 25, 29, 125, 90, 133, 130, 227, 127, 181, 91, 134,
			119, 232, 125, 247, 71, 11, 107, 36, 165, 55, 20, 248, 187, 64,
			209, 34, 144, 30, 157, 254, 38, 248, 44, 155, 223, 228, 201, 187,
			216, 240, 233, 231, 95, 124, 205, 111, 99, 197, 103, 113, 158, 205,
			146, 197, 140, 159, 44, 76, 156, 229, 58, 228, 39, 211, 41, 59,
			35, 205, 185, 210, 42, 255, 160, 198, 33, 242, 15, 90, 113, 54,
			97, 19, 39, 154, 117, 182, 200, 71, 138, 71, 217, 88, 113, 162,
			249, 93, 246, 65, 229, 169, 26, 243, 245, 13, 71, 252, 244, 205,
			179, 19, 109, 110, 166, 138, 167, 201, 72, 165, 90, 177, 137, 35,
			195, 163, 40, 229, 107, 133, 60, 201, 22, 233, 152, 147, 148, 77,
			172, 248, 229, 249, 217, 243, 87, 111, 158, 243, 36, 153, 170, 16,
			177, 142, 194, 39, 168, 213, 119, 16, 209, 175, 121, 36, 235, 30,
			10, 68, 132, 154, 39, 8, 234, 245, 29, 108, 162, 172, 121, 190,
			71, 208, 240, 95, 99, 11, 55, 44, 16, 4, 141, 90, 187, 68,
			62, 65, 99, 235, 184, 68, 64, 208, 56, 125, 105, 233, 164, 71,
			178, 229, 125, 230, 232, 164, 245, 105, 213, 15, 176, 133, 82, 122,
			224, 145, 108, 251, 4, 214, 199, 34, 65, 208, 198, 14, 182, 177,
			102, 145, 189, 108, 75, 238, 226, 54, 110, 46, 161, 36, 185, 37,
			219, 59, 184, 85, 110, 108, 88, 3, 92, 97, 65, 176, 213, 220,
			94, 97, 32, 216, 162, 157, 138, 79, 16, 108, 203, 126, 197, 39,
			36, 201, 109, 185, 181, 91, 217, 139, 13, 107, 176, 226, 19, 214,
			161, 185, 118, 14, 4, 219, 183, 123, 248, 255, 130, 207, 39, 232,
			200, 187, 65, 192, 23, 169, 98, 219, 81, 60, 201, 114, 86, 209,
			40, 102, 29, 71, 249, 56, 92, 81, 249, 210, 218, 182, 86, 120,
			131, 160, 179, 150, 138, 141, 173, 179, 219, 91, 97, 32, 232, 12,
			238, 224, 43, 43, 147, 21, 162, 235, 239, 5, 79, 184, 232, 127,
			78, 198, 42, 53, 201, 36, 81, 218, 21, 179, 24, 110, 99, 206,
			22, 102, 190, 48, 108, 50, 46, 90, 131, 139, 87, 203, 147, 60,
			155, 133, 136, 109, 43, 180, 83, 178, 91, 233, 238, 123, 53, 203,
			223, 40, 145, 32, 232, 98, 167, 68, 64, 208, 221, 237, 226, 87,
			174, 94, 130, 100, 207, 191, 3, 193, 17, 151, 131, 131, 245, 92,
			141, 150, 145, 68, 92, 142, 175, 229, 34, 196, 162, 174, 86, 199,
			30, 82, 81, 7, 97, 211, 233, 203, 189, 162, 14, 194, 69, 211,
			151, 189, 82, 103, 225, 234, 218, 175, 234, 32, 92, 68, 253, 102,
			103, 133, 129, 160, 191, 219, 173, 248, 4, 65, 32, 111, 87, 124,
			182, 174, 129, 236, 239, 85, 246, 182, 174, 193, 26, 159, 141, 39,
			104, 210, 10, 3, 65, 208, 221, 171, 248, 124, 130, 129, 28, 84,
			124, 190, 36, 57, 144, 193, 237, 202, 222, 22, 111, 32, 27, 43,
			44, 8, 6, 184, 186, 207, 22, 111, 208, 15, 240, 177, 211, 204,
			39, 185, 239, 31, 64, 240, 136, 215, 102, 225, 71, 100, 91, 238,
			255, 93, 57, 203, 188, 143, 101, 166, 190, 85, 142, 171, 76, 125,
			167, 28, 203, 253, 50, 50, 223, 41, 199, 85, 100, 190, 83, 142,
			145, 86, 24, 8, 184, 187, 135, 47, 108, 100, 117, 143, 228, 61,
			255, 24, 130, 199, 252, 246, 226, 217, 197, 99, 142, 163, 116, 108,
			135, 71, 54, 138, 166, 252, 75, 150, 191, 215, 38, 50, 73, 150,
			62, 226, 111, 147, 116, 124, 110, 30, 241, 60, 211, 58, 185, 158,
			222, 112, 102, 98, 149, 235, 50, 206, 186, 189, 231, 94, 189, 109,
			135, 132, 116, 125, 118, 95, 114, 241, 128, 68, 205, 162, 237, 18,
			217, 179, 91, 131, 18, 1, 193, 253, 255, 237, 23, 110, 62, 193,
			145, 12, 138, 35, 191, 102, 81, 171, 68, 130, 224, 168, 221, 45,
			17, 16, 28, 245, 250, 248, 141, 115, 3, 130, 135, 62, 5, 67,
			126, 99, 212, 220, 14, 69, 219, 17, 246, 131, 201, 246, 235, 247,
			209, 94, 200, 242, 170, 21, 64, 146, 124, 232, 31, 151, 173, 0,
			27, 150, 173, 94, 34, 65, 240, 176, 209, 46, 145, 189, 233, 86,
			199, 141, 52, 65, 242, 196, 14, 121, 59, 210, 108, 78, 39, 245,
			67, 151, 133, 123, 220, 161, 127, 232, 216, 151, 79, 59, 244, 79,
			238, 57, 134, 229, 195, 14, 253, 205, 18, 9, 130, 176, 126, 183,
			68, 64, 16, 242, 193, 117, 205, 253, 28, 125, 249, 87, 0, 0,
			0, 255, 255, 125, 207, 229, 143, 82, 9, 0, 0},
	)
}

// FileDescriptorSet returns a descriptor set for this proto package, which
// includes all defined services, and all transitive dependencies.
//
// Will not return nil.
//
// Do NOT modify the returned descriptor.
func FileDescriptorSet() *descriptor.FileDescriptorSet {
	// We just need ONE of the service names to look up the FileDescriptorSet.
	ret, err := discovery.GetDescriptorSet("testresults.TestResults")
	if err != nil {
		panic(err)
	}
	return ret
}
