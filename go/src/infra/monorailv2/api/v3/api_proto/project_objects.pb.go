// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v3/api_proto/project_objects.proto

package monorail_v3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Type of this status.
// Next available tag: 4
type StatusDef_StatusDefType int32

const (
	// Default enum value. This value is unused.
	StatusDef_STATUS_DEF_TYPE_UNSPECIFIED StatusDef_StatusDefType = 0
	// This status means issue is open.
	StatusDef_OPEN StatusDef_StatusDefType = 1
	// This status means issue is closed.
	StatusDef_CLOSED StatusDef_StatusDefType = 2
	// This status means issue is merged into another.
	StatusDef_MERGED StatusDef_StatusDefType = 3
)

var StatusDef_StatusDefType_name = map[int32]string{
	0: "STATUS_DEF_TYPE_UNSPECIFIED",
	1: "OPEN",
	2: "CLOSED",
	3: "MERGED",
}

var StatusDef_StatusDefType_value = map[string]int32{
	"STATUS_DEF_TYPE_UNSPECIFIED": 0,
	"OPEN":                        1,
	"CLOSED":                      2,
	"MERGED":                      3,
}

func (x StatusDef_StatusDefType) String() string {
	return proto.EnumName(StatusDef_StatusDefType_name, int32(x))
}

func (StatusDef_StatusDefType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{1, 0}
}

// State of this status.
// Next available tag: 3
type StatusDef_StatusDefState int32

const (
	// Default value. This value is unused.
	StatusDef_STATUS_DEF_STATE_UNSPECIFIED StatusDef_StatusDefState = 0
	// This status is deprecated
	StatusDef_DEPRECATED StatusDef_StatusDefState = 1
	// This status is not deprecated
	StatusDef_ACTIVE StatusDef_StatusDefState = 2
)

var StatusDef_StatusDefState_name = map[int32]string{
	0: "STATUS_DEF_STATE_UNSPECIFIED",
	1: "DEPRECATED",
	2: "ACTIVE",
}

var StatusDef_StatusDefState_value = map[string]int32{
	"STATUS_DEF_STATE_UNSPECIFIED": 0,
	"DEPRECATED":                   1,
	"ACTIVE":                       2,
}

func (x StatusDef_StatusDefState) String() string {
	return proto.EnumName(StatusDef_StatusDefState_name, int32(x))
}

func (StatusDef_StatusDefState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{1, 1}
}

// State of this label.
// Next available tag: 3
type LabelDef_LabelDefState int32

const (
	// Default enum value. This value is unused.
	LabelDef_LABEL_DEF_STATE_UNSPECIFIED LabelDef_LabelDefState = 0
	// This label is deprecated
	LabelDef_DEPRECATED LabelDef_LabelDefState = 1
	// This label is not deprecated
	LabelDef_ACTIVE LabelDef_LabelDefState = 2
)

var LabelDef_LabelDefState_name = map[int32]string{
	0: "LABEL_DEF_STATE_UNSPECIFIED",
	1: "DEPRECATED",
	2: "ACTIVE",
}

var LabelDef_LabelDefState_value = map[string]int32{
	"LABEL_DEF_STATE_UNSPECIFIED": 0,
	"DEPRECATED":                  1,
	"ACTIVE":                      2,
}

func (x LabelDef_LabelDefState) String() string {
	return proto.EnumName(LabelDef_LabelDefState_name, int32(x))
}

func (LabelDef_LabelDefState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{2, 0}
}

// Type of this field.
// Next available tag: 7
type FieldDef_Type int32

const (
	// Default enum value. This value is unused.
	FieldDef_FIELD_DEF_TYPE_UNSPECIFIED FieldDef_Type = 0
	// This field can be filled only with enumerated option(s).
	FieldDef_ENUM FieldDef_Type = 1
	// This field can be filled with integer(s).
	FieldDef_INT FieldDef_Type = 2
	// This field can be filled with string(s).
	FieldDef_STR FieldDef_Type = 3
	// This field can be filled with users(s).
	FieldDef_USER FieldDef_Type = 4
	// This field can be filled with date(s).
	FieldDef_DATE FieldDef_Type = 5
	// This field can be filled with URL(s).
	FieldDef_URL FieldDef_Type = 6
)

var FieldDef_Type_name = map[int32]string{
	0: "FIELD_DEF_TYPE_UNSPECIFIED",
	1: "ENUM",
	2: "INT",
	3: "STR",
	4: "USER",
	5: "DATE",
	6: "URL",
}

var FieldDef_Type_value = map[string]int32{
	"FIELD_DEF_TYPE_UNSPECIFIED": 0,
	"ENUM":                       1,
	"INT":                        2,
	"STR":                        3,
	"USER":                       4,
	"DATE":                       5,
	"URL":                        6,
}

func (x FieldDef_Type) String() string {
	return proto.EnumName(FieldDef_Type_name, int32(x))
}

func (FieldDef_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{3, 0}
}

// Traits of this field, ie is required or can support multiple values.
// Next available tag: 5
type FieldDef_Traits int32

const (
	// Default enum value. This value is unused.
	FieldDef_TRAIT_UNSPECIFIED FieldDef_Traits = 0
	// This field must be filled out.
	FieldDef_REQUIRED FieldDef_Traits = 1
	// This field defaults to hidden.
	FieldDef_DEFAULT_HIDDEN FieldDef_Traits = 2
	// This field can have multiple values.
	FieldDef_MULTIVALUED FieldDef_Traits = 3
	// This is a phase field meaning it can only belong to gates.
	FieldDef_PHASE FieldDef_Traits = 4
)

var FieldDef_Traits_name = map[int32]string{
	0: "TRAIT_UNSPECIFIED",
	1: "REQUIRED",
	2: "DEFAULT_HIDDEN",
	3: "MULTIVALUED",
	4: "PHASE",
}

var FieldDef_Traits_value = map[string]int32{
	"TRAIT_UNSPECIFIED": 0,
	"REQUIRED":          1,
	"DEFAULT_HIDDEN":    2,
	"MULTIVALUED":       3,
	"PHASE":             4,
}

func (x FieldDef_Traits) String() string {
	return proto.EnumName(FieldDef_Traits_name, int32(x))
}

func (FieldDef_Traits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{3, 1}
}

// The current state of the component definition.
// Next available tag: 3
type ComponentDef_ComponentDefState int32

const (
	// Default enum value. This value is unused.
	ComponentDef_COMPONENT_DEF_STATE_UNSPECIFIED ComponentDef_ComponentDefState = 0
	// This component is deprecated
	ComponentDef_DEPRECATED ComponentDef_ComponentDefState = 1
	// This component is not deprecated
	ComponentDef_ACTIVE ComponentDef_ComponentDefState = 2
)

var ComponentDef_ComponentDefState_name = map[int32]string{
	0: "COMPONENT_DEF_STATE_UNSPECIFIED",
	1: "DEPRECATED",
	2: "ACTIVE",
}

var ComponentDef_ComponentDefState_value = map[string]int32{
	"COMPONENT_DEF_STATE_UNSPECIFIED": 0,
	"DEPRECATED":                      1,
	"ACTIVE":                          2,
}

func (x ComponentDef_ComponentDefState) String() string {
	return proto.EnumName(ComponentDef_ComponentDefState_name, int32(x))
}

func (ComponentDef_ComponentDefState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{4, 0}
}

// Visibility permission of template
// Next available tag: 3
type IssueTemplate_TemplatePrivacy int32

const (
	// This value is unused.
	IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED IssueTemplate_TemplatePrivacy = 0
	// Owner project members may view this template.
	IssueTemplate_MEMBERS_ONLY IssueTemplate_TemplatePrivacy = 1
	// Anyone on the web can view this template.
	IssueTemplate_PUBLIC IssueTemplate_TemplatePrivacy = 2
)

var IssueTemplate_TemplatePrivacy_name = map[int32]string{
	0: "TEMPLATE_PRIVACY_UNSPECIFIED",
	1: "MEMBERS_ONLY",
	2: "PUBLIC",
}

var IssueTemplate_TemplatePrivacy_value = map[string]int32{
	"TEMPLATE_PRIVACY_UNSPECIFIED": 0,
	"MEMBERS_ONLY":                 1,
	"PUBLIC":                       2,
}

func (x IssueTemplate_TemplatePrivacy) String() string {
	return proto.EnumName(IssueTemplate_TemplatePrivacy_name, int32(x))
}

func (IssueTemplate_TemplatePrivacy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{7, 0}
}

// Indicator of who if anyone should be the default owner of the issue
// created with this template.
// Next available tag: 2
type IssueTemplate_DefaultOwner int32

const (
	// There is no default owner.
	// This value is used if the default owner is omitted.
	IssueTemplate_DEFAULT_OWNER_UNSPECIFIED IssueTemplate_DefaultOwner = 0
	// The owner should default to the Issue reporter if the reporter is a
	// member of the project.
	IssueTemplate_PROJECT_MEMBER_REPORTER IssueTemplate_DefaultOwner = 1
)

var IssueTemplate_DefaultOwner_name = map[int32]string{
	0: "DEFAULT_OWNER_UNSPECIFIED",
	1: "PROJECT_MEMBER_REPORTER",
}

var IssueTemplate_DefaultOwner_value = map[string]int32{
	"DEFAULT_OWNER_UNSPECIFIED": 0,
	"PROJECT_MEMBER_REPORTER":   1,
}

func (x IssueTemplate_DefaultOwner) String() string {
	return proto.EnumName(IssueTemplate_DefaultOwner_name, int32(x))
}

func (IssueTemplate_DefaultOwner) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{7, 1}
}

// The role the user has in the project.
// Next available tag: 4
type ProjectMember_ProjectRole int32

const (
	// The user has no role in the project.
	ProjectMember_PROJECT_ROLE_UNSPECIFIED ProjectMember_ProjectRole = 0
	// The user can make any changes to the project.
	ProjectMember_OWNER ProjectMember_ProjectRole = 1
	// The user may participate in the project but may not edit the project.
	ProjectMember_COMMITTER ProjectMember_ProjectRole = 2
	// The user starts with the same permissions as a non-member.
	ProjectMember_CONTRIBUTOR ProjectMember_ProjectRole = 3
)

var ProjectMember_ProjectRole_name = map[int32]string{
	0: "PROJECT_ROLE_UNSPECIFIED",
	1: "OWNER",
	2: "COMMITTER",
	3: "CONTRIBUTOR",
}

var ProjectMember_ProjectRole_value = map[string]int32{
	"PROJECT_ROLE_UNSPECIFIED": 0,
	"OWNER":                    1,
	"COMMITTER":                2,
	"CONTRIBUTOR":              3,
}

func (x ProjectMember_ProjectRole) String() string {
	return proto.EnumName(ProjectMember_ProjectRole_name, int32(x))
}

func (ProjectMember_ProjectRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{9, 0}
}

// Whether the user should show up in autocomplete.
// Next available tag: 3
type ProjectMember_AutocompleteVisibility int32

const (
	// No autocomplete visibility value specified.
	ProjectMember_AUTOCOMPLETE_VISIBILITY_UNSPECIFIED ProjectMember_AutocompleteVisibility = 0
	// The user should not show up in autocomplete.
	ProjectMember_HIDDEN ProjectMember_AutocompleteVisibility = 1
	// The user may show up in autocomplete.
	ProjectMember_SHOWN ProjectMember_AutocompleteVisibility = 2
)

var ProjectMember_AutocompleteVisibility_name = map[int32]string{
	0: "AUTOCOMPLETE_VISIBILITY_UNSPECIFIED",
	1: "HIDDEN",
	2: "SHOWN",
}

var ProjectMember_AutocompleteVisibility_value = map[string]int32{
	"AUTOCOMPLETE_VISIBILITY_UNSPECIFIED": 0,
	"HIDDEN":                              1,
	"SHOWN":                               2,
}

func (x ProjectMember_AutocompleteVisibility) String() string {
	return proto.EnumName(ProjectMember_AutocompleteVisibility_name, int32(x))
}

func (ProjectMember_AutocompleteVisibility) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{9, 1}
}

// The top level organization of issues in Monorail.
//
// See monorail/doc/userguide/concepts.md#Projects-and-roles.
// and monorail/doc/userguide/project-owners.md#why-does-monorail-have-projects
// Next available tag: 5
type Project struct {
	// Resource name of the project.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the project.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Summary of the project, ie describing what its use and purpose.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// URL pointing to this project's logo image.
	ThumbnailUrl         string   `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Project) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Project) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

// Potential steps along the development process that an issue can be in.
//
// See monorail/doc/userguide/project-owners.md#How-to-configure-statuses
// (-- aip.dev/not-precedent: "Status" should be reserved for HTTP/gRPC codes
//     per aip.dev/216. Monorail's Status  preceded the AIP standards, and is
//     used extensively throughout the system.)
// Next available tag: 7
type StatusDef struct {
	// Resource name of the status.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the status.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Type of this status.
	Type StatusDef_StatusDefType `protobuf:"varint,3,opt,name=type,proto3,enum=monorail.v3.StatusDef_StatusDefType" json:"type,omitempty"`
	// Sorting rank of this status. If we sort issues by status
	// this rank determines the sort order rather than status value.
	Rank uint32 `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	// Brief explanation of this status.
	Docstring string `protobuf:"bytes,5,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// State of this status.
	State                StatusDef_StatusDefState `protobuf:"varint,6,opt,name=state,proto3,enum=monorail.v3.StatusDef_StatusDefState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StatusDef) Reset()         { *m = StatusDef{} }
func (m *StatusDef) String() string { return proto.CompactTextString(m) }
func (*StatusDef) ProtoMessage()    {}
func (*StatusDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{1}
}

func (m *StatusDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDef.Unmarshal(m, b)
}
func (m *StatusDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDef.Marshal(b, m, deterministic)
}
func (m *StatusDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDef.Merge(m, src)
}
func (m *StatusDef) XXX_Size() int {
	return xxx_messageInfo_StatusDef.Size(m)
}
func (m *StatusDef) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDef.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDef proto.InternalMessageInfo

func (m *StatusDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StatusDef) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *StatusDef) GetType() StatusDef_StatusDefType {
	if m != nil {
		return m.Type
	}
	return StatusDef_STATUS_DEF_TYPE_UNSPECIFIED
}

func (m *StatusDef) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *StatusDef) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

func (m *StatusDef) GetState() StatusDef_StatusDefState {
	if m != nil {
		return m.State
	}
	return StatusDef_STATUS_DEF_STATE_UNSPECIFIED
}

// Well-known labels that can be applied to issues within the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 5
// Labels defined in this project.
type LabelDef struct {
	// Resource name of the label.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the label.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this label.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// State of this label.
	State                LabelDef_LabelDefState `protobuf:"varint,4,opt,name=state,proto3,enum=monorail.v3.LabelDef_LabelDefState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *LabelDef) Reset()         { *m = LabelDef{} }
func (m *LabelDef) String() string { return proto.CompactTextString(m) }
func (*LabelDef) ProtoMessage()    {}
func (*LabelDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{2}
}

func (m *LabelDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelDef.Unmarshal(m, b)
}
func (m *LabelDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelDef.Marshal(b, m, deterministic)
}
func (m *LabelDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelDef.Merge(m, src)
}
func (m *LabelDef) XXX_Size() int {
	return xxx_messageInfo_LabelDef.Size(m)
}
func (m *LabelDef) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelDef.DiscardUnknown(m)
}

var xxx_messageInfo_LabelDef proto.InternalMessageInfo

func (m *LabelDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LabelDef) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *LabelDef) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

func (m *LabelDef) GetState() LabelDef_LabelDefState {
	if m != nil {
		return m.State
	}
	return LabelDef_LABEL_DEF_STATE_UNSPECIFIED
}

// Custom fields defined for the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 10
type FieldDef struct {
	// Resource name of the field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the field.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Brief explanation of this field.
	Docstring string        `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	Type      FieldDef_Type `protobuf:"varint,4,opt,name=type,proto3,enum=monorail.v3.FieldDef_Type" json:"type,omitempty"`
	// Type of issue this field applies: ie Bug or Enhancement.
	// Note: type is indicated by any "Type-foo" label or "Type" custom field.
	ApplicableIssueType string `protobuf:"bytes,5,opt,name=applicable_issue_type,json=applicableIssueType,proto3" json:"applicable_issue_type,omitempty"`
	// Administrators of this field.
	Admins []string          `protobuf:"bytes,6,rep,name=admins,proto3" json:"admins,omitempty"`
	Traits []FieldDef_Traits `protobuf:"varint,7,rep,packed,name=traits,proto3,enum=monorail.v3.FieldDef_Traits" json:"traits,omitempty"`
	// ApprovalDef that this field belongs to, if applicable.
	ApprovalParent       string                     `protobuf:"bytes,8,opt,name=approval_parent,json=approvalParent,proto3" json:"approval_parent,omitempty"`
	EnumSettings         *FieldDef_EnumTypeSettings `protobuf:"bytes,9,opt,name=enum_settings,json=enumSettings,proto3" json:"enum_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *FieldDef) Reset()         { *m = FieldDef{} }
func (m *FieldDef) String() string { return proto.CompactTextString(m) }
func (*FieldDef) ProtoMessage()    {}
func (*FieldDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{3}
}

func (m *FieldDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDef.Unmarshal(m, b)
}
func (m *FieldDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDef.Marshal(b, m, deterministic)
}
func (m *FieldDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDef.Merge(m, src)
}
func (m *FieldDef) XXX_Size() int {
	return xxx_messageInfo_FieldDef.Size(m)
}
func (m *FieldDef) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDef.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDef proto.InternalMessageInfo

func (m *FieldDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDef) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *FieldDef) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

func (m *FieldDef) GetType() FieldDef_Type {
	if m != nil {
		return m.Type
	}
	return FieldDef_FIELD_DEF_TYPE_UNSPECIFIED
}

func (m *FieldDef) GetApplicableIssueType() string {
	if m != nil {
		return m.ApplicableIssueType
	}
	return ""
}

func (m *FieldDef) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *FieldDef) GetTraits() []FieldDef_Traits {
	if m != nil {
		return m.Traits
	}
	return nil
}

func (m *FieldDef) GetApprovalParent() string {
	if m != nil {
		return m.ApprovalParent
	}
	return ""
}

func (m *FieldDef) GetEnumSettings() *FieldDef_EnumTypeSettings {
	if m != nil {
		return m.EnumSettings
	}
	return nil
}

// Settings specific to enum type fields.
// Next available tag: 2
type FieldDef_EnumTypeSettings struct {
	Choices              []*FieldDef_EnumTypeSettings_Choice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *FieldDef_EnumTypeSettings) Reset()         { *m = FieldDef_EnumTypeSettings{} }
func (m *FieldDef_EnumTypeSettings) String() string { return proto.CompactTextString(m) }
func (*FieldDef_EnumTypeSettings) ProtoMessage()    {}
func (*FieldDef_EnumTypeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{3, 0}
}

func (m *FieldDef_EnumTypeSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDef_EnumTypeSettings.Unmarshal(m, b)
}
func (m *FieldDef_EnumTypeSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDef_EnumTypeSettings.Marshal(b, m, deterministic)
}
func (m *FieldDef_EnumTypeSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDef_EnumTypeSettings.Merge(m, src)
}
func (m *FieldDef_EnumTypeSettings) XXX_Size() int {
	return xxx_messageInfo_FieldDef_EnumTypeSettings.Size(m)
}
func (m *FieldDef_EnumTypeSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDef_EnumTypeSettings.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDef_EnumTypeSettings proto.InternalMessageInfo

func (m *FieldDef_EnumTypeSettings) GetChoices() []*FieldDef_EnumTypeSettings_Choice {
	if m != nil {
		return m.Choices
	}
	return nil
}

// One available choice for an enum field.
// Next available tag: 3
type FieldDef_EnumTypeSettings_Choice struct {
	// Value of this choice.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this choice.
	Docstring            string   `protobuf:"bytes,2,opt,name=docstring,proto3" json:"docstring,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDef_EnumTypeSettings_Choice) Reset()         { *m = FieldDef_EnumTypeSettings_Choice{} }
func (m *FieldDef_EnumTypeSettings_Choice) String() string { return proto.CompactTextString(m) }
func (*FieldDef_EnumTypeSettings_Choice) ProtoMessage()    {}
func (*FieldDef_EnumTypeSettings_Choice) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{3, 0, 0}
}

func (m *FieldDef_EnumTypeSettings_Choice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDef_EnumTypeSettings_Choice.Unmarshal(m, b)
}
func (m *FieldDef_EnumTypeSettings_Choice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDef_EnumTypeSettings_Choice.Marshal(b, m, deterministic)
}
func (m *FieldDef_EnumTypeSettings_Choice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDef_EnumTypeSettings_Choice.Merge(m, src)
}
func (m *FieldDef_EnumTypeSettings_Choice) XXX_Size() int {
	return xxx_messageInfo_FieldDef_EnumTypeSettings_Choice.Size(m)
}
func (m *FieldDef_EnumTypeSettings_Choice) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDef_EnumTypeSettings_Choice.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDef_EnumTypeSettings_Choice proto.InternalMessageInfo

func (m *FieldDef_EnumTypeSettings_Choice) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *FieldDef_EnumTypeSettings_Choice) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

// A high level definition of the part of the software affected by an issue.
//
// See monorail/doc/userguide/project-owners.md#how-to-configure-components.
// Next available tag: 12
type ComponentDef struct {
	// Resource name of the component, aka identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the component, ie 'Tools>Stability' or 'Blink'.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this component.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// Administrators of this component.
	Admins []string `protobuf:"bytes,4,rep,name=admins,proto3" json:"admins,omitempty"`
	// Auto cc'ed users of this component.
	Ccs []string `protobuf:"bytes,5,rep,name=ccs,proto3" json:"ccs,omitempty"`
	// State of this component.
	State ComponentDef_ComponentDefState `protobuf:"varint,6,opt,name=state,proto3,enum=monorail.v3.ComponentDef_ComponentDefState" json:"state,omitempty"`
	// The user that created this component.
	Creator string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	// The user that last modified this component.
	Modifier string `protobuf:"bytes,8,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// The time this component was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The time this component was last modified.
	ModifyTime *timestamp.Timestamp `protobuf:"bytes,10,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`
	// Labels that auto-apply to issues in this component.
	Labels               []string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComponentDef) Reset()         { *m = ComponentDef{} }
func (m *ComponentDef) String() string { return proto.CompactTextString(m) }
func (*ComponentDef) ProtoMessage()    {}
func (*ComponentDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{4}
}

func (m *ComponentDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComponentDef.Unmarshal(m, b)
}
func (m *ComponentDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComponentDef.Marshal(b, m, deterministic)
}
func (m *ComponentDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComponentDef.Merge(m, src)
}
func (m *ComponentDef) XXX_Size() int {
	return xxx_messageInfo_ComponentDef.Size(m)
}
func (m *ComponentDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ComponentDef.DiscardUnknown(m)
}

var xxx_messageInfo_ComponentDef proto.InternalMessageInfo

func (m *ComponentDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ComponentDef) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ComponentDef) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

func (m *ComponentDef) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *ComponentDef) GetCcs() []string {
	if m != nil {
		return m.Ccs
	}
	return nil
}

func (m *ComponentDef) GetState() ComponentDef_ComponentDefState {
	if m != nil {
		return m.State
	}
	return ComponentDef_COMPONENT_DEF_STATE_UNSPECIFIED
}

func (m *ComponentDef) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ComponentDef) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *ComponentDef) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ComponentDef) GetModifyTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifyTime
	}
	return nil
}

func (m *ComponentDef) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Defines approvals that issues within the project may need.
//
// TODO(monorail:7193): Add documentation for approvals.
// Next available tag: 7
type ApprovalDef struct {
	// Resource name of the approval.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the field.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Brief explanation of this field.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// Information approvers need from requester.
	// May be adjusted on the issue after creation.
	Survey string `protobuf:"bytes,4,opt,name=survey,proto3" json:"survey,omitempty"`
	// Default list of users who can approve this field.
	// May be adjusted on the issue after creation.
	Approvers []string `protobuf:"bytes,5,rep,name=approvers,proto3" json:"approvers,omitempty"`
	// Administrators of this field.
	Admins               []string `protobuf:"bytes,6,rep,name=admins,proto3" json:"admins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApprovalDef) Reset()         { *m = ApprovalDef{} }
func (m *ApprovalDef) String() string { return proto.CompactTextString(m) }
func (*ApprovalDef) ProtoMessage()    {}
func (*ApprovalDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{5}
}

func (m *ApprovalDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalDef.Unmarshal(m, b)
}
func (m *ApprovalDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalDef.Marshal(b, m, deterministic)
}
func (m *ApprovalDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalDef.Merge(m, src)
}
func (m *ApprovalDef) XXX_Size() int {
	return xxx_messageInfo_ApprovalDef.Size(m)
}
func (m *ApprovalDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalDef.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalDef proto.InternalMessageInfo

func (m *ApprovalDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApprovalDef) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ApprovalDef) GetDocstring() string {
	if m != nil {
		return m.Docstring
	}
	return ""
}

func (m *ApprovalDef) GetSurvey() string {
	if m != nil {
		return m.Survey
	}
	return ""
}

func (m *ApprovalDef) GetApprovers() []string {
	if m != nil {
		return m.Approvers
	}
	return nil
}

func (m *ApprovalDef) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

// Defines saved queries that belong to a project
//
// Next available tag: 4
type ProjectSavedQuery struct {
	// Resource name of this saved query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this saved query, ie 'open issues'.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Search term of this saved query.
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectSavedQuery) Reset()         { *m = ProjectSavedQuery{} }
func (m *ProjectSavedQuery) String() string { return proto.CompactTextString(m) }
func (*ProjectSavedQuery) ProtoMessage()    {}
func (*ProjectSavedQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{6}
}

func (m *ProjectSavedQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectSavedQuery.Unmarshal(m, b)
}
func (m *ProjectSavedQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectSavedQuery.Marshal(b, m, deterministic)
}
func (m *ProjectSavedQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectSavedQuery.Merge(m, src)
}
func (m *ProjectSavedQuery) XXX_Size() int {
	return xxx_messageInfo_ProjectSavedQuery.Size(m)
}
func (m *ProjectSavedQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectSavedQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectSavedQuery proto.InternalMessageInfo

func (m *ProjectSavedQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectSavedQuery) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ProjectSavedQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Defines a template for filling issues.
// Next available tag: 10
type IssueTemplate struct {
	// Resource name of the template.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this template.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Canonical Issue for this template
	Issue *Issue `protobuf:"bytes,3,opt,name=issue,proto3" json:"issue,omitempty"`
	// ApprovalValues to be created with the issue when using this template.
	ApprovalValues []*ApprovalValue `protobuf:"bytes,9,rep,name=approval_values,json=approvalValues,proto3" json:"approval_values,omitempty"`
	// Boolean indicating subsequent issue creation must have delta in summary
	SummaryMustBeEdited bool                          `protobuf:"varint,4,opt,name=summary_must_be_edited,json=summaryMustBeEdited,proto3" json:"summary_must_be_edited,omitempty"`
	TemplatePrivacy     IssueTemplate_TemplatePrivacy `protobuf:"varint,5,opt,name=template_privacy,json=templatePrivacy,proto3,enum=monorail.v3.IssueTemplate_TemplatePrivacy" json:"template_privacy,omitempty"`
	DefaultOwner        IssueTemplate_DefaultOwner    `protobuf:"varint,6,opt,name=default_owner,json=defaultOwner,proto3,enum=monorail.v3.IssueTemplate_DefaultOwner" json:"default_owner,omitempty"`
	// Boolean indicating whether issue must have a component.
	ComponentRequired bool `protobuf:"varint,7,opt,name=component_required,json=componentRequired,proto3" json:"component_required,omitempty"`
	// Names of Users who can administer this template.
	Admins               []string `protobuf:"bytes,8,rep,name=admins,proto3" json:"admins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueTemplate) Reset()         { *m = IssueTemplate{} }
func (m *IssueTemplate) String() string { return proto.CompactTextString(m) }
func (*IssueTemplate) ProtoMessage()    {}
func (*IssueTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{7}
}

func (m *IssueTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueTemplate.Unmarshal(m, b)
}
func (m *IssueTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueTemplate.Marshal(b, m, deterministic)
}
func (m *IssueTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueTemplate.Merge(m, src)
}
func (m *IssueTemplate) XXX_Size() int {
	return xxx_messageInfo_IssueTemplate.Size(m)
}
func (m *IssueTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_IssueTemplate proto.InternalMessageInfo

func (m *IssueTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IssueTemplate) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *IssueTemplate) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

func (m *IssueTemplate) GetApprovalValues() []*ApprovalValue {
	if m != nil {
		return m.ApprovalValues
	}
	return nil
}

func (m *IssueTemplate) GetSummaryMustBeEdited() bool {
	if m != nil {
		return m.SummaryMustBeEdited
	}
	return false
}

func (m *IssueTemplate) GetTemplatePrivacy() IssueTemplate_TemplatePrivacy {
	if m != nil {
		return m.TemplatePrivacy
	}
	return IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED
}

func (m *IssueTemplate) GetDefaultOwner() IssueTemplate_DefaultOwner {
	if m != nil {
		return m.DefaultOwner
	}
	return IssueTemplate_DEFAULT_OWNER_UNSPECIFIED
}

func (m *IssueTemplate) GetComponentRequired() bool {
	if m != nil {
		return m.ComponentRequired
	}
	return false
}

func (m *IssueTemplate) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

// Defines configurations of a project
//
// Next available tag: 11
type ProjectConfig struct {
	// Resource name of the project config.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Set of label prefixes that only apply once per issue.
	// E.g. priority, since no issue can be both Priority-High and Priority-Low.
	ExclusiveLabelPrefixes []string `protobuf:"bytes,2,rep,name=exclusive_label_prefixes,json=exclusiveLabelPrefixes,proto3" json:"exclusive_label_prefixes,omitempty"`
	// Default search query for this project's members.
	MemberDefaultQuery string `protobuf:"bytes,3,opt,name=member_default_query,json=memberDefaultQuery,proto3" json:"member_default_query,omitempty"`
	// TODO(crbug.com/monorail/7517): consider using IssuesListColumn
	// Default sort specification for this project.
	DefaultSort string `protobuf:"bytes,4,opt,name=default_sort,json=defaultSort,proto3" json:"default_sort,omitempty"`
	// Default columns for displaying issue list for this project.
	DefaultColumns    []*IssuesListColumn           `protobuf:"bytes,5,rep,name=default_columns,json=defaultColumns,proto3" json:"default_columns,omitempty"`
	ProjectGridConfig *ProjectConfig_GridViewConfig `protobuf:"bytes,6,opt,name=project_grid_config,json=projectGridConfig,proto3" json:"project_grid_config,omitempty"`
	// Default template used for issue entry for members of this project.
	MemberDefaultTemplate string `protobuf:"bytes,7,opt,name=member_default_template,json=memberDefaultTemplate,proto3" json:"member_default_template,omitempty"`
	// Default template used for issue entry for non-members of this project.
	NonMembersDefaultTemplate string `protobuf:"bytes,8,opt,name=non_members_default_template,json=nonMembersDefaultTemplate,proto3" json:"non_members_default_template,omitempty"`
	// URL to browse project's source code revisions for any given revnum.
	// E.g. https://crrev.com/{revnum}
	RevisionUrlFormat string `protobuf:"bytes,9,opt,name=revision_url_format,json=revisionUrlFormat,proto3" json:"revision_url_format,omitempty"`
	// A project's custom URL for the "New issue" link, only if specified.
	CustomIssueEntryUrl  string   `protobuf:"bytes,10,opt,name=custom_issue_entry_url,json=customIssueEntryUrl,proto3" json:"custom_issue_entry_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectConfig) Reset()         { *m = ProjectConfig{} }
func (m *ProjectConfig) String() string { return proto.CompactTextString(m) }
func (*ProjectConfig) ProtoMessage()    {}
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{8}
}

func (m *ProjectConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectConfig.Unmarshal(m, b)
}
func (m *ProjectConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectConfig.Marshal(b, m, deterministic)
}
func (m *ProjectConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectConfig.Merge(m, src)
}
func (m *ProjectConfig) XXX_Size() int {
	return xxx_messageInfo_ProjectConfig.Size(m)
}
func (m *ProjectConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectConfig proto.InternalMessageInfo

func (m *ProjectConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectConfig) GetExclusiveLabelPrefixes() []string {
	if m != nil {
		return m.ExclusiveLabelPrefixes
	}
	return nil
}

func (m *ProjectConfig) GetMemberDefaultQuery() string {
	if m != nil {
		return m.MemberDefaultQuery
	}
	return ""
}

func (m *ProjectConfig) GetDefaultSort() string {
	if m != nil {
		return m.DefaultSort
	}
	return ""
}

func (m *ProjectConfig) GetDefaultColumns() []*IssuesListColumn {
	if m != nil {
		return m.DefaultColumns
	}
	return nil
}

func (m *ProjectConfig) GetProjectGridConfig() *ProjectConfig_GridViewConfig {
	if m != nil {
		return m.ProjectGridConfig
	}
	return nil
}

func (m *ProjectConfig) GetMemberDefaultTemplate() string {
	if m != nil {
		return m.MemberDefaultTemplate
	}
	return ""
}

func (m *ProjectConfig) GetNonMembersDefaultTemplate() string {
	if m != nil {
		return m.NonMembersDefaultTemplate
	}
	return ""
}

func (m *ProjectConfig) GetRevisionUrlFormat() string {
	if m != nil {
		return m.RevisionUrlFormat
	}
	return ""
}

func (m *ProjectConfig) GetCustomIssueEntryUrl() string {
	if m != nil {
		return m.CustomIssueEntryUrl
	}
	return ""
}

// Grid view configurations.
// Next available tag: 3
type ProjectConfig_GridViewConfig struct {
	// Default column dimension in grid view for this project.
	DefaultXAttr string `protobuf:"bytes,1,opt,name=default_x_attr,json=defaultXAttr,proto3" json:"default_x_attr,omitempty"`
	// Default row dimension in grid view for this project.
	DefaultYAttr         string   `protobuf:"bytes,2,opt,name=default_y_attr,json=defaultYAttr,proto3" json:"default_y_attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectConfig_GridViewConfig) Reset()         { *m = ProjectConfig_GridViewConfig{} }
func (m *ProjectConfig_GridViewConfig) String() string { return proto.CompactTextString(m) }
func (*ProjectConfig_GridViewConfig) ProtoMessage()    {}
func (*ProjectConfig_GridViewConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{8, 0}
}

func (m *ProjectConfig_GridViewConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectConfig_GridViewConfig.Unmarshal(m, b)
}
func (m *ProjectConfig_GridViewConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectConfig_GridViewConfig.Marshal(b, m, deterministic)
}
func (m *ProjectConfig_GridViewConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectConfig_GridViewConfig.Merge(m, src)
}
func (m *ProjectConfig_GridViewConfig) XXX_Size() int {
	return xxx_messageInfo_ProjectConfig_GridViewConfig.Size(m)
}
func (m *ProjectConfig_GridViewConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectConfig_GridViewConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectConfig_GridViewConfig proto.InternalMessageInfo

func (m *ProjectConfig_GridViewConfig) GetDefaultXAttr() string {
	if m != nil {
		return m.DefaultXAttr
	}
	return ""
}

func (m *ProjectConfig_GridViewConfig) GetDefaultYAttr() string {
	if m != nil {
		return m.DefaultYAttr
	}
	return ""
}

// Specifies info for a member of a project.
//
// Next available tag: 7
type ProjectMember struct {
	// Resource name of the Project Member.
	// projects/{project}/members/{user_id}
	Name string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role ProjectMember_ProjectRole `protobuf:"varint,2,opt,name=role,proto3,enum=monorail.v3.ProjectMember_ProjectRole" json:"role,omitempty"`
	// Which built-in/standard permissions the user has set.
	StandardPerms []Permission `protobuf:"varint,3,rep,packed,name=standard_perms,json=standardPerms,proto3,enum=monorail.v3.Permission" json:"standard_perms,omitempty"`
	// Custom permissions defined for the user.
	// eg. "Google" in "Restrict-View-Google" is an example custom permission.
	CustomPerms []string `protobuf:"bytes,4,rep,name=custom_perms,json=customPerms,proto3" json:"custom_perms,omitempty"`
	// Annotations about a user configured by project owners.
	// Visible to anyone who can see the project's settings.
	Notes                 string                               `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	IncludeInAutocomplete ProjectMember_AutocompleteVisibility `protobuf:"varint,6,opt,name=include_in_autocomplete,json=includeInAutocomplete,proto3,enum=monorail.v3.ProjectMember_AutocompleteVisibility" json:"include_in_autocomplete,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                             `json:"-"`
	XXX_unrecognized      []byte                               `json:"-"`
	XXX_sizecache         int32                                `json:"-"`
}

func (m *ProjectMember) Reset()         { *m = ProjectMember{} }
func (m *ProjectMember) String() string { return proto.CompactTextString(m) }
func (*ProjectMember) ProtoMessage()    {}
func (*ProjectMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_3afd7c48e1999f3c, []int{9}
}

func (m *ProjectMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectMember.Unmarshal(m, b)
}
func (m *ProjectMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectMember.Marshal(b, m, deterministic)
}
func (m *ProjectMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectMember.Merge(m, src)
}
func (m *ProjectMember) XXX_Size() int {
	return xxx_messageInfo_ProjectMember.Size(m)
}
func (m *ProjectMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectMember.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectMember proto.InternalMessageInfo

func (m *ProjectMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectMember) GetRole() ProjectMember_ProjectRole {
	if m != nil {
		return m.Role
	}
	return ProjectMember_PROJECT_ROLE_UNSPECIFIED
}

func (m *ProjectMember) GetStandardPerms() []Permission {
	if m != nil {
		return m.StandardPerms
	}
	return nil
}

func (m *ProjectMember) GetCustomPerms() []string {
	if m != nil {
		return m.CustomPerms
	}
	return nil
}

func (m *ProjectMember) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *ProjectMember) GetIncludeInAutocomplete() ProjectMember_AutocompleteVisibility {
	if m != nil {
		return m.IncludeInAutocomplete
	}
	return ProjectMember_AUTOCOMPLETE_VISIBILITY_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("monorail.v3.StatusDef_StatusDefType", StatusDef_StatusDefType_name, StatusDef_StatusDefType_value)
	proto.RegisterEnum("monorail.v3.StatusDef_StatusDefState", StatusDef_StatusDefState_name, StatusDef_StatusDefState_value)
	proto.RegisterEnum("monorail.v3.LabelDef_LabelDefState", LabelDef_LabelDefState_name, LabelDef_LabelDefState_value)
	proto.RegisterEnum("monorail.v3.FieldDef_Type", FieldDef_Type_name, FieldDef_Type_value)
	proto.RegisterEnum("monorail.v3.FieldDef_Traits", FieldDef_Traits_name, FieldDef_Traits_value)
	proto.RegisterEnum("monorail.v3.ComponentDef_ComponentDefState", ComponentDef_ComponentDefState_name, ComponentDef_ComponentDefState_value)
	proto.RegisterEnum("monorail.v3.IssueTemplate_TemplatePrivacy", IssueTemplate_TemplatePrivacy_name, IssueTemplate_TemplatePrivacy_value)
	proto.RegisterEnum("monorail.v3.IssueTemplate_DefaultOwner", IssueTemplate_DefaultOwner_name, IssueTemplate_DefaultOwner_value)
	proto.RegisterEnum("monorail.v3.ProjectMember_ProjectRole", ProjectMember_ProjectRole_name, ProjectMember_ProjectRole_value)
	proto.RegisterEnum("monorail.v3.ProjectMember_AutocompleteVisibility", ProjectMember_AutocompleteVisibility_name, ProjectMember_AutocompleteVisibility_value)
	proto.RegisterType((*Project)(nil), "monorail.v3.Project")
	proto.RegisterType((*StatusDef)(nil), "monorail.v3.StatusDef")
	proto.RegisterType((*LabelDef)(nil), "monorail.v3.LabelDef")
	proto.RegisterType((*FieldDef)(nil), "monorail.v3.FieldDef")
	proto.RegisterType((*FieldDef_EnumTypeSettings)(nil), "monorail.v3.FieldDef.EnumTypeSettings")
	proto.RegisterType((*FieldDef_EnumTypeSettings_Choice)(nil), "monorail.v3.FieldDef.EnumTypeSettings.Choice")
	proto.RegisterType((*ComponentDef)(nil), "monorail.v3.ComponentDef")
	proto.RegisterType((*ApprovalDef)(nil), "monorail.v3.ApprovalDef")
	proto.RegisterType((*ProjectSavedQuery)(nil), "monorail.v3.ProjectSavedQuery")
	proto.RegisterType((*IssueTemplate)(nil), "monorail.v3.IssueTemplate")
	proto.RegisterType((*ProjectConfig)(nil), "monorail.v3.ProjectConfig")
	proto.RegisterType((*ProjectConfig_GridViewConfig)(nil), "monorail.v3.ProjectConfig.GridViewConfig")
	proto.RegisterType((*ProjectMember)(nil), "monorail.v3.ProjectMember")
}

func init() {
	proto.RegisterFile("api/v3/api_proto/project_objects.proto", fileDescriptor_3afd7c48e1999f3c)
}

var fileDescriptor_3afd7c48e1999f3c = []byte{
	// 2044 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0x1b, 0x49,
	0x15, 0x46, 0x92, 0x25, 0xdb, 0x47, 0xb6, 0x32, 0xee, 0x24, 0xb6, 0xa2, 0x64, 0x89, 0x57, 0x59,
	0xb2, 0x0e, 0xbb, 0x91, 0xc0, 0x59, 0xa8, 0xe0, 0xa5, 0x28, 0xc6, 0xd2, 0x38, 0x51, 0xd0, 0x5f,
	0x5a, 0x23, 0xef, 0xa6, 0x6a, 0xa9, 0xa9, 0x91, 0xd4, 0x76, 0x06, 0xe6, 0x47, 0xdb, 0x3d, 0xe3,
	0x8d, 0xca, 0xe5, 0x7b, 0x5e, 0x81, 0x4b, 0xae, 0x78, 0x01, 0x8a, 0x97, 0xe0, 0x1d, 0xa8, 0x5c,
	0xfb, 0x86, 0x2b, 0x6e, 0x72, 0x45, 0xf5, 0xcf, 0xc8, 0x1a, 0x59, 0x76, 0xb2, 0x0b, 0x5c, 0xa9,
	0xbb, 0xcf, 0x77, 0x4e, 0x77, 0x7f, 0xe7, 0xa7, 0xcf, 0x08, 0x1e, 0xda, 0x63, 0xa7, 0x7a, 0xf2,
	0xa4, 0x6a, 0x8f, 0x1d, 0x6b, 0x4c, 0x83, 0x30, 0xa8, 0x8e, 0x69, 0xf0, 0x07, 0x32, 0x0c, 0xad,
	0x60, 0xc0, 0x7f, 0x58, 0x45, 0xac, 0xa2, 0xbc, 0x17, 0xf8, 0x01, 0xb5, 0x1d, 0xb7, 0x72, 0xf2,
	0xa4, 0x74, 0xff, 0x38, 0x08, 0x8e, 0x5d, 0x52, 0x15, 0xa2, 0x41, 0x74, 0x54, 0x0d, 0x1d, 0x8f,
	0xb0, 0xd0, 0xf6, 0xc6, 0x12, 0x5d, 0xfa, 0x5c, 0x02, 0x94, 0x45, 0x85, 0xe6, 0x3b, 0x1d, 0x39,
	0xc4, 0x1d, 0x59, 0x03, 0xf2, 0xda, 0x3e, 0x71, 0x02, 0xaa, 0xd0, 0x0f, 0xaf, 0x42, 0x53, 0xc2,
	0x82, 0x88, 0x0e, 0x89, 0xc2, 0x7d, 0x72, 0xe9, 0xac, 0x0e, 0x63, 0x11, 0x49, 0x9e, 0xb4, 0xf4,
	0xe8, 0xf2, 0x8d, 0x08, 0xf5, 0x1c, 0xc6, 0x9c, 0xc0, 0x4f, 0x42, 0xcb, 0x7f, 0x4b, 0xc1, 0x72,
	0x57, 0x5e, 0x17, 0x21, 0x58, 0xf2, 0x6d, 0x8f, 0x14, 0x53, 0xdb, 0xa9, 0x9d, 0x55, 0x2c, 0xc6,
	0xe8, 0x21, 0xac, 0x8d, 0x1c, 0x36, 0x76, 0xed, 0x89, 0x25, 0x64, 0x69, 0x2e, 0xdb, 0xcf, 0xbc,
	0xd5, 0xb3, 0x38, 0xaf, 0x04, 0x6d, 0x8e, 0x2b, 0xc2, 0x32, 0x8b, 0x3c, 0xcf, 0xa6, 0x93, 0x62,
	0x46, 0xa8, 0xc7, 0x53, 0xf4, 0x00, 0xd6, 0xc3, 0xd7, 0x91, 0x37, 0xf0, 0x6d, 0xc7, 0xb5, 0x22,
	0xea, 0x16, 0x97, 0x84, 0x7c, 0x6d, 0xba, 0xd8, 0xa7, 0xee, 0x5e, 0xe5, 0x5c, 0xff, 0x0c, 0x6e,
	0xdb, 0x63, 0xa7, 0x32, 0xa4, 0x83, 0xe8, 0xb8, 0x32, 0x0c, 0xbc, 0xea, 0xf4, 0x58, 0xca, 0x1d,
	0xac, 0x7a, 0xaa, 0x46, 0x67, 0xe5, 0x7f, 0x64, 0x60, 0xb5, 0x17, 0xda, 0x61, 0xc4, 0xea, 0xe4,
	0x68, 0xe1, 0xc1, 0x6f, 0x41, 0xf6, 0xc4, 0x76, 0x23, 0x75, 0x62, 0x2c, 0x27, 0xe8, 0x29, 0x2c,
	0x85, 0x93, 0x31, 0x11, 0x67, 0x2c, 0xec, 0x7e, 0x52, 0x99, 0x71, 0x69, 0x65, 0x6a, 0xef, 0x62,
	0x64, 0x4e, 0xc6, 0x04, 0x0b, 0x0d, 0xbe, 0x07, 0xb5, 0xfd, 0x3f, 0x8a, 0xd3, 0xaf, 0x63, 0x31,
	0x46, 0xf7, 0x60, 0x75, 0x14, 0x0c, 0x59, 0x48, 0x1d, 0xff, 0xb8, 0x98, 0x15, 0xfb, 0x5c, 0x2c,
	0xa0, 0x2f, 0x21, 0xcb, 0x42, 0x3b, 0x24, 0xc5, 0x9c, 0xd8, 0xec, 0x27, 0xef, 0xdb, 0x8c, 0x0f,
	0x08, 0x96, 0x3a, 0x65, 0x0c, 0xeb, 0x89, 0x53, 0xa0, 0xfb, 0x70, 0xb7, 0x67, 0xea, 0x66, 0xbf,
	0x67, 0xd5, 0x8d, 0x03, 0xcb, 0x7c, 0xd5, 0x35, 0xac, 0x7e, 0xbb, 0xd7, 0x35, 0x6a, 0x8d, 0x83,
	0x86, 0x51, 0xd7, 0x7e, 0x84, 0x56, 0x60, 0xa9, 0xd3, 0x35, 0xda, 0x5a, 0x0a, 0x01, 0xe4, 0x6a,
	0xcd, 0x4e, 0xcf, 0xa8, 0x6b, 0x69, 0x3e, 0x6e, 0x19, 0xf8, 0x99, 0x51, 0xd7, 0x32, 0xe5, 0x36,
	0x14, 0x92, 0x9b, 0xa1, 0x6d, 0xb8, 0x37, 0x63, 0x94, 0x0f, 0xe7, 0xad, 0x16, 0x00, 0xea, 0x46,
	0x17, 0x1b, 0x35, 0xdd, 0x34, 0xea, 0xd2, 0xb6, 0x5e, 0x33, 0x1b, 0x87, 0x86, 0x96, 0xde, 0x7b,
	0x76, 0xae, 0xd7, 0x61, 0x2b, 0xe9, 0xb4, 0x0b, 0xa7, 0x3c, 0xba, 0xec, 0xb6, 0x2a, 0x8b, 0xa5,
	0xac, 0x7a, 0x3a, 0x1d, 0x9f, 0x95, 0xff, 0x92, 0x86, 0x95, 0xa6, 0x3d, 0x20, 0xee, 0xf7, 0x73,
	0x66, 0x82, 0xfe, 0xcc, 0x3c, 0xfd, 0xbf, 0x8a, 0xe9, 0x5f, 0x12, 0xf4, 0x3f, 0x48, 0xd0, 0x1f,
	0xef, 0x36, 0x1d, 0x24, 0xc8, 0x6f, 0xc2, 0x7a, 0x62, 0x9d, 0x93, 0xdf, 0xd4, 0xf7, 0x8d, 0xe6,
	0x0f, 0xa2, 0xa9, 0x7e, 0xae, 0xeb, 0xb0, 0x99, 0xa4, 0x69, 0x7a, 0xdb, 0x4f, 0x17, 0xb0, 0xe4,
	0x2a, 0x21, 0xab, 0x9e, 0xc6, 0xc3, 0xb3, 0xf2, 0xbf, 0x72, 0xb0, 0x72, 0xc0, 0x4b, 0xc7, 0x55,
	0x1c, 0x7d, 0x68, 0xa6, 0x5e, 0xcf, 0xda, 0x13, 0x95, 0x20, 0x92, 0xb4, 0x52, 0x82, 0xb4, 0x78,
	0xfb, 0x0a, 0x0f, 0x48, 0x69, 0x59, 0xe6, 0xc6, 0x2e, 0x4f, 0xdd, 0xb1, 0xeb, 0x0c, 0xed, 0x81,
	0x4b, 0x2c, 0x59, 0x91, 0x84, 0x15, 0x99, 0x13, 0x37, 0x2f, 0x84, 0x0d, 0x2e, 0x13, 0xf1, 0x5c,
	0x85, 0x9c, 0x3d, 0xf2, 0x1c, 0x9f, 0x15, 0x73, 0xdb, 0x99, 0x9d, 0xd5, 0xfd, 0xad, 0x77, 0xfa,
	0x2d, 0x40, 0x49, 0x96, 0xfa, 0x8c, 0x50, 0xac, 0x60, 0xe8, 0x0b, 0xc8, 0x85, 0xd4, 0x76, 0x42,
	0x56, 0x5c, 0xde, 0xce, 0xec, 0x14, 0x76, 0xef, 0x5d, 0x71, 0x36, 0x81, 0xc1, 0x0a, 0x8b, 0x5e,
	0xc0, 0x0d, 0x7b, 0x3c, 0xa6, 0xc1, 0x89, 0xed, 0x5a, 0x63, 0x9b, 0x12, 0x3f, 0x2c, 0xae, 0x08,
	0x62, 0x3e, 0x7e, 0xab, 0x67, 0xdf, 0xe9, 0x77, 0xe1, 0x4e, 0x72, 0x4b, 0x5d, 0x81, 0xeb, 0xe4,
	0x08, 0x17, 0x62, 0xcd, 0xae, 0x50, 0x44, 0xbf, 0x83, 0x75, 0xe2, 0x47, 0x9e, 0xc5, 0x48, 0x18,
	0x3a, 0xfe, 0x31, 0x2b, 0xae, 0x6e, 0xa7, 0x76, 0xf2, 0xbb, 0x0f, 0x17, 0x1f, 0xc4, 0xf0, 0x23,
	0x8f, 0xdf, 0xb4, 0xa7, 0xd0, 0x78, 0x8d, 0x2b, 0xc7, 0xb3, 0xd2, 0x9f, 0x53, 0xa0, 0xcd, 0x43,
	0xd0, 0x33, 0x58, 0x1e, 0xbe, 0x0e, 0x9c, 0x21, 0x61, 0xc5, 0xd4, 0x76, 0x66, 0x27, 0xbf, 0xfb,
	0xf8, 0xc3, 0x6c, 0x57, 0x6a, 0x42, 0x0b, 0xc7, 0xda, 0xa5, 0x5f, 0x43, 0x4e, 0x2e, 0x5d, 0xa4,
	0x4e, 0xea, 0xca, 0xd4, 0x49, 0xcf, 0x05, 0x41, 0xd9, 0x82, 0x25, 0xe1, 0xa3, 0x1f, 0x43, 0xe9,
	0xa0, 0x61, 0x34, 0xeb, 0xd7, 0x94, 0x1c, 0xa3, 0xdd, 0x6f, 0x69, 0x29, 0xb4, 0x0c, 0x99, 0x46,
	0xdb, 0xd4, 0xd2, 0x7c, 0xd0, 0x33, 0xb1, 0x96, 0xe1, 0xb2, 0x7e, 0xcf, 0xc0, 0xda, 0x12, 0x1f,
	0xd5, 0x75, 0xd3, 0xd0, 0xb2, 0x5c, 0xd8, 0xc7, 0x4d, 0x2d, 0x57, 0xfe, 0x3d, 0xe4, 0xa4, 0x9f,
	0xd0, 0x6d, 0xd8, 0x30, 0xb1, 0xde, 0x30, 0xe7, 0x2c, 0xaf, 0xc1, 0x0a, 0x36, 0x5e, 0xf6, 0x1b,
	0x58, 0x64, 0x13, 0x82, 0x42, 0xdd, 0x38, 0xd0, 0xfb, 0x4d, 0xd3, 0x7a, 0xde, 0xa8, 0xd7, 0x8d,
	0xb6, 0x96, 0x46, 0x37, 0x20, 0xdf, 0xea, 0x37, 0xcd, 0xc6, 0xa1, 0xde, 0xec, 0xf3, 0xea, 0x86,
	0x56, 0x21, 0xdb, 0x7d, 0xae, 0xf7, 0x0c, 0x6d, 0x69, 0x61, 0xc6, 0x4d, 0x73, 0x67, 0x51, 0xc6,
	0x1d, 0x29, 0x21, 0xab, 0x9e, 0xc6, 0xc3, 0xb3, 0xf2, 0x5f, 0xb3, 0xb0, 0x56, 0x0b, 0xbc, 0x71,
	0xe0, 0x13, 0x3f, 0xfc, 0x5f, 0x56, 0xa6, 0x8b, 0xd0, 0x5f, 0xfa, 0xb0, 0xd0, 0x7f, 0x04, 0x99,
	0xe1, 0x90, 0x15, 0xb3, 0xd7, 0xa3, 0x39, 0x06, 0xe9, 0xc9, 0x47, 0xe7, 0xb3, 0x44, 0xfc, 0xcc,
	0xde, 0x26, 0x31, 0x99, 0xad, 0x7e, 0xe8, 0x0b, 0x58, 0x1e, 0x52, 0x62, 0x87, 0x01, 0x2d, 0x2e,
	0x8b, 0x54, 0x29, 0xbd, 0xd5, 0x33, 0x57, 0x6d, 0x1a, 0x43, 0xd1, 0x2f, 0x61, 0xc5, 0x0b, 0x46,
	0xce, 0x91, 0x43, 0xa8, 0xca, 0xb0, 0xeb, 0xd4, 0xa6, 0x58, 0xf4, 0x5b, 0xc8, 0x0b, 0x13, 0xc4,
	0xe2, 0x1d, 0x94, 0x4a, 0xa9, 0x52, 0x45, 0xb6, 0x40, 0x95, 0xb8, 0xbd, 0xaa, 0x98, 0x71, 0x7b,
	0xc5, 0xeb, 0x4e, 0x06, 0x83, 0xd4, 0xe1, 0xab, 0xdc, 0x82, 0xb0, 0x36, 0x91, 0x16, 0xe0, 0x03,
	0x2d, 0x48, 0x1d, 0x61, 0x61, 0x13, 0x72, 0xa2, 0xd0, 0xb2, 0x62, 0x9e, 0x53, 0x8c, 0xd5, 0xac,
	0x6c, 0xc2, 0xc6, 0x25, 0x96, 0xd0, 0x03, 0xb8, 0x5f, 0xeb, 0xb4, 0xba, 0x9d, 0xb6, 0xd1, 0x36,
	0x7f, 0xd0, 0x7b, 0xd0, 0x3d, 0xd7, 0x5b, 0x50, 0x4a, 0x92, 0x92, 0x88, 0xb3, 0xea, 0x82, 0x08,
	0x1d, 0xce, 0x00, 0x58, 0xf5, 0x74, 0x76, 0x7a, 0x56, 0xfe, 0x7b, 0x1a, 0xf2, 0x33, 0x85, 0xeb,
	0xff, 0xf8, 0x3c, 0x6c, 0x42, 0x8e, 0x45, 0xf4, 0x84, 0x4c, 0x54, 0x17, 0xa7, 0x66, 0xe8, 0x17,
	0xb0, 0x2a, 0x8b, 0x25, 0xa1, 0xef, 0x8d, 0xd3, 0x0b, 0xe4, 0xf7, 0x7e, 0x04, 0xf6, 0x5a, 0xe7,
	0xfa, 0x8b, 0x6b, 0x4a, 0x36, 0x7a, 0xbc, 0x80, 0x3a, 0xfb, 0x42, 0xce, 0xaa, 0xa7, 0x33, 0xb3,
	0x33, 0xde, 0xfd, 0x6e, 0xa8, 0x36, 0xb3, 0x67, 0x9f, 0x90, 0xd1, 0xcb, 0x88, 0xd0, 0xc9, 0x42,
	0xfa, 0x3e, 0x5e, 0x44, 0x5f, 0x92, 0xb9, 0x5b, 0x90, 0xfd, 0x96, 0xeb, 0x2b, 0xd6, 0xe4, 0x64,
	0x0f, 0x9f, 0xeb, 0x1d, 0xb8, 0xbf, 0xb0, 0xb3, 0x9d, 0xd9, 0xf2, 0xf3, 0x45, 0xcd, 0x52, 0x2c,
	0x76, 0x08, 0x6f, 0x97, 0xa6, 0xe0, 0xb3, 0xf2, 0x3f, 0xb3, 0xb0, 0x2e, 0x5f, 0x52, 0xe2, 0x8d,
	0x5d, 0x1e, 0x94, 0xff, 0x8d, 0xc7, 0x77, 0x20, 0x2b, 0x9e, 0x6c, 0x71, 0xee, 0xfc, 0x2e, 0x4a,
	0x94, 0x0c, 0xb1, 0x0d, 0x96, 0x00, 0x54, 0x9b, 0x79, 0x4c, 0x45, 0xa1, 0xe3, 0x4f, 0x60, 0x46,
	0x64, 0xdb, 0xac, 0x4e, 0xec, 0x90, 0x43, 0x0e, 0xb9, 0x78, 0x45, 0xc5, 0x94, 0xa1, 0x27, 0xb0,
	0xa9, 0x3e, 0x0d, 0x2c, 0x2f, 0x62, 0xa1, 0x35, 0x20, 0x16, 0x19, 0x39, 0x21, 0x19, 0x89, 0x90,
	0x5a, 0xc1, 0x37, 0x95, 0xb4, 0x15, 0xb1, 0x70, 0x9f, 0x18, 0x42, 0x84, 0xfa, 0xa0, 0x85, 0xea,
	0xae, 0xd6, 0x98, 0x3a, 0x27, 0xf6, 0x70, 0x22, 0x9a, 0x8b, 0xc2, 0xee, 0x4f, 0x2f, 0x1f, 0x37,
	0x66, 0xa5, 0x12, 0x0f, 0xba, 0x52, 0x03, 0xdf, 0x08, 0x93, 0x0b, 0xa8, 0x09, 0xeb, 0x23, 0x72,
	0x64, 0x47, 0x6e, 0x68, 0x05, 0xdf, 0xf9, 0x84, 0xaa, 0xaa, 0xf9, 0xe9, 0x35, 0x36, 0xeb, 0x12,
	0xdf, 0xe1, 0x70, 0xbc, 0x36, 0x9a, 0x99, 0xa1, 0xc7, 0x80, 0xa6, 0x79, 0x69, 0x51, 0xf2, 0x6d,
	0xe4, 0x50, 0x32, 0x12, 0x35, 0x74, 0x05, 0x6f, 0x4c, 0x25, 0x58, 0x09, 0x66, 0x82, 0x7f, 0xe5,
	0x83, 0x82, 0xbf, 0xfc, 0x12, 0x6e, 0xcc, 0xdd, 0x88, 0x37, 0xf0, 0xa6, 0xd1, 0xea, 0x36, 0x79,
	0x05, 0xea, 0xe2, 0xc6, 0xa1, 0x5e, 0x7b, 0x35, 0x57, 0x89, 0x34, 0x58, 0x6b, 0x19, 0xad, 0x7d,
	0x03, 0xf7, 0xac, 0x4e, 0xbb, 0xf9, 0x4a, 0xd6, 0xa2, 0x6e, 0x7f, 0xbf, 0xd9, 0xa8, 0x69, 0xe9,
	0xf2, 0x0b, 0x58, 0x9b, 0xbd, 0x10, 0xfa, 0x08, 0xee, 0xc4, 0x2f, 0x6d, 0xe7, 0xab, 0xb6, 0x81,
	0xe7, 0x8c, 0xdd, 0x85, 0xad, 0x2e, 0xee, 0xbc, 0x30, 0x6a, 0xa6, 0x25, 0x8d, 0x5a, 0xd8, 0xe8,
	0x76, 0xb0, 0x69, 0x60, 0x2d, 0xb5, 0xd7, 0x38, 0xd7, 0x0f, 0xe6, 0x5f, 0xdd, 0x69, 0x80, 0x2e,
	0x0a, 0xf0, 0xd8, 0x1b, 0xac, 0x7a, 0x3a, 0x75, 0x2e, 0x8f, 0xd4, 0xb3, 0xf2, 0x9f, 0x72, 0xb0,
	0xae, 0x92, 0xa4, 0x16, 0xf8, 0x47, 0xce, 0xf1, 0xc2, 0x00, 0x7f, 0x0a, 0x45, 0xf2, 0x66, 0xe8,
	0x46, 0xcc, 0x39, 0x21, 0x96, 0x28, 0xd9, 0xd6, 0x98, 0x92, 0x23, 0xe7, 0x0d, 0x61, 0xc5, 0xb4,
	0x28, 0xe4, 0x9b, 0x53, 0xb9, 0x68, 0xb8, 0xbb, 0x4a, 0x8a, 0x7e, 0x06, 0xb7, 0x3c, 0xe2, 0x0d,
	0x08, 0xb5, 0x62, 0xf7, 0xcf, 0x66, 0x2e, 0x92, 0x32, 0x45, 0x8c, 0x4c, 0x50, 0x9e, 0xff, 0x0a,
	0xca, 0x02, 0x1a, 0xaa, 0xf2, 0x97, 0x57, 0x6b, 0xbd, 0x80, 0x86, 0xe8, 0x00, 0x6e, 0xc4, 0x90,
	0x61, 0xe0, 0x46, 0x9e, 0x2f, 0x2b, 0x61, 0x7e, 0xf7, 0xa3, 0xcb, 0xe1, 0xc4, 0x9a, 0x0e, 0x0b,
	0x6b, 0x02, 0x85, 0x0b, 0x4a, 0x4b, 0x4e, 0x19, 0x7a, 0x05, 0x37, 0xe3, 0x3f, 0x20, 0x8e, 0xa9,
	0x33, 0xb2, 0x86, 0x82, 0x01, 0x11, 0x9a, 0xf9, 0xdd, 0x47, 0x09, 0x5b, 0x09, 0x8e, 0x2a, 0xcf,
	0xa8, 0x33, 0x3a, 0x74, 0xc8, 0x77, 0x72, 0x8a, 0x37, 0x94, 0x15, 0xbe, 0xac, 0x58, 0xec, 0xc1,
	0xd6, 0xdc, 0xbd, 0x63, 0xe2, 0xd5, 0x53, 0x7f, 0xf7, 0x9d, 0x5e, 0xbc, 0xca, 0x87, 0xf8, 0x76,
	0x82, 0x97, 0xa9, 0x6b, 0xbf, 0x81, 0x7b, 0x7e, 0xe0, 0x5b, 0x52, 0xc8, 0x2e, 0x5b, 0x5e, 0x79,
	0xbf, 0xe5, 0x3b, 0x7e, 0xe0, 0xb7, 0xa4, 0xfe, 0xbc, 0xf5, 0x0a, 0xdc, 0xa4, 0xe4, 0xc4, 0x11,
	0x7f, 0x5d, 0x44, 0xd4, 0xb5, 0x8e, 0x02, 0xea, 0xd9, 0xa1, 0xe8, 0x13, 0x56, 0xf1, 0x46, 0x2c,
	0xea, 0x53, 0xf7, 0x40, 0x08, 0x78, 0x79, 0x19, 0x46, 0x2c, 0x0c, 0x3c, 0xf5, 0x1d, 0x42, 0xfc,
	0x90, 0x4e, 0xc4, 0xff, 0x0e, 0x20, 0x3f, 0x46, 0xa4, 0x54, 0x78, 0xc1, 0xe0, 0xb2, 0x3e, 0x75,
	0x4b, 0xdf, 0x40, 0x21, 0x49, 0x1e, 0xfa, 0x04, 0x62, 0xb7, 0x58, 0x6f, 0x2c, 0x3b, 0x0c, 0xa9,
	0x8a, 0xbc, 0x38, 0x0a, 0xbe, 0xd6, 0xc3, 0x90, 0xce, 0xa2, 0x26, 0x12, 0x95, 0x4e, 0xa0, 0x5e,
	0x71, 0xd4, 0xde, 0x97, 0xe7, 0xfa, 0x53, 0xb8, 0xbb, 0xf0, 0x09, 0x50, 0xbb, 0xdd, 0x59, 0xf8,
	0xe2, 0x73, 0x51, 0xf9, 0xdf, 0x99, 0x69, 0x2a, 0x48, 0x86, 0x16, 0xa6, 0xc2, 0x1e, 0x2c, 0xd1,
	0xc0, 0x95, 0x35, 0xbe, 0x30, 0xf7, 0x45, 0x92, 0xd0, 0x8e, 0x67, 0x38, 0x70, 0x09, 0x16, 0x3a,
	0xe8, 0x37, 0x50, 0x60, 0xa1, 0xed, 0x8f, 0x6c, 0x3a, 0xb2, 0xc6, 0x84, 0x7a, 0xac, 0x98, 0x11,
	0x1f, 0x58, 0x5b, 0x49, 0x2b, 0xd3, 0x7f, 0x90, 0xf0, 0x7a, 0x0c, 0xe7, 0x6b, 0x8c, 0xa7, 0x86,
	0x62, 0x5c, 0x6a, 0x8b, 0xa6, 0x16, 0xe7, 0xe5, 0x9a, 0x84, 0xdc, 0x82, 0xac, 0x1f, 0x84, 0x84,
	0xa9, 0x0f, 0x42, 0x39, 0x41, 0x0e, 0x6c, 0x39, 0xfe, 0xd0, 0x8d, 0x46, 0xc4, 0x72, 0x7c, 0xcb,
	0x8e, 0xc2, 0x80, 0x17, 0x49, 0x97, 0x4c, 0xbb, 0xd7, 0x9f, 0x5f, 0x73, 0x0f, 0x7d, 0x06, 0x7e,
	0xe8, 0x30, 0x67, 0xe0, 0xb8, 0x4e, 0x38, 0xc1, 0xb7, 0x95, 0xc5, 0x86, 0x3f, 0x0b, 0x28, 0x1f,
	0x42, 0x7e, 0xe6, 0xe2, 0xe8, 0x1e, 0x14, 0xe3, 0x3a, 0x86, 0x3b, 0xcd, 0xf9, 0xe6, 0x6d, 0x15,
	0xb2, 0xa2, 0xf8, 0x69, 0x29, 0xb4, 0x0e, 0xab, 0xb5, 0x4e, 0xab, 0xd5, 0x30, 0x79, 0x89, 0x13,
	0x1f, 0x1d, 0xb5, 0x4e, 0xdb, 0xc4, 0x8d, 0xfd, 0xbe, 0xd9, 0xc1, 0x5a, 0xa6, 0xfc, 0x35, 0x6c,
	0x2e, 0x3e, 0x08, 0xfa, 0x14, 0x1e, 0xe8, 0x7d, 0xb3, 0xc3, 0x5b, 0xc5, 0xa6, 0x61, 0x1a, 0xd6,
	0x61, 0xa3, 0xd7, 0xd8, 0x6f, 0x34, 0x1b, 0xe6, 0x7c, 0x81, 0x06, 0xc8, 0xa9, 0x8f, 0x9a, 0x14,
	0xdf, 0xb9, 0xf7, 0xbc, 0xf3, 0x55, 0x5b, 0x4b, 0x0f, 0x72, 0xa2, 0x71, 0x7d, 0xf2, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x66, 0x8c, 0x0e, 0x88, 0x9e, 0x14, 0x00, 0x00,
}
