// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: infra/appengine/cr-audit-commits/app/proto/config.proto

package configpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefConfigs map[string]*RefConfig `protobuf:"bytes,1,rep,name=ref_configs,json=refConfigs,proto3" json:"ref_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetRefConfigs() map[string]*RefConfig {
	if x != nil {
		return x.RefConfigs
	}
	return nil
}

type RefConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GerritHost      string `protobuf:"bytes,1,opt,name=gerrit_host,json=gerritHost,proto3" json:"gerrit_host,omitempty"`
	GerritRepo      string `protobuf:"bytes,2,opt,name=gerrit_repo,json=gerritRepo,proto3" json:"gerrit_repo,omitempty"`
	Ref             string `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	StartingCommit  string `protobuf:"bytes,4,opt,name=starting_commit,json=startingCommit,proto3" json:"starting_commit,omitempty"`
	MonorailProject string `protobuf:"bytes,5,opt,name=monorail_project,json=monorailProject,proto3" json:"monorail_project,omitempty"`
	NotifierEmail   string `protobuf:"bytes,6,opt,name=notifier_email,json=notifierEmail,proto3" json:"notifier_email,omitempty"`
	// Used for unpausing a ref. Oncall should modify this configuration
	// to help resume the scanning.
	OverwriteLastKnownCommit string                   `protobuf:"bytes,7,opt,name=overwrite_last_known_commit,json=overwriteLastKnownCommit,proto3" json:"overwrite_last_known_commit,omitempty"`
	Rules                    map[string]*AccountRules `protobuf:"bytes,8,rep,name=rules,proto3" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // TODO: DynamicRefFunction
}

func (x *RefConfig) Reset() {
	*x = RefConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefConfig) ProtoMessage() {}

func (x *RefConfig) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefConfig.ProtoReflect.Descriptor instead.
func (*RefConfig) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{1}
}

func (x *RefConfig) GetGerritHost() string {
	if x != nil {
		return x.GerritHost
	}
	return ""
}

func (x *RefConfig) GetGerritRepo() string {
	if x != nil {
		return x.GerritRepo
	}
	return ""
}

func (x *RefConfig) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *RefConfig) GetStartingCommit() string {
	if x != nil {
		return x.StartingCommit
	}
	return ""
}

func (x *RefConfig) GetMonorailProject() string {
	if x != nil {
		return x.MonorailProject
	}
	return ""
}

func (x *RefConfig) GetNotifierEmail() string {
	if x != nil {
		return x.NotifierEmail
	}
	return ""
}

func (x *RefConfig) GetOverwriteLastKnownCommit() string {
	if x != nil {
		return x.OverwriteLastKnownCommit
	}
	return ""
}

func (x *RefConfig) GetRules() map[string]*AccountRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type AccountRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account       string          `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Rules         []*Rule         `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	Notifications []*Notification `protobuf:"bytes,3,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *AccountRules) Reset() {
	*x = AccountRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRules) ProtoMessage() {}

func (x *AccountRules) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRules.ProtoReflect.Descriptor instead.
func (*AccountRules) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{2}
}

func (x *AccountRules) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountRules) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *AccountRules) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Rule:
	//	*Rule_ChangeReviewed
	Rule isRule_Rule `protobuf_oneof:"rule"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{3}
}

func (m *Rule) GetRule() isRule_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (x *Rule) GetChangeReviewed() *ChangeReviewed {
	if x, ok := x.GetRule().(*Rule_ChangeReviewed); ok {
		return x.ChangeReviewed
	}
	return nil
}

type isRule_Rule interface {
	isRule_Rule()
}

type Rule_ChangeReviewed struct {
	ChangeReviewed *ChangeReviewed `protobuf:"bytes,4,opt,name=changeReviewed,proto3,oneof"`
}

func (*Rule_ChangeReviewed) isRule_Rule() {}

type ChangeReviewed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robots []string `protobuf:"bytes,1,rep,name=robots,proto3" json:"robots,omitempty"`
}

func (x *ChangeReviewed) Reset() {
	*x = ChangeReviewed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeReviewed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeReviewed) ProtoMessage() {}

func (x *ChangeReviewed) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeReviewed.ProtoReflect.Descriptor instead.
func (*ChangeReviewed) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeReviewed) GetRobots() []string {
	if x != nil {
		return x.Robots
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Notification:
	//	*Notification_CommentOnBugToAcknowledgeMerge
	//	*Notification_CommentOrFileMonorailIssue
	//	*Notification_FileBugForMergeApprovalViolation
	Notification isNotification_Notification `protobuf_oneof:"notification"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{5}
}

func (m *Notification) GetNotification() isNotification_Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (x *Notification) GetCommentOnBugToAcknowledgeMerge() *CommentOnBugToAcknowledgeMerge {
	if x, ok := x.GetNotification().(*Notification_CommentOnBugToAcknowledgeMerge); ok {
		return x.CommentOnBugToAcknowledgeMerge
	}
	return nil
}

func (x *Notification) GetCommentOrFileMonorailIssue() *CommentOrFileMonorailIssue {
	if x, ok := x.GetNotification().(*Notification_CommentOrFileMonorailIssue); ok {
		return x.CommentOrFileMonorailIssue
	}
	return nil
}

func (x *Notification) GetFileBugForMergeApprovalViolation() *FileBugForMergeApprovalViolation {
	if x, ok := x.GetNotification().(*Notification_FileBugForMergeApprovalViolation); ok {
		return x.FileBugForMergeApprovalViolation
	}
	return nil
}

type isNotification_Notification interface {
	isNotification_Notification()
}

type Notification_CommentOnBugToAcknowledgeMerge struct {
	CommentOnBugToAcknowledgeMerge *CommentOnBugToAcknowledgeMerge `protobuf:"bytes,1,opt,name=commentOnBugToAcknowledgeMerge,proto3,oneof"`
}

type Notification_CommentOrFileMonorailIssue struct {
	CommentOrFileMonorailIssue *CommentOrFileMonorailIssue `protobuf:"bytes,2,opt,name=commentOrFileMonorailIssue,proto3,oneof"`
}

type Notification_FileBugForMergeApprovalViolation struct {
	FileBugForMergeApprovalViolation *FileBugForMergeApprovalViolation `protobuf:"bytes,3,opt,name=fileBugForMergeApprovalViolation,proto3,oneof"`
}

func (*Notification_CommentOnBugToAcknowledgeMerge) isNotification_Notification() {}

func (*Notification_CommentOrFileMonorailIssue) isNotification_Notification() {}

func (*Notification_FileBugForMergeApprovalViolation) isNotification_Notification() {}

type CommentOnBugToAcknowledgeMerge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommentOnBugToAcknowledgeMerge) Reset() {
	*x = CommentOnBugToAcknowledgeMerge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOnBugToAcknowledgeMerge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOnBugToAcknowledgeMerge) ProtoMessage() {}

func (x *CommentOnBugToAcknowledgeMerge) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOnBugToAcknowledgeMerge.ProtoReflect.Descriptor instead.
func (*CommentOnBugToAcknowledgeMerge) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{6}
}

type CommentOrFileMonorailIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []string `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	Labels     []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *CommentOrFileMonorailIssue) Reset() {
	*x = CommentOrFileMonorailIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOrFileMonorailIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOrFileMonorailIssue) ProtoMessage() {}

func (x *CommentOrFileMonorailIssue) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOrFileMonorailIssue.ProtoReflect.Descriptor instead.
func (*CommentOrFileMonorailIssue) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{7}
}

func (x *CommentOrFileMonorailIssue) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CommentOrFileMonorailIssue) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type FileBugForMergeApprovalViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []string `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	Labels     []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *FileBugForMergeApprovalViolation) Reset() {
	*x = FileBugForMergeApprovalViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBugForMergeApprovalViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBugForMergeApprovalViolation) ProtoMessage() {}

func (x *FileBugForMergeApprovalViolation) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBugForMergeApprovalViolation.ProtoReflect.Descriptor instead.
func (*FileBugForMergeApprovalViolation) Descriptor() ([]byte, []int) {
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP(), []int{8}
}

func (x *FileBugForMergeApprovalViolation) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *FileBugForMergeApprovalViolation) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_infra_appengine_cr_audit_commits_app_proto_config_proto protoreflect.FileDescriptor

var file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDesc = []byte{
	0x0a, 0x37, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x63, 0x72, 0x2d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x63, 0x72, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x70, 0x62, 0x22, 0xc1, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x52, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x1a, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x03, 0x0a, 0x09, 0x52, 0x65, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x72, 0x72, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65,
	0x72, 0x72, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3d, 0x0a, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6f, 0x76, 0x65, 0x72,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x61, 0x0a, 0x0a, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x72, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae,
	0x01, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x4d, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x63, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x22, 0xa9,
	0x03, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x83, 0x01, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x75, 0x67,
	0x54, 0x6f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x72, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x75,
	0x67, 0x54, 0x6f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x42, 0x75, 0x67, 0x54, 0x6f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x77, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x72, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x75, 0x67, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x72, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x75, 0x67, 0x46, 0x6f, 0x72,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x56, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x75,
	0x67, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x75, 0x67, 0x54, 0x6f, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x1a,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x5a, 0x0a, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x75, 0x67, 0x46, 0x6f, 0x72,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x56, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42, 0x35,
	0x5a, 0x33, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x63, 0x72, 0x2d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescOnce sync.Once
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescData = file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDesc
)

func file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescGZIP() []byte {
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescOnce.Do(func() {
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescData)
	})
	return file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDescData
}

var file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_infra_appengine_cr_audit_commits_app_proto_config_proto_goTypes = []interface{}{
	(*Config)(nil),                           // 0: cr_audit_commits.configpb.Config
	(*RefConfig)(nil),                        // 1: cr_audit_commits.configpb.RefConfig
	(*AccountRules)(nil),                     // 2: cr_audit_commits.configpb.AccountRules
	(*Rule)(nil),                             // 3: cr_audit_commits.configpb.Rule
	(*ChangeReviewed)(nil),                   // 4: cr_audit_commits.configpb.ChangeReviewed
	(*Notification)(nil),                     // 5: cr_audit_commits.configpb.Notification
	(*CommentOnBugToAcknowledgeMerge)(nil),   // 6: cr_audit_commits.configpb.CommentOnBugToAcknowledgeMerge
	(*CommentOrFileMonorailIssue)(nil),       // 7: cr_audit_commits.configpb.CommentOrFileMonorailIssue
	(*FileBugForMergeApprovalViolation)(nil), // 8: cr_audit_commits.configpb.FileBugForMergeApprovalViolation
	nil,                                      // 9: cr_audit_commits.configpb.Config.RefConfigsEntry
	nil,                                      // 10: cr_audit_commits.configpb.RefConfig.RulesEntry
}
var file_infra_appengine_cr_audit_commits_app_proto_config_proto_depIdxs = []int32{
	9,  // 0: cr_audit_commits.configpb.Config.ref_configs:type_name -> cr_audit_commits.configpb.Config.RefConfigsEntry
	10, // 1: cr_audit_commits.configpb.RefConfig.rules:type_name -> cr_audit_commits.configpb.RefConfig.RulesEntry
	3,  // 2: cr_audit_commits.configpb.AccountRules.rules:type_name -> cr_audit_commits.configpb.Rule
	5,  // 3: cr_audit_commits.configpb.AccountRules.notifications:type_name -> cr_audit_commits.configpb.Notification
	4,  // 4: cr_audit_commits.configpb.Rule.changeReviewed:type_name -> cr_audit_commits.configpb.ChangeReviewed
	6,  // 5: cr_audit_commits.configpb.Notification.commentOnBugToAcknowledgeMerge:type_name -> cr_audit_commits.configpb.CommentOnBugToAcknowledgeMerge
	7,  // 6: cr_audit_commits.configpb.Notification.commentOrFileMonorailIssue:type_name -> cr_audit_commits.configpb.CommentOrFileMonorailIssue
	8,  // 7: cr_audit_commits.configpb.Notification.fileBugForMergeApprovalViolation:type_name -> cr_audit_commits.configpb.FileBugForMergeApprovalViolation
	1,  // 8: cr_audit_commits.configpb.Config.RefConfigsEntry.value:type_name -> cr_audit_commits.configpb.RefConfig
	2,  // 9: cr_audit_commits.configpb.RefConfig.RulesEntry.value:type_name -> cr_audit_commits.configpb.AccountRules
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_infra_appengine_cr_audit_commits_app_proto_config_proto_init() }
func file_infra_appengine_cr_audit_commits_app_proto_config_proto_init() {
	if File_infra_appengine_cr_audit_commits_app_proto_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeReviewed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOnBugToAcknowledgeMerge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOrFileMonorailIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBugForMergeApprovalViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Rule_ChangeReviewed)(nil),
	}
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Notification_CommentOnBugToAcknowledgeMerge)(nil),
		(*Notification_CommentOrFileMonorailIssue)(nil),
		(*Notification_FileBugForMergeApprovalViolation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_appengine_cr_audit_commits_app_proto_config_proto_goTypes,
		DependencyIndexes: file_infra_appengine_cr_audit_commits_app_proto_config_proto_depIdxs,
		MessageInfos:      file_infra_appengine_cr_audit_commits_app_proto_config_proto_msgTypes,
	}.Build()
	File_infra_appengine_cr_audit_commits_app_proto_config_proto = out.File
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_rawDesc = nil
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_goTypes = nil
	file_infra_appengine_cr_audit_commits_app_proto_config_proto_depIdxs = nil
}
