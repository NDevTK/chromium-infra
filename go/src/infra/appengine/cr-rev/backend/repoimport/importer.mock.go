// Code generated by MockGen. DO NOT EDIT.
// Source: importer.go

// Package repoimport is a generated GoMock package.
package repoimport

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockimporter is a mock of importer interface.
type Mockimporter struct {
	ctrl     *gomock.Controller
	recorder *MockimporterMockRecorder
}

// MockimporterMockRecorder is the mock recorder for Mockimporter.
type MockimporterMockRecorder struct {
	mock *Mockimporter
}

// NewMockimporter creates a new mock instance.
func NewMockimporter(ctrl *gomock.Controller) *Mockimporter {
	mock := &Mockimporter{ctrl: ctrl}
	mock.recorder = &MockimporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockimporter) EXPECT() *MockimporterMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *Mockimporter) Run(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockimporterMockRecorder) Run(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*Mockimporter)(nil).Run), arg0)
}
