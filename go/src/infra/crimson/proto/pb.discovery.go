// AUTOGENERATED. DO NOT EDIT.

package crimson

import discovery "github.com/luci/luci-go/server/discovery"

import "github.com/luci/luci-go/common/proto/google/descriptor"

func init() {
	discovery.RegisterDescriptorSetCompressed(
		[]string{
			"crimson.Crimson",
		},
		[]byte{31, 139,
			8, 0, 0, 9, 110, 136, 0, 255, 140, 148, 205, 110, 235, 68,
			20, 128, 61, 63, 113, 156, 147, 166, 109, 198, 73, 73, 170, 36,
			119, 20, 9, 81, 33, 17, 65, 184, 170, 64, 172, 46, 161, 139,
			34, 132, 160, 133, 53, 114, 147, 105, 99, 41, 181, 163, 177, 83,
			169, 75, 158, 132, 61, 207, 195, 171, 176, 231, 156, 241, 76, 22,
			101, 115, 119, 254, 206, 207, 55, 103, 206, 40, 129, 127, 1, 122,
			107, 155, 63, 87, 101, 177, 216, 219, 178, 46, 85, 219, 227, 252,
			61, 36, 183, 191, 220, 101, 197, 147, 169, 212, 21, 196, 214, 125,
			141, 152, 22, 87, 221, 229, 249, 34, 52, 249, 146, 59, 159, 159,
			175, 161, 237, 67, 74, 129, 172, 242, 218, 96, 11, 187, 234, 220,
			185, 111, 138, 189, 236, 178, 98, 196, 155, 24, 125, 171, 49, 36,
			85, 157, 217, 250, 143, 124, 63, 18, 46, 222, 118, 124, 187, 87,
			67, 136, 77, 177, 161, 132, 116, 137, 22, 210, 237, 126, 254, 41,
			244, 252, 33, 247, 117, 86, 31, 42, 53, 128, 150, 177, 182, 180,
			254, 172, 6, 230, 215, 112, 226, 203, 126, 61, 24, 251, 250, 177,
			3, 45, 255, 100, 208, 94, 53, 247, 83, 223, 65, 111, 101, 77,
			86, 155, 112, 171, 255, 93, 253, 242, 226, 109, 164, 25, 106, 30,
			169, 111, 161, 123, 103, 178, 77, 104, 29, 190, 45, 116, 99, 93,
			246, 223, 134, 177, 245, 199, 127, 218, 16, 43, 41, 163, 119, 12,
			254, 102, 192, 78, 148, 144, 145, 90, 254, 197, 244, 170, 220, 191,
			218, 252, 105, 91, 235, 229, 151, 95, 93, 235, 223, 182, 70, 175,
			182, 182, 124, 206, 15, 207, 250, 195, 161, 222, 150, 182, 90, 232,
			15, 187, 157, 118, 69, 149, 182, 166, 50, 246, 197, 108, 22, 160,
			127, 175, 140, 46, 31, 117, 189, 205, 43, 93, 149, 7, 187, 54,
			122, 93, 110, 140, 70, 124, 42, 95, 140, 45, 204, 70, 63, 188,
			234, 76, 127, 127, 255, 195, 23, 85, 253, 186, 51, 122, 151, 175,
			77, 129, 109, 245, 54, 171, 245, 58, 43, 244, 131, 1, 253, 88,
			30, 138, 141, 206, 11, 140, 26, 253, 211, 237, 234, 230, 231, 251,
			27, 253, 152, 239, 204, 2, 32, 1, 198, 149, 136, 147, 51, 0,
			224, 113, 164, 100, 18, 117, 25, 126, 139, 56, 98, 74, 36, 24,
			239, 130, 140, 35, 30, 41, 209, 225, 223, 192, 9, 180, 8, 48,
			213, 137, 211, 64, 40, 232, 12, 39, 129, 4, 210, 103, 239, 125,
			27, 22, 2, 191, 246, 41, 70, 20, 247, 3, 97, 27, 164, 239,
			2, 97, 27, 124, 190, 164, 41, 112, 113, 178, 23, 157, 185, 41,
			36, 29, 213, 75, 206, 73, 39, 221, 20, 167, 124, 70, 45, 4,
			146, 8, 2, 197, 72, 93, 21, 8, 219, 78, 211, 113, 32, 148,
			159, 78, 166, 78, 206, 148, 236, 71, 23, 141, 156, 6, 234, 55,
			87, 148, 140, 228, 138, 43, 232, 97, 11, 35, 185, 84, 188, 239,
			134, 37, 108, 81, 50, 9, 132, 125, 170, 211, 11, 132, 118, 117,
			222, 247, 22, 76, 165, 71, 11, 67, 11, 146, 242, 149, 172, 69,
			201, 96, 161, 211, 211, 163, 133, 22, 144, 30, 45, 184, 155, 1,
			191, 240, 22, 142, 150, 1, 79, 131, 133, 183, 40, 25, 44, 116,
			224, 160, 19, 230, 228, 104, 25, 12, 134, 222, 130, 48, 228, 3,
			111, 17, 104, 65, 186, 240, 149, 162, 69, 201, 96, 17, 104, 25,
			118, 206, 2, 81, 163, 74, 221, 190, 184, 146, 163, 232, 178, 217,
			23, 157, 53, 74, 26, 59, 167, 125, 141, 121, 234, 236, 220, 237,
			107, 204, 71, 159, 56, 3, 119, 251, 26, 123, 59, 119, 251, 26,
			119, 78, 3, 161, 125, 220, 87, 206, 46, 148, 156, 208, 111, 134,
			236, 52, 195, 36, 25, 56, 187, 32, 251, 212, 239, 81, 56, 251,
			148, 79, 154, 217, 133, 179, 79, 189, 93, 56, 251, 212, 239, 81,
			56, 251, 212, 239, 81, 208, 192, 179, 163, 133, 94, 99, 198, 167,
			202, 87, 210, 107, 204, 142, 22, 122, 141, 217, 209, 66, 175, 49,
			59, 239, 63, 196, 238, 79, 246, 235, 255, 2, 0, 0, 255, 255,
			148, 80, 62, 67, 120, 5, 0, 0},
	)
}

// FileDescriptorSet returns a descriptor set for this proto package, which
// includes all defined services, and all transitive dependencies.
//
// Will not return nil.
//
// Do NOT modify the returned descriptor.
func FileDescriptorSet() *descriptor.FileDescriptorSet {
	// We just need ONE of the service names to look up the FileDescriptorSet.
	ret, err := discovery.GetDescriptorSet("crimson.Crimson")
	if err != nil {
		panic(err)
	}
	return ret
}
