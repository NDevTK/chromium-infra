// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/types/types.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import account "infra/qscheduler/qslib/types/account"
import task "infra/qscheduler/qslib/types/task"
import vector "infra/qscheduler/qslib/types/vector"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Worker represents a resource that can run 1 task at a time. This corresponds
// to the swarming concept of a Bot. This representation considers only the
// subset of Labels that are Provisionable (can be changed by running a task),
// because the quota scheduler algorithm is expected to run against a pool of
// otherwise homogenous workers.
type Worker struct {
	// Labels represents the set of provisionable labels that this worker
	// possesses.
	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// RunningTask is, if non-nil, the task that is currently running on the
	// worker.
	RunningTask          *task.Run `protobuf:"bytes,2,opt,name=running_task,json=runningTask,proto3" json:"running_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Worker) Reset()         { *m = Worker{} }
func (m *Worker) String() string { return proto.CompactTextString(m) }
func (*Worker) ProtoMessage()    {}
func (*Worker) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_2a5dbe733dc33daf, []int{0}
}
func (m *Worker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Worker.Unmarshal(m, b)
}
func (m *Worker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Worker.Marshal(b, m, deterministic)
}
func (dst *Worker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker.Merge(dst, src)
}
func (m *Worker) XXX_Size() int {
	return xxx_messageInfo_Worker.Size(m)
}
func (m *Worker) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker.DiscardUnknown(m)
}

var xxx_messageInfo_Worker proto.InternalMessageInfo

func (m *Worker) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Worker) GetRunningTask() *task.Run {
	if m != nil {
		return m.RunningTask
	}
	return nil
}

// State represents the overall state of a quota scheduler worker pool,
// account set, and task queue. This is represented separately from
// configuration information. The state is expected to be updated frequently,
// on each scheduler tick.
type State struct {
	// Requests that are waiting to be assigned to a worker, keyed by
	// request id.
	Requests map[string]*task.Request `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Balance of all quota accounts for this pool, keyed by account id.
	Balances map[string]*vector.Vector `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Workers that may run tasks, and their states, keyed by worker id.
	Workers              map[string]*Worker `protobuf:"bytes,3,rep,name=workers,proto3" json:"workers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_2a5dbe733dc33daf, []int{1}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetRequests() map[string]*task.Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *State) GetBalances() map[string]*vector.Vector {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *State) GetWorkers() map[string]*Worker {
	if m != nil {
		return m.Workers
	}
	return nil
}

// Config represents configuration information about the behavior of accounts
// for this quota scheduler pool.
type Config struct {
	// Configuration for a given account, keyed by account id.
	AccountConfigs       map[string]*account.Config `protobuf:"bytes,1,rep,name=account_configs,json=accountConfigs,proto3" json:"account_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_2a5dbe733dc33daf, []int{2}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetAccountConfigs() map[string]*account.Config {
	if m != nil {
		return m.AccountConfigs
	}
	return nil
}

func init() {
	proto.RegisterType((*Worker)(nil), "types.Worker")
	proto.RegisterType((*State)(nil), "types.State")
	proto.RegisterMapType((map[string]*vector.Vector)(nil), "types.State.BalancesEntry")
	proto.RegisterMapType((map[string]*task.Request)(nil), "types.State.RequestsEntry")
	proto.RegisterMapType((map[string]*Worker)(nil), "types.State.WorkersEntry")
	proto.RegisterType((*Config)(nil), "types.Config")
	proto.RegisterMapType((map[string]*account.Config)(nil), "types.Config.AccountConfigsEntry")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/types/types.proto", fileDescriptor_types_2a5dbe733dc33daf)
}

var fileDescriptor_types_2a5dbe733dc33daf = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x5f, 0x4b, 0xf3, 0x30,
	0x14, 0xc6, 0xe9, 0xca, 0xfa, 0xbe, 0x3b, 0xfb, 0x27, 0x11, 0xa4, 0xf6, 0x6a, 0x4e, 0x85, 0x5e,
	0x8c, 0x4e, 0x36, 0x10, 0xf1, 0x4e, 0xc5, 0x0b, 0x27, 0x78, 0x11, 0x45, 0x2f, 0x47, 0x5a, 0xb3,
	0x59, 0x5a, 0xd2, 0x2d, 0x49, 0x27, 0xfb, 0x16, 0x7e, 0x0c, 0x3f, 0xa6, 0x2c, 0x49, 0xa5, 0x85,
	0x32, 0xbc, 0xe9, 0xe9, 0xc9, 0x79, 0x7e, 0x87, 0xe7, 0xe4, 0x04, 0xfc, 0x98, 0x2d, 0x38, 0x19,
	0xaf, 0x45, 0xf4, 0x41, 0xdf, 0xf3, 0x94, 0xf2, 0xf1, 0x5a, 0xa4, 0x71, 0x38, 0x96, 0xdb, 0x15,
	0x15, 0xfa, 0x1b, 0xac, 0x78, 0x26, 0x33, 0xd4, 0x54, 0x89, 0x37, 0xda, 0x0f, 0x10, 0x91, 0xa8,
	0x8f, 0x86, 0xbc, 0x8b, 0xbd, 0xea, 0x0d, 0x8d, 0x64, 0xc6, 0x4d, 0x30, 0xc4, 0x64, 0x2f, 0x41,
	0xa2, 0x28, 0xcb, 0x99, 0x2c, 0xa2, 0x66, 0x86, 0x4f, 0xe0, 0xbc, 0x65, 0x3c, 0xa1, 0x1c, 0x1d,
	0x81, 0x93, 0x92, 0x90, 0xa6, 0xc2, 0xb5, 0x06, 0xb6, 0xdf, 0xc2, 0x26, 0x43, 0x23, 0xe8, 0xf0,
	0x9c, 0xb1, 0x98, 0x2d, 0xe7, 0x3b, 0x77, 0x6e, 0x63, 0x60, 0xf9, 0xed, 0x49, 0x2b, 0x50, 0x56,
	0x71, 0xce, 0x70, 0xdb, 0x94, 0x5f, 0x88, 0x48, 0x86, 0x5f, 0x36, 0x34, 0x9f, 0x25, 0x91, 0x14,
	0x5d, 0xc2, 0x7f, 0x4e, 0xd7, 0x39, 0x15, 0x52, 0x77, 0x6c, 0x4f, 0xbc, 0x40, 0x5f, 0x8a, 0xaa,
	0x07, 0xd8, 0x14, 0xef, 0x99, 0xe4, 0x5b, 0xfc, 0xab, 0xdd, 0x71, 0x21, 0x49, 0x09, 0x8b, 0xa8,
	0x70, 0x1b, 0x35, 0xdc, 0xad, 0x29, 0x1a, 0xae, 0xd0, 0xa2, 0x29, 0xfc, 0xfb, 0x54, 0x93, 0x08,
	0xd7, 0x56, 0xd8, 0x71, 0x05, 0xd3, 0x53, 0x1a, 0xaa, 0x50, 0x7a, 0x33, 0xe8, 0x56, 0x7c, 0xa0,
	0x03, 0xb0, 0x13, 0xba, 0x75, 0xad, 0x81, 0xe5, 0xb7, 0xf0, 0xee, 0x17, 0x9d, 0x42, 0x73, 0x43,
	0xd2, 0x9c, 0x9a, 0xc1, 0xbb, 0x66, 0x70, 0x4d, 0x61, 0x5d, 0xbb, 0x6e, 0x5c, 0x59, 0xde, 0x23,
	0x74, 0x2b, 0xde, 0x6a, 0x7a, 0x9d, 0x55, 0x7b, 0xf5, 0x02, 0xb3, 0xbf, 0x57, 0x15, 0xca, 0xcd,
	0x1e, 0xa0, 0x53, 0x76, 0xfc, 0x27, 0x5f, 0x6a, 0x5a, 0x4d, 0x95, 0x5a, 0x0d, 0xbf, 0x2d, 0x70,
	0xee, 0x32, 0xb6, 0x88, 0x97, 0x68, 0x06, 0x7d, 0xb3, 0xfe, 0x79, 0xa4, 0x4e, 0x8a, 0xd5, 0x9c,
	0x18, 0x5a, 0xeb, 0x82, 0x1b, 0x2d, 0xd2, 0x99, 0xb9, 0xb3, 0x1e, 0xa9, 0x1c, 0x7a, 0x18, 0x0e,
	0x6b, 0x64, 0x35, 0x46, 0xcf, 0xab, 0x46, 0xfb, 0x41, 0xf1, 0x02, 0x35, 0x57, 0xb2, 0x1a, 0x3a,
	0xea, 0x51, 0x4e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x02, 0xe5, 0x5e, 0xc5, 0x5b, 0x03, 0x00,
	0x00,
}
