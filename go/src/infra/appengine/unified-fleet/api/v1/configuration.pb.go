// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/unified-fleet/api/v1/configuration.proto

package api

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_go "infra/libs/fleet/protos/go"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImportChromePlatformsRequest struct {
	// Support importing from local file.
	LocalFilepath        string   `protobuf:"bytes,1,opt,name=local_filepath,json=localFilepath,proto3" json:"local_filepath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportChromePlatformsRequest) Reset()         { *m = ImportChromePlatformsRequest{} }
func (m *ImportChromePlatformsRequest) String() string { return proto.CompactTextString(m) }
func (*ImportChromePlatformsRequest) ProtoMessage()    {}
func (*ImportChromePlatformsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_055a57233546cc8a, []int{0}
}

func (m *ImportChromePlatformsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportChromePlatformsRequest.Unmarshal(m, b)
}
func (m *ImportChromePlatformsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportChromePlatformsRequest.Marshal(b, m, deterministic)
}
func (m *ImportChromePlatformsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportChromePlatformsRequest.Merge(m, src)
}
func (m *ImportChromePlatformsRequest) XXX_Size() int {
	return xxx_messageInfo_ImportChromePlatformsRequest.Size(m)
}
func (m *ImportChromePlatformsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportChromePlatformsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportChromePlatformsRequest proto.InternalMessageInfo

func (m *ImportChromePlatformsRequest) GetLocalFilepath() string {
	if m != nil {
		return m.LocalFilepath
	}
	return ""
}

type ImportChromePlatformsResponse struct {
	Passed               []*ChromePlatformResult `protobuf:"bytes,1,rep,name=passed,proto3" json:"passed,omitempty"`
	Failed               []*ChromePlatformResult `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ImportChromePlatformsResponse) Reset()         { *m = ImportChromePlatformsResponse{} }
func (m *ImportChromePlatformsResponse) String() string { return proto.CompactTextString(m) }
func (*ImportChromePlatformsResponse) ProtoMessage()    {}
func (*ImportChromePlatformsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_055a57233546cc8a, []int{1}
}

func (m *ImportChromePlatformsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportChromePlatformsResponse.Unmarshal(m, b)
}
func (m *ImportChromePlatformsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportChromePlatformsResponse.Marshal(b, m, deterministic)
}
func (m *ImportChromePlatformsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportChromePlatformsResponse.Merge(m, src)
}
func (m *ImportChromePlatformsResponse) XXX_Size() int {
	return xxx_messageInfo_ImportChromePlatformsResponse.Size(m)
}
func (m *ImportChromePlatformsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportChromePlatformsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportChromePlatformsResponse proto.InternalMessageInfo

func (m *ImportChromePlatformsResponse) GetPassed() []*ChromePlatformResult {
	if m != nil {
		return m.Passed
	}
	return nil
}

func (m *ImportChromePlatformsResponse) GetFailed() []*ChromePlatformResult {
	if m != nil {
		return m.Failed
	}
	return nil
}

type ChromePlatformResult struct {
	Platform             *_go.ChromePlatform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ErrorMsg             string              `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ChromePlatformResult) Reset()         { *m = ChromePlatformResult{} }
func (m *ChromePlatformResult) String() string { return proto.CompactTextString(m) }
func (*ChromePlatformResult) ProtoMessage()    {}
func (*ChromePlatformResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_055a57233546cc8a, []int{2}
}

func (m *ChromePlatformResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromePlatformResult.Unmarshal(m, b)
}
func (m *ChromePlatformResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromePlatformResult.Marshal(b, m, deterministic)
}
func (m *ChromePlatformResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromePlatformResult.Merge(m, src)
}
func (m *ChromePlatformResult) XXX_Size() int {
	return xxx_messageInfo_ChromePlatformResult.Size(m)
}
func (m *ChromePlatformResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromePlatformResult.DiscardUnknown(m)
}

var xxx_messageInfo_ChromePlatformResult proto.InternalMessageInfo

func (m *ChromePlatformResult) GetPlatform() *_go.ChromePlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *ChromePlatformResult) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*ImportChromePlatformsRequest)(nil), "fleet.ImportChromePlatformsRequest")
	proto.RegisterType((*ImportChromePlatformsResponse)(nil), "fleet.ImportChromePlatformsResponse")
	proto.RegisterType((*ChromePlatformResult)(nil), "fleet.ChromePlatformResult")
}

func init() {
	proto.RegisterFile("infra/appengine/unified-fleet/api/v1/configuration.proto", fileDescriptor_055a57233546cc8a)
}

var fileDescriptor_055a57233546cc8a = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xe9, 0xc6, 0xc6, 0x96, 0xb1, 0xff, 0x43, 0xfe, 0x0e, 0xca, 0xa6, 0x30, 0xaa, 0xc2,
	0x5e, 0x6c, 0x59, 0xf7, 0xe2, 0xb3, 0x43, 0xc1, 0x07, 0x41, 0xfa, 0xe8, 0x4b, 0xc9, 0xda, 0x9b,
	0x2e, 0x90, 0x26, 0x31, 0x37, 0xf5, 0x3b, 0xf8, 0xad, 0xc5, 0xb4, 0x88, 0x42, 0x1d, 0xbe, 0x9e,
	0xf3, 0xbb, 0x37, 0x39, 0xe7, 0x92, 0x5b, 0xa1, 0xb8, 0x65, 0x09, 0x33, 0x06, 0x54, 0x25, 0x14,
	0x24, 0x8d, 0x12, 0x5c, 0x40, 0x79, 0xc3, 0x25, 0x80, 0x4b, 0x98, 0x11, 0xc9, 0xdb, 0x36, 0x29,
	0xb4, 0xe2, 0xa2, 0x6a, 0x2c, 0x73, 0x42, 0xab, 0xd8, 0x58, 0xed, 0x34, 0x1d, 0x79, 0x62, 0xf9,
	0xbf, 0x38, 0x5a, 0x5d, 0x43, 0xde, 0x22, 0xad, 0x17, 0xdd, 0x93, 0xf3, 0xc7, 0xda, 0x68, 0xeb,
	0xf6, 0xde, 0x7c, 0x96, 0xcc, 0x71, 0x6d, 0x6b, 0xcc, 0xe0, 0xb5, 0x01, 0x74, 0xf4, 0x9a, 0xfc,
	0x93, 0xba, 0x60, 0x32, 0xe7, 0x42, 0x82, 0x61, 0xee, 0x18, 0x06, 0xeb, 0x60, 0x33, 0xcd, 0xe6,
	0x5e, 0x7d, 0xe8, 0xc4, 0xe8, 0x3d, 0x20, 0x17, 0xbf, 0xec, 0x41, 0xa3, 0x15, 0x02, 0xdd, 0x91,
	0xb1, 0x61, 0x88, 0x50, 0x86, 0xc1, 0x7a, 0xb8, 0x99, 0xa5, 0xab, 0xd8, 0xff, 0x2a, 0xfe, 0xc9,
	0x67, 0x80, 0x8d, 0x74, 0x59, 0x87, 0x7e, 0x0e, 0x71, 0x26, 0x24, 0x94, 0xe1, 0xe0, 0x0f, 0x43,
	0x2d, 0x1a, 0x71, 0x72, 0xd6, 0xe7, 0xd3, 0x2d, 0x99, 0x98, 0x4e, 0xf1, 0x21, 0x66, 0xe9, 0xa2,
	0x7f, 0xdd, 0x17, 0x46, 0x57, 0x64, 0x0a, 0xd6, 0x6a, 0x9b, 0xd7, 0x58, 0x85, 0x03, 0x1f, 0x7c,
	0xe2, 0x85, 0x27, 0xac, 0x52, 0x24, 0xf3, 0xfd, 0xf7, 0xb6, 0xe9, 0x81, 0x2c, 0x7a, 0x3b, 0xa0,
	0x97, 0xdd, 0x3b, 0xa7, 0x9a, 0x5e, 0x5e, 0x9d, 0x86, 0xda, 0x1a, 0xef, 0x46, 0x2f, 0x43, 0x66,
	0xc4, 0x61, 0xec, 0xaf, 0xb7, 0xfb, 0x08, 0x00, 0x00, 0xff, 0xff, 0x13, 0xf2, 0x42, 0x89, 0x15,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	// ImportChromePlatforms imports chrome platforms.
	ImportChromePlatforms(ctx context.Context, in *ImportChromePlatformsRequest, opts ...grpc.CallOption) (*ImportChromePlatformsResponse, error)
}
type configurationPRPCClient struct {
	client *prpc.Client
}

func NewConfigurationPRPCClient(client *prpc.Client) ConfigurationClient {
	return &configurationPRPCClient{client}
}

func (c *configurationPRPCClient) ImportChromePlatforms(ctx context.Context, in *ImportChromePlatformsRequest, opts ...grpc.CallOption) (*ImportChromePlatformsResponse, error) {
	out := new(ImportChromePlatformsResponse)
	err := c.client.Call(ctx, "fleet.Configuration", "ImportChromePlatforms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type configurationClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigurationClient(cc grpc.ClientConnInterface) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) ImportChromePlatforms(ctx context.Context, in *ImportChromePlatformsRequest, opts ...grpc.CallOption) (*ImportChromePlatformsResponse, error) {
	out := new(ImportChromePlatformsResponse)
	err := c.cc.Invoke(ctx, "/fleet.Configuration/ImportChromePlatforms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	// ImportChromePlatforms imports chrome platforms.
	ImportChromePlatforms(context.Context, *ImportChromePlatformsRequest) (*ImportChromePlatformsResponse, error)
}

// UnimplementedConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedConfigurationServer struct {
}

func (*UnimplementedConfigurationServer) ImportChromePlatforms(ctx context.Context, req *ImportChromePlatformsRequest) (*ImportChromePlatformsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportChromePlatforms not implemented")
}

func RegisterConfigurationServer(s prpc.Registrar, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_ImportChromePlatforms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportChromePlatformsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).ImportChromePlatforms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleet.Configuration/ImportChromePlatforms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).ImportChromePlatforms(ctx, req.(*ImportChromePlatformsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fleet.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportChromePlatforms",
			Handler:    _Configuration_ImportChromePlatforms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/unified-fleet/api/v1/configuration.proto",
}
