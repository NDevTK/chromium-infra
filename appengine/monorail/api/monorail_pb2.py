# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: monorail.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='monorail.proto',
  package='monorail',
  syntax='proto3',
  serialized_pb=_b('\n\x0emonorail.proto\x12\x08monorail\"\x1f\n\x0eGetUserRequest\x12\r\n\x05\x65mail\x18\x01 \x01(\t\"!\n\x04User\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\x03\"<\n\x13ListProjectsRequest\x12\x11\n\tpage_size\x18\x01 \x01(\x05\x12\x12\n\npage_token\x18\x02 \x01(\t\"T\n\x14ListProjectsResponse\x12#\n\x08projects\x18\x01 \x03(\x0b\x32\x11.monorail.Project\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"=\n\x07Project\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07summary\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"Y\n$UpdateProjectConfiguredLabelsRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12 \n\x06labels\x18\x02 \x01(\x0b\x32\x10.monorail.Labels\"\x86\x01\n#PatchProjectConfiguredLabelsRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12%\n\x0c\x61\x64\x64\x65\x64_labels\x18\x02 \x03(\x0b\x32\x0f.monorail.Label\x12\'\n\x0eremoved_labels\x18\x03 \x03(\x0b\x32\x0f.monorail.Label\")\n\x06Labels\x12\x1f\n\x06labels\x18\x01 \x03(\x0b\x32\x0f.monorail.Label\"#\n\x05Label\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04rank\x18\x02 \x01(\x03\"E\n\x12\x43reateIssueRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x1e\n\x05issue\x18\x02 \x01(\x0b\x32\x0f.monorail.Issue\"T\n\x05Issue\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x14\n\x0cissue_number\x18\x02 \x01(\x03\x12\x0f\n\x07summary\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\"L\n\x19\x44\x65leteIssueCommentRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\r\n\x05issue\x18\x02 \x01(\x03\x12\x0f\n\x07\x63omment\x18\x03 \x01(\x03\"+\n\x07\x43omment\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\t\x12\x0f\n\x07\x64\x65leted\x18\x02 \x01(\x08\x32>\n\x05Users\x12\x35\n\x07GetUser\x12\x18.monorail.GetUserRequest\x1a\x0e.monorail.User\"\x00\x32\xa3\x02\n\x08Projects\x12O\n\x0cListProjects\x12\x1d.monorail.ListProjectsRequest\x1a\x1e.monorail.ListProjectsResponse\"\x00\x12\x63\n\x1dUpdateProjectConfiguredLabels\x12..monorail.UpdateProjectConfiguredLabelsRequest\x1a\x10.monorail.Labels\"\x00\x12\x61\n\x1cPatchProjectConfiguredLabels\x12-.monorail.PatchProjectConfiguredLabelsRequest\x1a\x10.monorail.Labels\"\x00\x32\x98\x01\n\x06Issues\x12>\n\x0b\x43reateIssue\x12\x1c.monorail.CreateIssueRequest\x1a\x0f.monorail.Issue\"\x00\x12N\n\x12\x44\x65leteIssueComment\x12#.monorail.DeleteIssueCommentRequest\x1a\x11.monorail.Comment\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_GETUSERREQUEST = _descriptor.Descriptor(
  name='GetUserRequest',
  full_name='monorail.GetUserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email', full_name='monorail.GetUserRequest.email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=59,
)


_USER = _descriptor.Descriptor(
  name='User',
  full_name='monorail.User',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email', full_name='monorail.User.email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='monorail.User.id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=94,
)


_LISTPROJECTSREQUEST = _descriptor.Descriptor(
  name='ListProjectsRequest',
  full_name='monorail.ListProjectsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='page_size', full_name='monorail.ListProjectsRequest.page_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='monorail.ListProjectsRequest.page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=156,
)


_LISTPROJECTSRESPONSE = _descriptor.Descriptor(
  name='ListProjectsResponse',
  full_name='monorail.ListProjectsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='projects', full_name='monorail.ListProjectsResponse.projects', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='monorail.ListProjectsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=242,
)


_PROJECT = _descriptor.Descriptor(
  name='Project',
  full_name='monorail.Project',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='monorail.Project.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='summary', full_name='monorail.Project.summary', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='monorail.Project.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=305,
)


_UPDATEPROJECTCONFIGUREDLABELSREQUEST = _descriptor.Descriptor(
  name='UpdateProjectConfiguredLabelsRequest',
  full_name='monorail.UpdateProjectConfiguredLabelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='monorail.UpdateProjectConfiguredLabelsRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='monorail.UpdateProjectConfiguredLabelsRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=307,
  serialized_end=396,
)


_PATCHPROJECTCONFIGUREDLABELSREQUEST = _descriptor.Descriptor(
  name='PatchProjectConfiguredLabelsRequest',
  full_name='monorail.PatchProjectConfiguredLabelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='monorail.PatchProjectConfiguredLabelsRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='added_labels', full_name='monorail.PatchProjectConfiguredLabelsRequest.added_labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='removed_labels', full_name='monorail.PatchProjectConfiguredLabelsRequest.removed_labels', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=533,
)


_LABELS = _descriptor.Descriptor(
  name='Labels',
  full_name='monorail.Labels',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='labels', full_name='monorail.Labels.labels', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=576,
)


_LABEL = _descriptor.Descriptor(
  name='Label',
  full_name='monorail.Label',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='monorail.Label.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rank', full_name='monorail.Label.rank', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=578,
  serialized_end=613,
)


_CREATEISSUEREQUEST = _descriptor.Descriptor(
  name='CreateIssueRequest',
  full_name='monorail.CreateIssueRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='monorail.CreateIssueRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='issue', full_name='monorail.CreateIssueRequest.issue', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=615,
  serialized_end=684,
)


_ISSUE = _descriptor.Descriptor(
  name='Issue',
  full_name='monorail.Issue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='monorail.Issue.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='issue_number', full_name='monorail.Issue.issue_number', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='summary', full_name='monorail.Issue.summary', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='monorail.Issue.description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=686,
  serialized_end=770,
)


_DELETEISSUECOMMENTREQUEST = _descriptor.Descriptor(
  name='DeleteIssueCommentRequest',
  full_name='monorail.DeleteIssueCommentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='monorail.DeleteIssueCommentRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='issue', full_name='monorail.DeleteIssueCommentRequest.issue', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='comment', full_name='monorail.DeleteIssueCommentRequest.comment', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=772,
  serialized_end=848,
)


_COMMENT = _descriptor.Descriptor(
  name='Comment',
  full_name='monorail.Comment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='monorail.Comment.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deleted', full_name='monorail.Comment.deleted', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=850,
  serialized_end=893,
)

_LISTPROJECTSRESPONSE.fields_by_name['projects'].message_type = _PROJECT
_UPDATEPROJECTCONFIGUREDLABELSREQUEST.fields_by_name['labels'].message_type = _LABELS
_PATCHPROJECTCONFIGUREDLABELSREQUEST.fields_by_name['added_labels'].message_type = _LABEL
_PATCHPROJECTCONFIGUREDLABELSREQUEST.fields_by_name['removed_labels'].message_type = _LABEL
_LABELS.fields_by_name['labels'].message_type = _LABEL
_CREATEISSUEREQUEST.fields_by_name['issue'].message_type = _ISSUE
DESCRIPTOR.message_types_by_name['GetUserRequest'] = _GETUSERREQUEST
DESCRIPTOR.message_types_by_name['User'] = _USER
DESCRIPTOR.message_types_by_name['ListProjectsRequest'] = _LISTPROJECTSREQUEST
DESCRIPTOR.message_types_by_name['ListProjectsResponse'] = _LISTPROJECTSRESPONSE
DESCRIPTOR.message_types_by_name['Project'] = _PROJECT
DESCRIPTOR.message_types_by_name['UpdateProjectConfiguredLabelsRequest'] = _UPDATEPROJECTCONFIGUREDLABELSREQUEST
DESCRIPTOR.message_types_by_name['PatchProjectConfiguredLabelsRequest'] = _PATCHPROJECTCONFIGUREDLABELSREQUEST
DESCRIPTOR.message_types_by_name['Labels'] = _LABELS
DESCRIPTOR.message_types_by_name['Label'] = _LABEL
DESCRIPTOR.message_types_by_name['CreateIssueRequest'] = _CREATEISSUEREQUEST
DESCRIPTOR.message_types_by_name['Issue'] = _ISSUE
DESCRIPTOR.message_types_by_name['DeleteIssueCommentRequest'] = _DELETEISSUECOMMENTREQUEST
DESCRIPTOR.message_types_by_name['Comment'] = _COMMENT

GetUserRequest = _reflection.GeneratedProtocolMessageType('GetUserRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETUSERREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.GetUserRequest)
  ))
_sym_db.RegisterMessage(GetUserRequest)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), dict(
  DESCRIPTOR = _USER,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.User)
  ))
_sym_db.RegisterMessage(User)

ListProjectsRequest = _reflection.GeneratedProtocolMessageType('ListProjectsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTPROJECTSREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.ListProjectsRequest)
  ))
_sym_db.RegisterMessage(ListProjectsRequest)

ListProjectsResponse = _reflection.GeneratedProtocolMessageType('ListProjectsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTPROJECTSRESPONSE,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.ListProjectsResponse)
  ))
_sym_db.RegisterMessage(ListProjectsResponse)

Project = _reflection.GeneratedProtocolMessageType('Project', (_message.Message,), dict(
  DESCRIPTOR = _PROJECT,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.Project)
  ))
_sym_db.RegisterMessage(Project)

UpdateProjectConfiguredLabelsRequest = _reflection.GeneratedProtocolMessageType('UpdateProjectConfiguredLabelsRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEPROJECTCONFIGUREDLABELSREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.UpdateProjectConfiguredLabelsRequest)
  ))
_sym_db.RegisterMessage(UpdateProjectConfiguredLabelsRequest)

PatchProjectConfiguredLabelsRequest = _reflection.GeneratedProtocolMessageType('PatchProjectConfiguredLabelsRequest', (_message.Message,), dict(
  DESCRIPTOR = _PATCHPROJECTCONFIGUREDLABELSREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.PatchProjectConfiguredLabelsRequest)
  ))
_sym_db.RegisterMessage(PatchProjectConfiguredLabelsRequest)

Labels = _reflection.GeneratedProtocolMessageType('Labels', (_message.Message,), dict(
  DESCRIPTOR = _LABELS,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.Labels)
  ))
_sym_db.RegisterMessage(Labels)

Label = _reflection.GeneratedProtocolMessageType('Label', (_message.Message,), dict(
  DESCRIPTOR = _LABEL,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.Label)
  ))
_sym_db.RegisterMessage(Label)

CreateIssueRequest = _reflection.GeneratedProtocolMessageType('CreateIssueRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEISSUEREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.CreateIssueRequest)
  ))
_sym_db.RegisterMessage(CreateIssueRequest)

Issue = _reflection.GeneratedProtocolMessageType('Issue', (_message.Message,), dict(
  DESCRIPTOR = _ISSUE,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.Issue)
  ))
_sym_db.RegisterMessage(Issue)

DeleteIssueCommentRequest = _reflection.GeneratedProtocolMessageType('DeleteIssueCommentRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEISSUECOMMENTREQUEST,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.DeleteIssueCommentRequest)
  ))
_sym_db.RegisterMessage(DeleteIssueCommentRequest)

Comment = _reflection.GeneratedProtocolMessageType('Comment', (_message.Message,), dict(
  DESCRIPTOR = _COMMENT,
  __module__ = 'monorail_pb2'
  # @@protoc_insertion_point(class_scope:monorail.Comment)
  ))
_sym_db.RegisterMessage(Comment)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class UsersStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetUser = channel.unary_unary(
        '/monorail.Users/GetUser',
        request_serializer=GetUserRequest.SerializeToString,
        response_deserializer=User.FromString,
        )


class UsersServicer(object):

  def GetUser(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetUser': grpc.unary_unary_rpc_method_handler(
          servicer.GetUser,
          request_deserializer=GetUserRequest.FromString,
          response_serializer=User.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'monorail.Users', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaUsersServicer(object):
  def GetUser(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaUsersStub(object):
  def GetUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetUser.future = None


def beta_create_Users_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('monorail.Users', 'GetUser'): GetUserRequest.FromString,
  }
  response_serializers = {
    ('monorail.Users', 'GetUser'): User.SerializeToString,
  }
  method_implementations = {
    ('monorail.Users', 'GetUser'): face_utilities.unary_unary_inline(servicer.GetUser),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Users_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('monorail.Users', 'GetUser'): GetUserRequest.SerializeToString,
  }
  response_deserializers = {
    ('monorail.Users', 'GetUser'): User.FromString,
  }
  cardinalities = {
    'GetUser': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'monorail.Users', cardinalities, options=stub_options)


class ProjectsStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListProjects = channel.unary_unary(
        '/monorail.Projects/ListProjects',
        request_serializer=ListProjectsRequest.SerializeToString,
        response_deserializer=ListProjectsResponse.FromString,
        )
    self.UpdateProjectConfiguredLabels = channel.unary_unary(
        '/monorail.Projects/UpdateProjectConfiguredLabels',
        request_serializer=UpdateProjectConfiguredLabelsRequest.SerializeToString,
        response_deserializer=Labels.FromString,
        )
    self.PatchProjectConfiguredLabels = channel.unary_unary(
        '/monorail.Projects/PatchProjectConfiguredLabels',
        request_serializer=PatchProjectConfiguredLabelsRequest.SerializeToString,
        response_deserializer=Labels.FromString,
        )


class ProjectsServicer(object):

  def ListProjects(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateProjectConfiguredLabels(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchProjectConfiguredLabels(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProjectsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListProjects': grpc.unary_unary_rpc_method_handler(
          servicer.ListProjects,
          request_deserializer=ListProjectsRequest.FromString,
          response_serializer=ListProjectsResponse.SerializeToString,
      ),
      'UpdateProjectConfiguredLabels': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateProjectConfiguredLabels,
          request_deserializer=UpdateProjectConfiguredLabelsRequest.FromString,
          response_serializer=Labels.SerializeToString,
      ),
      'PatchProjectConfiguredLabels': grpc.unary_unary_rpc_method_handler(
          servicer.PatchProjectConfiguredLabels,
          request_deserializer=PatchProjectConfiguredLabelsRequest.FromString,
          response_serializer=Labels.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'monorail.Projects', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaProjectsServicer(object):
  def ListProjects(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def UpdateProjectConfiguredLabels(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def PatchProjectConfiguredLabels(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaProjectsStub(object):
  def ListProjects(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  ListProjects.future = None
  def UpdateProjectConfiguredLabels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  UpdateProjectConfiguredLabels.future = None
  def PatchProjectConfiguredLabels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  PatchProjectConfiguredLabels.future = None


def beta_create_Projects_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('monorail.Projects', 'ListProjects'): ListProjectsRequest.FromString,
    ('monorail.Projects', 'PatchProjectConfiguredLabels'): PatchProjectConfiguredLabelsRequest.FromString,
    ('monorail.Projects', 'UpdateProjectConfiguredLabels'): UpdateProjectConfiguredLabelsRequest.FromString,
  }
  response_serializers = {
    ('monorail.Projects', 'ListProjects'): ListProjectsResponse.SerializeToString,
    ('monorail.Projects', 'PatchProjectConfiguredLabels'): Labels.SerializeToString,
    ('monorail.Projects', 'UpdateProjectConfiguredLabels'): Labels.SerializeToString,
  }
  method_implementations = {
    ('monorail.Projects', 'ListProjects'): face_utilities.unary_unary_inline(servicer.ListProjects),
    ('monorail.Projects', 'PatchProjectConfiguredLabels'): face_utilities.unary_unary_inline(servicer.PatchProjectConfiguredLabels),
    ('monorail.Projects', 'UpdateProjectConfiguredLabels'): face_utilities.unary_unary_inline(servicer.UpdateProjectConfiguredLabels),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Projects_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('monorail.Projects', 'ListProjects'): ListProjectsRequest.SerializeToString,
    ('monorail.Projects', 'PatchProjectConfiguredLabels'): PatchProjectConfiguredLabelsRequest.SerializeToString,
    ('monorail.Projects', 'UpdateProjectConfiguredLabels'): UpdateProjectConfiguredLabelsRequest.SerializeToString,
  }
  response_deserializers = {
    ('monorail.Projects', 'ListProjects'): ListProjectsResponse.FromString,
    ('monorail.Projects', 'PatchProjectConfiguredLabels'): Labels.FromString,
    ('monorail.Projects', 'UpdateProjectConfiguredLabels'): Labels.FromString,
  }
  cardinalities = {
    'ListProjects': cardinality.Cardinality.UNARY_UNARY,
    'PatchProjectConfiguredLabels': cardinality.Cardinality.UNARY_UNARY,
    'UpdateProjectConfiguredLabels': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'monorail.Projects', cardinalities, options=stub_options)


class IssuesStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateIssue = channel.unary_unary(
        '/monorail.Issues/CreateIssue',
        request_serializer=CreateIssueRequest.SerializeToString,
        response_deserializer=Issue.FromString,
        )
    self.DeleteIssueComment = channel.unary_unary(
        '/monorail.Issues/DeleteIssueComment',
        request_serializer=DeleteIssueCommentRequest.SerializeToString,
        response_deserializer=Comment.FromString,
        )


class IssuesServicer(object):

  def CreateIssue(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteIssueComment(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IssuesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateIssue': grpc.unary_unary_rpc_method_handler(
          servicer.CreateIssue,
          request_deserializer=CreateIssueRequest.FromString,
          response_serializer=Issue.SerializeToString,
      ),
      'DeleteIssueComment': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteIssueComment,
          request_deserializer=DeleteIssueCommentRequest.FromString,
          response_serializer=Comment.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'monorail.Issues', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaIssuesServicer(object):
  def CreateIssue(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteIssueComment(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaIssuesStub(object):
  def CreateIssue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CreateIssue.future = None
  def DeleteIssueComment(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  DeleteIssueComment.future = None


def beta_create_Issues_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('monorail.Issues', 'CreateIssue'): CreateIssueRequest.FromString,
    ('monorail.Issues', 'DeleteIssueComment'): DeleteIssueCommentRequest.FromString,
  }
  response_serializers = {
    ('monorail.Issues', 'CreateIssue'): Issue.SerializeToString,
    ('monorail.Issues', 'DeleteIssueComment'): Comment.SerializeToString,
  }
  method_implementations = {
    ('monorail.Issues', 'CreateIssue'): face_utilities.unary_unary_inline(servicer.CreateIssue),
    ('monorail.Issues', 'DeleteIssueComment'): face_utilities.unary_unary_inline(servicer.DeleteIssueComment),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Issues_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('monorail.Issues', 'CreateIssue'): CreateIssueRequest.SerializeToString,
    ('monorail.Issues', 'DeleteIssueComment'): DeleteIssueCommentRequest.SerializeToString,
  }
  response_deserializers = {
    ('monorail.Issues', 'CreateIssue'): Issue.FromString,
    ('monorail.Issues', 'DeleteIssueComment'): Comment.FromString,
  }
  cardinalities = {
    'CreateIssue': cardinality.Cardinality.UNARY_UNARY,
    'DeleteIssueComment': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'monorail.Issues', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
