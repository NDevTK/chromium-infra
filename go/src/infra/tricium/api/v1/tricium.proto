// Copyright 2016 The Chromium Authors. All rights reserved. Use of this source
// code is governed by a BSD-style license that can be found in the LICENSE
// file.

syntax = "proto3";

package tricium;

// Tricium implements the main API of the Tricium service.
service Tricium {
  // Analyze requests analysis of a list of paths.
  //
  // An analysis request for a list of paths in a project connected to Tricium
  // via the Tricium configuration. On success, the ID of the resulting run is
  // returned.
  rpc Analyze(AnalyzeRequest) returns (AnalyzeResponse);

  // TODO(emso): Add RPC for collection of results.
}

// AnalyzeRequest contains the details needed for an analysis request.
message AnalyzeRequest {
  // Name of the project hosting the paths listed in the request. The name
  // should map to the project name as it is connected to Tricium.
  string project = 1;

  string git_ref = 2;

  // Paths to analyze in the project. Listed from the root of the Git
  // repository.
  // TODO(emso): document path separators or add listing of path segments.
  repeated string paths = 3;
}

message AnalyzeResponse {
  // ID of the run started for this request. This ID can be used to track
  // progress and find results.
  string run_id = 1;
}
