# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='discovery',
  syntax='proto3',
  serialized_pb=_b('\n\rservice.proto\x12\tdiscovery\x1a google/protobuf/descriptor.proto\"\x06\n\x04Void\"]\n\x10\x44\x65scribeResponse\x12\x37\n\x0b\x64\x65scription\x18\x01 \x01(\x0b\x32\".google.protobuf.FileDescriptorSet\x12\x10\n\x08services\x18\x02 \x03(\t2G\n\tDiscovery\x12:\n\x08\x44\x65scribe\x12\x0f.discovery.Void\x1a\x1b.discovery.DescribeResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='discovery.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=68,
)


_DESCRIBERESPONSE = _descriptor.Descriptor(
  name='DescribeResponse',
  full_name='discovery.DescribeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='discovery.DescribeResponse.description', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='services', full_name='discovery.DescribeResponse.services', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=163,
)

_DESCRIBERESPONSE.fields_by_name['description'].message_type = google_dot_protobuf_dot_descriptor__pb2._FILEDESCRIPTORSET
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['DescribeResponse'] = _DESCRIBERESPONSE

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:discovery.Void)
  ))
_sym_db.RegisterMessage(Void)

DescribeResponse = _reflection.GeneratedProtocolMessageType('DescribeResponse', (_message.Message,), dict(
  DESCRIPTOR = _DESCRIBERESPONSE,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:discovery.DescribeResponse)
  ))
_sym_db.RegisterMessage(DescribeResponse)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class DiscoveryStub(object):
  """Discovery describes services.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Describe = channel.unary_unary(
        '/discovery.Discovery/Describe',
        request_serializer=Void.SerializeToString,
        response_deserializer=DescribeResponse.FromString,
        )


class DiscoveryServicer(object):
  """Discovery describes services.
  """

  def Describe(self, request, context):
    """Describe returns a list of services and a descriptor.FileDescriptorSet
    that covers them all.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DiscoveryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Describe': grpc.unary_unary_rpc_method_handler(
          servicer.Describe,
          request_deserializer=Void.FromString,
          response_serializer=DescribeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'discovery.Discovery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaDiscoveryServicer(object):
  """Discovery describes services.
  """
  def Describe(self, request, context):
    """Describe returns a list of services and a descriptor.FileDescriptorSet
    that covers them all.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaDiscoveryStub(object):
  """Discovery describes services.
  """
  def Describe(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Describe returns a list of services and a descriptor.FileDescriptorSet
    that covers them all.
    """
    raise NotImplementedError()
  Describe.future = None


def beta_create_Discovery_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('discovery.Discovery', 'Describe'): Void.FromString,
  }
  response_serializers = {
    ('discovery.Discovery', 'Describe'): DescribeResponse.SerializeToString,
  }
  method_implementations = {
    ('discovery.Discovery', 'Describe'): face_utilities.unary_unary_inline(servicer.Describe),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Discovery_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('discovery.Discovery', 'Describe'): Void.SerializeToString,
  }
  response_deserializers = {
    ('discovery.Discovery', 'Describe'): DescribeResponse.FromString,
  }
  cardinalities = {
    'Describe': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'discovery.Discovery', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
