// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tools/kitchen/third_party/recipe_engine/arguments.proto

package recipe_engine

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Arguments is a protobuf that can be supplied to the recipe engine through its
// "--operational-args-path" command-line parameter in JSONPB format.
type Arguments struct {
	// Annotation control flags.
	AnnotationFlags      *Arguments_AnnotationFlags `protobuf:"bytes,2,opt,name=annotation_flags,json=annotationFlags,proto3" json:"annotation_flags,omitempty"`
	EngineFlags          *Arguments_EngineFlags     `protobuf:"bytes,4,opt,name=engine_flags,json=engineFlags,proto3" json:"engine_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Arguments) Reset()         { *m = Arguments{} }
func (m *Arguments) String() string { return proto.CompactTextString(m) }
func (*Arguments) ProtoMessage()    {}
func (*Arguments) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37baee6372b8245, []int{0}
}

func (m *Arguments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arguments.Unmarshal(m, b)
}
func (m *Arguments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arguments.Marshal(b, m, deterministic)
}
func (m *Arguments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arguments.Merge(m, src)
}
func (m *Arguments) XXX_Size() int {
	return xxx_messageInfo_Arguments.Size(m)
}
func (m *Arguments) XXX_DiscardUnknown() {
	xxx_messageInfo_Arguments.DiscardUnknown(m)
}

var xxx_messageInfo_Arguments proto.InternalMessageInfo

func (m *Arguments) GetAnnotationFlags() *Arguments_AnnotationFlags {
	if m != nil {
		return m.AnnotationFlags
	}
	return nil
}

func (m *Arguments) GetEngineFlags() *Arguments_EngineFlags {
	if m != nil {
		return m.EngineFlags
	}
	return nil
}

// Message containing the set of supported annotation control flags.
type Arguments_AnnotationFlags struct {
	// If true, emit CURRENT_TIMESTAMP annotations.
	EmitTimestamp bool `protobuf:"varint,1,opt,name=emit_timestamp,json=emitTimestamp,proto3" json:"emit_timestamp,omitempty"`
	// If true, emit all input properties as annotations at the beginning of
	// recipe engine execution.
	EmitInitialProperties bool     `protobuf:"varint,2,opt,name=emit_initial_properties,json=emitInitialProperties,proto3" json:"emit_initial_properties,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Arguments_AnnotationFlags) Reset()         { *m = Arguments_AnnotationFlags{} }
func (m *Arguments_AnnotationFlags) String() string { return proto.CompactTextString(m) }
func (*Arguments_AnnotationFlags) ProtoMessage()    {}
func (*Arguments_AnnotationFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37baee6372b8245, []int{0, 0}
}

func (m *Arguments_AnnotationFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arguments_AnnotationFlags.Unmarshal(m, b)
}
func (m *Arguments_AnnotationFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arguments_AnnotationFlags.Marshal(b, m, deterministic)
}
func (m *Arguments_AnnotationFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arguments_AnnotationFlags.Merge(m, src)
}
func (m *Arguments_AnnotationFlags) XXX_Size() int {
	return xxx_messageInfo_Arguments_AnnotationFlags.Size(m)
}
func (m *Arguments_AnnotationFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_Arguments_AnnotationFlags.DiscardUnknown(m)
}

var xxx_messageInfo_Arguments_AnnotationFlags proto.InternalMessageInfo

func (m *Arguments_AnnotationFlags) GetEmitTimestamp() bool {
	if m != nil {
		return m.EmitTimestamp
	}
	return false
}

func (m *Arguments_AnnotationFlags) GetEmitInitialProperties() bool {
	if m != nil {
		return m.EmitInitialProperties
	}
	return false
}

// Any flags to pass to the recipe engine. Used to toggle on new behavior,
// like sending logs through logdog.
type Arguments_EngineFlags struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arguments_EngineFlags) Reset()         { *m = Arguments_EngineFlags{} }
func (m *Arguments_EngineFlags) String() string { return proto.CompactTextString(m) }
func (*Arguments_EngineFlags) ProtoMessage()    {}
func (*Arguments_EngineFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37baee6372b8245, []int{0, 1}
}

func (m *Arguments_EngineFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arguments_EngineFlags.Unmarshal(m, b)
}
func (m *Arguments_EngineFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arguments_EngineFlags.Marshal(b, m, deterministic)
}
func (m *Arguments_EngineFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arguments_EngineFlags.Merge(m, src)
}
func (m *Arguments_EngineFlags) XXX_Size() int {
	return xxx_messageInfo_Arguments_EngineFlags.Size(m)
}
func (m *Arguments_EngineFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_Arguments_EngineFlags.DiscardUnknown(m)
}

var xxx_messageInfo_Arguments_EngineFlags proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Arguments)(nil), "recipe_engine.Arguments")
	proto.RegisterType((*Arguments_AnnotationFlags)(nil), "recipe_engine.Arguments.AnnotationFlags")
	proto.RegisterType((*Arguments_EngineFlags)(nil), "recipe_engine.Arguments.EngineFlags")
}

func init() {
	proto.RegisterFile("infra/tools/kitchen/third_party/recipe_engine/arguments.proto", fileDescriptor_a37baee6372b8245)
}

var fileDescriptor_a37baee6372b8245 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0x19, 0x52, 0x53, 0xe7, 0x46, 0x44, 0x1c, 0x3b, 0x0d, 0x51, 0xe8, 0xa9, 0x01,
	0x05, 0x6f, 0x1e, 0x76, 0x50, 0xd1, 0x93, 0x54, 0xef, 0x21, 0xce, 0xb7, 0xee, 0x61, 0xfb, 0x12,
	0xd2, 0xe7, 0xc1, 0x7f, 0xcc, 0xbf, 0x4f, 0xda, 0xd8, 0x6a, 0x05, 0x2f, 0x81, 0x7c, 0x7f, 0x7c,
	0x92, 0xf7, 0xc4, 0x35, 0xd2, 0xd6, 0x1b, 0xc5, 0xd6, 0x56, 0x8d, 0x7a, 0x43, 0xde, 0xec, 0x80,
	0x14, 0xef, 0xd0, 0xbf, 0x6a, 0x67, 0x3c, 0x7f, 0x28, 0x0f, 0x1b, 0x74, 0xa0, 0x81, 0x4a, 0x24,
	0x50, 0xc6, 0x97, 0xef, 0x35, 0x10, 0x37, 0xb9, 0xf3, 0x96, 0xad, 0x9c, 0x8e, 0xec, 0xd3, 0xcf,
	0x58, 0xec, 0xaf, 0xfb, 0x88, 0x7c, 0x12, 0x73, 0x43, 0x64, 0xd9, 0x30, 0x5a, 0xd2, 0xdb, 0xca,
	0x94, 0xcd, 0x22, 0x5e, 0x45, 0x59, 0x7a, 0x91, 0xe5, 0xa3, 0x5e, 0x3e, 0x74, 0xf2, 0xf5, 0x50,
	0xb8, 0x6d, 0xf3, 0xc5, 0xcc, 0x8c, 0x05, 0x79, 0x27, 0x0e, 0x42, 0xe9, 0x1b, 0x38, 0xe9, 0x80,
	0x67, 0xff, 0x02, 0x6f, 0x3a, 0x21, 0xc0, 0x52, 0xf8, 0xb9, 0x2c, 0x9d, 0x98, 0xfd, 0x79, 0x4c,
	0x9e, 0x8b, 0x43, 0xa8, 0x91, 0x35, 0x63, 0x0d, 0x0d, 0x9b, 0xda, 0x2d, 0xa2, 0x55, 0x94, 0x25,
	0xc5, 0xb4, 0x55, 0x9f, 0x7b, 0x51, 0x5e, 0x89, 0x93, 0x2e, 0x86, 0x84, 0x8c, 0xa6, 0xd2, 0xce,
	0x5b, 0x07, 0x9e, 0x11, 0xc2, 0x78, 0x49, 0x71, 0xdc, 0xda, 0xf7, 0xc1, 0x7d, 0x1c, 0xcc, 0xe5,
	0x91, 0x48, 0x7f, 0xfd, 0xe6, 0x61, 0x92, 0x44, 0xf3, 0x38, 0x9c, 0x2f, 0x7b, 0xdd, 0x3a, 0x2f,
	0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x4a, 0x9b, 0x83, 0x8f, 0x01, 0x00, 0x00,
}
