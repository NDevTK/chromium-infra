// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/api_proto/project_objects.proto

package monorail_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Visibility permission of template
// Next available tag: 3
type IssueTemplate_TemplatePrivacy int32

const (
	// This value is unused.
	IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED IssueTemplate_TemplatePrivacy = 0
	// Owner project members may view this template.
	IssueTemplate_MEMBERS_ONLY IssueTemplate_TemplatePrivacy = 1
	// Anyone on the web can view this template.
	IssueTemplate_PUBLIC IssueTemplate_TemplatePrivacy = 2
)

var IssueTemplate_TemplatePrivacy_name = map[int32]string{
	0: "TEMPLATE_PRIVACY_UNSPECIFIED",
	1: "MEMBERS_ONLY",
	2: "PUBLIC",
}

var IssueTemplate_TemplatePrivacy_value = map[string]int32{
	"TEMPLATE_PRIVACY_UNSPECIFIED": 0,
	"MEMBERS_ONLY":                 1,
	"PUBLIC":                       2,
}

func (x IssueTemplate_TemplatePrivacy) String() string {
	return proto.EnumName(IssueTemplate_TemplatePrivacy_name, int32(x))
}

func (IssueTemplate_TemplatePrivacy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{6, 0}
}

// Indicator of who if anyone should be the default owner of the issue
// created with this template.
// Next available tag: 2
type IssueTemplate_DefaultOwner int32

const (
	// There is no default owner.
	// This value is used if the default owner is omitted.
	IssueTemplate_DEFAULT_OWNER_UNSPECIFIED IssueTemplate_DefaultOwner = 0
	// The owner should default to the Issue reporter if the reporter is a
	// member of the project.
	IssueTemplate_PROJECT_MEMBER_REPORTER IssueTemplate_DefaultOwner = 1
)

var IssueTemplate_DefaultOwner_name = map[int32]string{
	0: "DEFAULT_OWNER_UNSPECIFIED",
	1: "PROJECT_MEMBER_REPORTER",
}

var IssueTemplate_DefaultOwner_value = map[string]int32{
	"DEFAULT_OWNER_UNSPECIFIED": 0,
	"PROJECT_MEMBER_REPORTER":   1,
}

func (x IssueTemplate_DefaultOwner) String() string {
	return proto.EnumName(IssueTemplate_DefaultOwner_name, int32(x))
}

func (IssueTemplate_DefaultOwner) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{6, 1}
}

// The top level organization of issues in Monorail.
//
// See monorail/doc/userguide/concepts.md#Projects-and-roles.
// and monorail/doc/userguide/project-owners.md#why-does-monorail-have-projects
// Next available tag: 2
type Project struct {
	// Resource name of the project.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Potential steps along the development process that an issue can be in.
//
// See monorail/doc/userguide/project-owners.md#How-to-configure-statuses
// (-- aip.dev/not-precedent: "Status" should be reserved for HTTP/gRPC codes
//     per aip.dev/216. Monorail's Status  preceded the AIP standards, and is
//     used extensively throughout the system.)
// Next available tag: 2
type StatusDef struct {
	// Resource name of the status.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusDef) Reset()         { *m = StatusDef{} }
func (m *StatusDef) String() string { return proto.CompactTextString(m) }
func (*StatusDef) ProtoMessage()    {}
func (*StatusDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{1}
}

func (m *StatusDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDef.Unmarshal(m, b)
}
func (m *StatusDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDef.Marshal(b, m, deterministic)
}
func (m *StatusDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDef.Merge(m, src)
}
func (m *StatusDef) XXX_Size() int {
	return xxx_messageInfo_StatusDef.Size(m)
}
func (m *StatusDef) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDef.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDef proto.InternalMessageInfo

func (m *StatusDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Well-known labels that can be applied to issues within the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 2
type LabelDef struct {
	// Resource name of the label.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelDef) Reset()         { *m = LabelDef{} }
func (m *LabelDef) String() string { return proto.CompactTextString(m) }
func (*LabelDef) ProtoMessage()    {}
func (*LabelDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{2}
}

func (m *LabelDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelDef.Unmarshal(m, b)
}
func (m *LabelDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelDef.Marshal(b, m, deterministic)
}
func (m *LabelDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelDef.Merge(m, src)
}
func (m *LabelDef) XXX_Size() int {
	return xxx_messageInfo_LabelDef.Size(m)
}
func (m *LabelDef) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelDef.DiscardUnknown(m)
}

var xxx_messageInfo_LabelDef proto.InternalMessageInfo

func (m *LabelDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Custom fields defined for the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 2
type FieldDef struct {
	// Resource name of the field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDef) Reset()         { *m = FieldDef{} }
func (m *FieldDef) String() string { return proto.CompactTextString(m) }
func (*FieldDef) ProtoMessage()    {}
func (*FieldDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{3}
}

func (m *FieldDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDef.Unmarshal(m, b)
}
func (m *FieldDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDef.Marshal(b, m, deterministic)
}
func (m *FieldDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDef.Merge(m, src)
}
func (m *FieldDef) XXX_Size() int {
	return xxx_messageInfo_FieldDef.Size(m)
}
func (m *FieldDef) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDef.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDef proto.InternalMessageInfo

func (m *FieldDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A high level definition of the part of the software affected by an issue.
//
// See monorail/doc/userguide/project-owners.md#how-to-configure-components.
// Next available tag: 2
type ComponentDef struct {
	// Resource name of the component.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComponentDef) Reset()         { *m = ComponentDef{} }
func (m *ComponentDef) String() string { return proto.CompactTextString(m) }
func (*ComponentDef) ProtoMessage()    {}
func (*ComponentDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{4}
}

func (m *ComponentDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComponentDef.Unmarshal(m, b)
}
func (m *ComponentDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComponentDef.Marshal(b, m, deterministic)
}
func (m *ComponentDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComponentDef.Merge(m, src)
}
func (m *ComponentDef) XXX_Size() int {
	return xxx_messageInfo_ComponentDef.Size(m)
}
func (m *ComponentDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ComponentDef.DiscardUnknown(m)
}

var xxx_messageInfo_ComponentDef proto.InternalMessageInfo

func (m *ComponentDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Defines approvals that issues within the project may need.
//
// TODO(monorail:7193): Add documentation for approvals.
// Next available tag: 2
type ApprovalDef struct {
	// Resource name of the approval.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApprovalDef) Reset()         { *m = ApprovalDef{} }
func (m *ApprovalDef) String() string { return proto.CompactTextString(m) }
func (*ApprovalDef) ProtoMessage()    {}
func (*ApprovalDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{5}
}

func (m *ApprovalDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalDef.Unmarshal(m, b)
}
func (m *ApprovalDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalDef.Marshal(b, m, deterministic)
}
func (m *ApprovalDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalDef.Merge(m, src)
}
func (m *ApprovalDef) XXX_Size() int {
	return xxx_messageInfo_ApprovalDef.Size(m)
}
func (m *ApprovalDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalDef.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalDef proto.InternalMessageInfo

func (m *ApprovalDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Defines a template for filling issues.
// Next available tag: 8
type IssueTemplate struct {
	// Resource name of the template.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Canonical Issue for this template
	Issue *Issue `protobuf:"bytes,2,opt,name=issue,proto3" json:"issue,omitempty"`
	// Boolean indicating subsequent issue creation must have delta in summary
	SummaryMustBeEdited bool                          `protobuf:"varint,3,opt,name=summary_must_be_edited,json=summaryMustBeEdited,proto3" json:"summary_must_be_edited,omitempty"`
	TemplatePrivacy     IssueTemplate_TemplatePrivacy `protobuf:"varint,4,opt,name=template_privacy,json=templatePrivacy,proto3,enum=monorail.v1.IssueTemplate_TemplatePrivacy" json:"template_privacy,omitempty"`
	DefaultOwner        IssueTemplate_DefaultOwner    `protobuf:"varint,5,opt,name=default_owner,json=defaultOwner,proto3,enum=monorail.v1.IssueTemplate_DefaultOwner" json:"default_owner,omitempty"`
	// Boolean indicating whether issue must have a component.
	ComponentRequired bool `protobuf:"varint,6,opt,name=component_required,json=componentRequired,proto3" json:"component_required,omitempty"`
	// Names of Users who can administer this template.
	Admins               []string `protobuf:"bytes,7,rep,name=admins,proto3" json:"admins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueTemplate) Reset()         { *m = IssueTemplate{} }
func (m *IssueTemplate) String() string { return proto.CompactTextString(m) }
func (*IssueTemplate) ProtoMessage()    {}
func (*IssueTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_63b58a6c62ab6503, []int{6}
}

func (m *IssueTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueTemplate.Unmarshal(m, b)
}
func (m *IssueTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueTemplate.Marshal(b, m, deterministic)
}
func (m *IssueTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueTemplate.Merge(m, src)
}
func (m *IssueTemplate) XXX_Size() int {
	return xxx_messageInfo_IssueTemplate.Size(m)
}
func (m *IssueTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_IssueTemplate proto.InternalMessageInfo

func (m *IssueTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IssueTemplate) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

func (m *IssueTemplate) GetSummaryMustBeEdited() bool {
	if m != nil {
		return m.SummaryMustBeEdited
	}
	return false
}

func (m *IssueTemplate) GetTemplatePrivacy() IssueTemplate_TemplatePrivacy {
	if m != nil {
		return m.TemplatePrivacy
	}
	return IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED
}

func (m *IssueTemplate) GetDefaultOwner() IssueTemplate_DefaultOwner {
	if m != nil {
		return m.DefaultOwner
	}
	return IssueTemplate_DEFAULT_OWNER_UNSPECIFIED
}

func (m *IssueTemplate) GetComponentRequired() bool {
	if m != nil {
		return m.ComponentRequired
	}
	return false
}

func (m *IssueTemplate) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

func init() {
	proto.RegisterEnum("monorail.v1.IssueTemplate_TemplatePrivacy", IssueTemplate_TemplatePrivacy_name, IssueTemplate_TemplatePrivacy_value)
	proto.RegisterEnum("monorail.v1.IssueTemplate_DefaultOwner", IssueTemplate_DefaultOwner_name, IssueTemplate_DefaultOwner_value)
	proto.RegisterType((*Project)(nil), "monorail.v1.Project")
	proto.RegisterType((*StatusDef)(nil), "monorail.v1.StatusDef")
	proto.RegisterType((*LabelDef)(nil), "monorail.v1.LabelDef")
	proto.RegisterType((*FieldDef)(nil), "monorail.v1.FieldDef")
	proto.RegisterType((*ComponentDef)(nil), "monorail.v1.ComponentDef")
	proto.RegisterType((*ApprovalDef)(nil), "monorail.v1.ApprovalDef")
	proto.RegisterType((*IssueTemplate)(nil), "monorail.v1.IssueTemplate")
}

func init() {
	proto.RegisterFile("api/v1/api_proto/project_objects.proto", fileDescriptor_63b58a6c62ab6503)
}

var fileDescriptor_63b58a6c62ab6503 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcf, 0x53, 0xda, 0x4e,
	0x14, 0xff, 0xe2, 0x0f, 0xd4, 0x27, 0x7e, 0xa5, 0xdb, 0x56, 0xd1, 0xb6, 0x33, 0x4c, 0xa6, 0xa3,
	0xb4, 0xd5, 0xec, 0xa8, 0x37, 0x6f, 0x01, 0x42, 0x07, 0x07, 0x24, 0x5d, 0xa1, 0x1d, 0x4f, 0x3b,
	0x0b, 0x59, 0x34, 0x1d, 0xc2, 0xa6, 0xbb, 0x09, 0x1d, 0x87, 0xe1, 0x1f, 0xe6, 0xd6, 0x6b, 0x4f,
	0x1d, 0x42, 0x88, 0x44, 0xa1, 0x33, 0x3d, 0xf1, 0x36, 0x9f, 0x5f, 0xfb, 0x78, 0x2f, 0x81, 0x23,
	0xe6, 0x39, 0x78, 0x70, 0x86, 0x99, 0xe7, 0x50, 0x4f, 0x0a, 0x5f, 0x60, 0x4f, 0x8a, 0xef, 0xbc,
	0xe3, 0x53, 0xd1, 0x9e, 0xfc, 0x28, 0x3d, 0x7c, 0x8a, 0xb6, 0x5d, 0xd1, 0x17, 0x92, 0x39, 0x3d,
	0x7d, 0x70, 0x76, 0x78, 0x72, 0x27, 0xc4, 0x5d, 0x8f, 0x47, 0x82, 0xe9, 0x61, 0xe2, 0x80, 0xbb,
	0x0e, 0xef, 0xd9, 0xb4, 0xcd, 0xef, 0xd9, 0xc0, 0x11, 0x72, 0x2a, 0x3d, 0x3c, 0x5a, 0xc6, 0x96,
	0x5c, 0x89, 0x40, 0x76, 0x78, 0xc4, 0x7b, 0xff, 0xec, 0x2a, 0x8e, 0x52, 0x01, 0x4f, 0x5e, 0x44,
	0xab, 0xc3, 0x86, 0x35, 0xbd, 0x21, 0x42, 0xb0, 0xd6, 0x67, 0x2e, 0xcf, 0xa5, 0xf2, 0xa9, 0xc2,
	0x16, 0x09, 0xeb, 0x4b, 0x7d, 0x6c, 0x7c, 0x82, 0xd7, 0xcc, 0x73, 0xf4, 0x8e, 0x6c, 0x07, 0x77,
	0x7a, 0x47, 0xb8, 0x38, 0xe6, 0x47, 0xad, 0x29, 0x3c, 0x8c, 0xaa, 0x91, 0x76, 0x0f, 0x5b, 0x37,
	0x3e, 0xf3, 0x03, 0x55, 0xe6, 0xdd, 0x85, 0x86, 0x9f, 0xc7, 0x46, 0x19, 0xf6, 0x93, 0x86, 0x8f,
	0x8a, 0x0f, 0xcf, 0x2d, 0xb1, 0x9a, 0xa1, 0x0a, 0x0f, 0xe3, 0x7a, 0xa4, 0xd9, 0xb0, 0x59, 0x63,
	0x6d, 0xde, 0x5b, 0x16, 0x54, 0x1e, 0x1b, 0x06, 0xec, 0x25, 0x83, 0x62, 0xc1, 0xf1, 0x82, 0x9c,
	0x5e, 0x04, 0x2a, 0x3c, 0x9c, 0x95, 0x61, 0x4a, 0x65, 0x32, 0x84, 0x7f, 0x49, 0x89, 0x05, 0x8b,
	0x52, 0xba, 0x11, 0xa8, 0xf0, 0x70, 0x56, 0x8e, 0x34, 0x1f, 0x32, 0x25, 0xe1, 0x7a, 0xa2, 0xcf,
	0xfb, 0xfe, 0xb2, 0x24, 0x6b, 0x6c, 0xd4, 0xe1, 0x30, 0x99, 0x94, 0x10, 0xe1, 0x05, 0x69, 0x9d,
	0x39, 0x82, 0xc2, 0xc3, 0xf9, 0xe3, 0x48, 0xf3, 0x60, 0xdb, 0xf0, 0x3c, 0x29, 0x06, 0x6c, 0xe9,
	0x9f, 0x58, 0x1f, 0x1b, 0x57, 0x70, 0x90, 0x0c, 0x9d, 0xd7, 0x9c, 0x2e, 0xc8, 0x64, 0x8f, 0xb8,
	0xc2, 0xc3, 0xb9, 0xd3, 0x48, 0xfb, 0xb5, 0x06, 0x3b, 0xd5, 0xc9, 0x12, 0x36, 0xb9, 0xeb, 0xf5,
	0x98, 0xcf, 0x17, 0x85, 0xa2, 0x02, 0xac, 0x87, 0x9b, 0x9a, 0x5b, 0xc9, 0xa7, 0x0a, 0xdb, 0xe7,
	0x48, 0x9f, 0x7b, 0x57, 0xf4, 0x50, 0x4e, 0xa6, 0x04, 0x74, 0x01, 0x7b, 0x2a, 0x70, 0x5d, 0x26,
	0x1f, 0xa8, 0x1b, 0x28, 0x9f, 0xb6, 0x39, 0xe5, 0xb6, 0xe3, 0x73, 0x3b, 0xb7, 0x9a, 0x4f, 0x15,
	0x36, 0xc9, 0xcb, 0x08, 0xad, 0x07, 0xca, 0x2f, 0x72, 0x33, 0x84, 0x50, 0x0b, 0xb2, 0x7e, 0x14,
	0x4f, 0x3d, 0xe9, 0x0c, 0x58, 0xe7, 0x21, 0xb7, 0x96, 0x4f, 0x15, 0xfe, 0x3f, 0xff, 0xf8, 0x3c,
	0x69, 0x76, 0x51, 0x7d, 0x56, 0x58, 0x53, 0x05, 0xd9, 0xf5, 0x93, 0x0f, 0x50, 0x0d, 0x76, 0x6c,
	0xde, 0x65, 0x41, 0xcf, 0xa7, 0xe2, 0x67, 0x9f, 0xcb, 0xdc, 0x7a, 0xe8, 0x79, 0xfc, 0x17, 0xcf,
	0xf2, 0x94, 0xdf, 0x98, 0xd0, 0x49, 0xc6, 0x9e, 0x3b, 0xa1, 0x53, 0x40, 0xf1, 0xb0, 0xa8, 0xe4,
	0x3f, 0x02, 0x47, 0x72, 0x3b, 0x97, 0x0e, 0xbb, 0x7a, 0x11, 0x23, 0x24, 0x02, 0x10, 0x86, 0x34,
	0xb3, 0x5d, 0xa7, 0xaf, 0x72, 0x1b, 0xf9, 0xd5, 0xc2, 0x56, 0x71, 0xff, 0xb7, 0xf1, 0x0a, 0x50,
	0x72, 0x6e, 0x2d, 0xc5, 0x25, 0x89, 0x68, 0xda, 0x17, 0xd8, 0x7d, 0xd2, 0x11, 0xca, 0xc3, 0xdb,
	0xa6, 0x59, 0xb7, 0x6a, 0x46, 0xd3, 0xa4, 0x16, 0xa9, 0x7e, 0x35, 0x4a, 0xb7, 0xb4, 0x75, 0x7d,
	0x63, 0x99, 0xa5, 0x6a, 0xa5, 0x6a, 0x96, 0xb3, 0xff, 0xa1, 0x2c, 0x64, 0xea, 0x66, 0xbd, 0x68,
	0x92, 0x1b, 0xda, 0xb8, 0xae, 0xdd, 0x66, 0x53, 0x08, 0x20, 0x6d, 0xb5, 0x8a, 0xb5, 0x6a, 0x29,
	0xbb, 0xa2, 0x5d, 0x41, 0x66, 0xbe, 0x21, 0xf4, 0x0e, 0x0e, 0xca, 0x66, 0xc5, 0x68, 0xd5, 0x9a,
	0xb4, 0xf1, 0xed, 0xda, 0x24, 0x4f, 0xcc, 0xde, 0xc0, 0xbe, 0x45, 0x1a, 0x57, 0x66, 0xa9, 0x49,
	0xa7, 0xa6, 0x94, 0x98, 0x56, 0x83, 0x34, 0x4d, 0x92, 0x4d, 0x5d, 0x56, 0xc7, 0x46, 0xe5, 0xe9,
	0x6b, 0x15, 0xef, 0xcc, 0xc9, 0x82, 0xa5, 0x9b, 0x4d, 0x43, 0xe1, 0x61, 0x3c, 0xdc, 0xc9, 0x32,
	0x8d, 0xda, 0xe9, 0xf0, 0x3b, 0x77, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x58, 0xfe, 0x06,
	0x9a, 0x05, 0x00, 0x00,
}
