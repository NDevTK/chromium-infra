// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tricium/api/admin/v1/launcher.proto

package admin

import prpc "go.chromium.org/luci/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "infra/tricium/api/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// LaunchRequest contains the details needed to launch a workflow for an analysis request.
type LaunchRequest struct {
	// The run ID created by a Tricium.Analyze call.
	RunId int64 `protobuf:"varint,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// The name of the project in luci-config.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// The full URL of the git repo used for this run.
	GitUrl string `protobuf:"bytes,3,opt,name=git_url,json=gitUrl,proto3" json:"git_url,omitempty"`
	// A git commit-ish, such as a Gerrit revision ref name like
	// "refs/changes/34/1234/1", or any other ref name or commit hash.
	// This is used in the GitFileDetails data type used to pull files.
	GitRef string `protobuf:"bytes,4,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
	// File metadata from the root of the Git repository.
	Files                []*v1.Data_File `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LaunchRequest) Reset()         { *m = LaunchRequest{} }
func (m *LaunchRequest) String() string { return proto.CompactTextString(m) }
func (*LaunchRequest) ProtoMessage()    {}
func (*LaunchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_launcher_95c4eaf00761fd08, []int{0}
}
func (m *LaunchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchRequest.Unmarshal(m, b)
}
func (m *LaunchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchRequest.Marshal(b, m, deterministic)
}
func (dst *LaunchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchRequest.Merge(dst, src)
}
func (m *LaunchRequest) XXX_Size() int {
	return xxx_messageInfo_LaunchRequest.Size(m)
}
func (m *LaunchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchRequest proto.InternalMessageInfo

func (m *LaunchRequest) GetRunId() int64 {
	if m != nil {
		return m.RunId
	}
	return 0
}

func (m *LaunchRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *LaunchRequest) GetGitUrl() string {
	if m != nil {
		return m.GitUrl
	}
	return ""
}

func (m *LaunchRequest) GetGitRef() string {
	if m != nil {
		return m.GitRef
	}
	return ""
}

func (m *LaunchRequest) GetFiles() []*v1.Data_File {
	if m != nil {
		return m.Files
	}
	return nil
}

type LaunchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LaunchResponse) Reset()         { *m = LaunchResponse{} }
func (m *LaunchResponse) String() string { return proto.CompactTextString(m) }
func (*LaunchResponse) ProtoMessage()    {}
func (*LaunchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_launcher_95c4eaf00761fd08, []int{1}
}
func (m *LaunchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchResponse.Unmarshal(m, b)
}
func (m *LaunchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchResponse.Marshal(b, m, deterministic)
}
func (dst *LaunchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchResponse.Merge(dst, src)
}
func (m *LaunchResponse) XXX_Size() int {
	return xxx_messageInfo_LaunchResponse.Size(m)
}
func (m *LaunchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LaunchRequest)(nil), "admin.LaunchRequest")
	proto.RegisterType((*LaunchResponse)(nil), "admin.LaunchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LauncherClient is the client API for Launcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LauncherClient interface {
	// Launch launches a workflow for provided request details.
	Launch(ctx context.Context, in *LaunchRequest, opts ...grpc.CallOption) (*LaunchResponse, error)
}
type launcherPRPCClient struct {
	client *prpc.Client
}

func NewLauncherPRPCClient(client *prpc.Client) LauncherClient {
	return &launcherPRPCClient{client}
}

func (c *launcherPRPCClient) Launch(ctx context.Context, in *LaunchRequest, opts ...grpc.CallOption) (*LaunchResponse, error) {
	out := new(LaunchResponse)
	err := c.client.Call(ctx, "admin.Launcher", "Launch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type launcherClient struct {
	cc *grpc.ClientConn
}

func NewLauncherClient(cc *grpc.ClientConn) LauncherClient {
	return &launcherClient{cc}
}

func (c *launcherClient) Launch(ctx context.Context, in *LaunchRequest, opts ...grpc.CallOption) (*LaunchResponse, error) {
	out := new(LaunchResponse)
	err := c.cc.Invoke(ctx, "/admin.Launcher/Launch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LauncherServer is the server API for Launcher service.
type LauncherServer interface {
	// Launch launches a workflow for provided request details.
	Launch(context.Context, *LaunchRequest) (*LaunchResponse, error)
}

func RegisterLauncherServer(s prpc.Registrar, srv LauncherServer) {
	s.RegisterService(&_Launcher_serviceDesc, srv)
}

func _Launcher_Launch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LaunchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LauncherServer).Launch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Launcher/Launch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LauncherServer).Launch(ctx, req.(*LaunchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Launcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.Launcher",
	HandlerType: (*LauncherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Launch",
			Handler:    _Launcher_Launch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/tricium/api/admin/v1/launcher.proto",
}

func init() {
	proto.RegisterFile("infra/tricium/api/admin/v1/launcher.proto", fileDescriptor_launcher_95c4eaf00761fd08)
}

var fileDescriptor_launcher_95c4eaf00761fd08 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xa9, 0xb5, 0x9d, 0x46, 0x14, 0x09, 0x0e, 0xc3, 0x2e, 0x96, 0x9d, 0xea, 0x25, 0x61,
	0x13, 0x7f, 0x80, 0x20, 0x82, 0xb0, 0x53, 0xc0, 0xf3, 0x88, 0xed, 0xd7, 0xf9, 0x49, 0x96, 0xd6,
	0xaf, 0xc9, 0x7e, 0x8d, 0x3f, 0x56, 0x4c, 0x5b, 0x41, 0xbd, 0x25, 0x79, 0xde, 0x37, 0xbc, 0x0f,
	0xbb, 0x45, 0xd7, 0x90, 0x51, 0x9e, 0xb0, 0xc2, 0xb0, 0x57, 0xa6, 0x43, 0x65, 0xea, 0x3d, 0x3a,
	0x75, 0x58, 0x29, 0x6b, 0x82, 0xab, 0xde, 0x80, 0x64, 0x47, 0xad, 0x6f, 0x79, 0x16, 0xc1, 0xe2,
	0xe6, 0x7f, 0xe3, 0xb0, 0x52, 0xb5, 0xf1, 0x66, 0xc8, 0x2d, 0x3f, 0x13, 0x76, 0xbe, 0x89, 0x55,
	0x0d, 0x1f, 0x01, 0x7a, 0xcf, 0xe7, 0x2c, 0xa7, 0xe0, 0xb6, 0x58, 0x8b, 0xa4, 0x48, 0xca, 0x54,
	0x67, 0x14, 0xdc, 0x73, 0xcd, 0x05, 0x9b, 0x75, 0xd4, 0xbe, 0x43, 0xe5, 0xc5, 0x51, 0x91, 0x94,
	0xa7, 0x7a, 0xba, 0xf2, 0x6b, 0x36, 0xdb, 0xa1, 0xdf, 0x06, 0xb2, 0x22, 0x8d, 0x24, 0xdf, 0xa1,
	0x7f, 0x21, 0x3b, 0x01, 0x82, 0x46, 0x1c, 0xff, 0x00, 0x0d, 0x0d, 0x2f, 0x59, 0xd6, 0xa0, 0x85,
	0x5e, 0x64, 0x45, 0x5a, 0x9e, 0xad, 0xb9, 0x1c, 0xf7, 0xc9, 0xc7, 0xef, 0x61, 0x4f, 0x68, 0x41,
	0x0f, 0x81, 0xe5, 0x25, 0xbb, 0x98, 0xd6, 0xf5, 0x5d, 0xeb, 0x7a, 0x58, 0x3f, 0xb0, 0x93, 0xcd,
	0xa8, 0xca, 0xef, 0x59, 0x3e, 0x9c, 0xf9, 0x95, 0x8c, 0xbe, 0xf2, 0x97, 0xca, 0x62, 0xfe, 0xe7,
	0x75, 0xf8, 0xe2, 0x35, 0x8f, 0xea, 0x77, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x50, 0x13, 0xc6,
	0x2b, 0x4f, 0x01, 0x00, 0x00,
}
