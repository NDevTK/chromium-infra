// AUTOGENERATED. DO NOT EDIT.

package crimson

import discovery "github.com/luci/luci-go/server/discovery"

import "github.com/luci/luci-go/common/proto/google/descriptor"

func init() {
	discovery.RegisterDescriptorSetCompressed(
		[]string{
			"crimson.Crimson",
		},
		[]byte{31, 139,
			8, 0, 0, 9, 110, 136, 0, 255, 140, 148, 77, 111, 243, 68,
			16, 199, 237, 221, 141, 235, 76, 154, 182, 89, 39, 37, 169, 242,
			178, 138, 132, 168, 144, 136, 32, 60, 122, 4, 226, 244, 16, 158,
			67, 81, 133, 32, 133, 51, 114, 147, 109, 99, 41, 181, 163, 181,
			83, 41, 71, 190, 6, 23, 238, 124, 27, 190, 17, 51, 235, 93,
			31, 202, 133, 155, 255, 243, 242, 155, 217, 255, 40, 129, 127, 58,
			208, 221, 152, 236, 165, 44, 242, 197, 193, 20, 85, 33, 207, 156,
			156, 191, 131, 248, 238, 231, 117, 154, 63, 235, 82, 222, 66, 100,
			236, 215, 48, 84, 252, 182, 179, 188, 90, 248, 38, 87, 178, 118,
			249, 249, 6, 206, 92, 72, 74, 16, 101, 86, 105, 108, 9, 111,
			219, 107, 251, 77, 177, 215, 125, 154, 15, 89, 29, 163, 111, 57,
			130, 184, 172, 82, 83, 253, 158, 29, 134, 220, 198, 207, 172, 190,
			59, 200, 1, 68, 58, 223, 82, 66, 216, 68, 11, 213, 221, 97,
			254, 41, 116, 221, 144, 135, 42, 173, 142, 165, 236, 67, 75, 27,
			83, 24, 55, 171, 22, 243, 123, 56, 119, 101, 191, 28, 181, 57,
			253, 239, 133, 144, 182, 207, 94, 178, 202, 110, 211, 93, 215, 98,
			249, 71, 8, 103, 171, 250, 213, 242, 59, 232, 174, 140, 78, 43,
			237, 223, 250, 31, 67, 110, 174, 223, 70, 234, 85, 231, 129, 252,
			22, 58, 107, 157, 110, 125, 235, 224, 109, 161, 93, 246, 166, 247,
			54, 140, 173, 63, 254, 25, 67, 36, 133, 8, 84, 8, 127, 135,
			16, 158, 75, 46, 2, 185, 252, 43, 84, 171, 226, 112, 50, 217,
			243, 174, 82, 203, 47, 191, 122, 175, 126, 221, 105, 181, 218, 153,
			226, 37, 59, 190, 168, 15, 199, 106, 87, 152, 114, 161, 62, 236,
			247, 202, 22, 149, 202, 232, 82, 155, 87, 189, 93, 128, 250, 173,
			212, 170, 120, 82, 213, 46, 43, 85, 89, 28, 205, 70, 171, 77,
			177, 213, 10, 229, 115, 241, 170, 77, 174, 183, 234, 241, 164, 82,
			245, 253, 195, 15, 95, 148, 213, 105, 175, 213, 62, 219, 232, 28,
			219, 170, 93, 90, 169, 77, 154, 171, 71, 13, 234, 169, 56, 230,
			91, 149, 229, 24, 213, 234, 254, 110, 245, 241, 167, 135, 143, 234,
			41, 219, 235, 5, 64, 12, 33, 147, 60, 138, 47, 1, 128, 69,
			129, 20, 113, 208, 9, 241, 155, 71, 65, 40, 121, 140, 241, 14,
			136, 40, 96, 129, 228, 109, 246, 13, 156, 67, 139, 4, 166, 218,
			81, 226, 21, 2, 218, 131, 177, 87, 28, 213, 103, 239, 92, 27,
			22, 2, 123, 239, 82, 33, 169, 168, 231, 21, 182, 65, 50, 243,
			10, 219, 224, 243, 37, 109, 129, 198, 137, 110, 112, 105, 183, 16,
			52, 170, 27, 95, 17, 78, 216, 45, 46, 216, 148, 90, 72, 8,
			82, 224, 85, 132, 170, 35, 189, 194, 182, 139, 100, 228, 21, 194,
			47, 198, 19, 11, 15, 165, 232, 5, 215, 53, 156, 22, 234, 213,
			79, 20, 33, 193, 37, 147, 208, 197, 150, 144, 224, 66, 178, 158,
			93, 150, 100, 139, 146, 177, 87, 216, 39, 219, 93, 175, 144, 46,
			175, 122, 142, 130, 169, 164, 161, 132, 72, 65, 37, 93, 101, 216,
			162, 164, 167, 208, 244, 164, 161, 144, 1, 73, 67, 65, 111, 250,
			236, 218, 81, 24, 82, 250, 44, 241, 20, 214, 162, 164, 167, 208,
			192, 126, 219, 239, 201, 144, 210, 239, 15, 28, 5, 197, 128, 245,
			29, 133, 35, 5, 213, 181, 171, 228, 45, 74, 122, 10, 71, 202,
			160, 125, 233, 21, 53, 202, 196, 250, 197, 164, 24, 6, 55, 181,
			95, 52, 107, 24, 215, 116, 70, 126, 141, 88, 98, 233, 204, 250,
			53, 98, 195, 79, 44, 129, 89, 191, 70, 142, 206, 172, 95, 163,
			246, 133, 87, 72, 31, 245, 164, 165, 115, 41, 198, 244, 155, 33,
			58, 237, 48, 142, 251, 150, 206, 137, 62, 113, 62, 114, 75, 159,
			176, 113, 189, 59, 183, 244, 137, 163, 115, 75, 159, 56, 31, 185,
			165, 79, 156, 143, 156, 22, 158, 54, 20, 186, 198, 148, 77, 164,
			171, 164, 107, 76, 27, 10, 93, 99, 218, 80, 232, 26, 211, 134,
			130, 215, 152, 185, 151, 114, 123, 141, 25, 155, 122, 10, 93, 99,
			214, 80, 104, 224, 204, 189, 148, 219, 107, 204, 122, 242, 49, 178,
			127, 224, 95, 255, 27, 0, 0, 255, 255, 127, 230, 185, 196, 212,
			5, 0, 0},
	)
}

// FileDescriptorSet returns a descriptor set for this proto package, which
// includes all defined services, and all transitive dependencies.
//
// Will not return nil.
//
// Do NOT modify the returned descriptor.
func FileDescriptorSet() *descriptor.FileDescriptorSet {
	// We just need ONE of the service names to look up the FileDescriptorSet.
	ret, err := discovery.GetDescriptorSet("crimson.Crimson")
	if err != nil {
		panic(err)
	}
	return ret
}
