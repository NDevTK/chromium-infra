// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/api_proto/users.proto

package monorail_v1

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for Users.GetUser.
// Next available tag: 2
type GetUserRequest struct {
	// The name of the user to request.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{0}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The request message for Users.BatchGetUsers.
// Next available tag: 2
type BatchGetUsersRequest struct {
	// The name of the users to request.
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetUsersRequest) Reset()         { *m = BatchGetUsersRequest{} }
func (m *BatchGetUsersRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetUsersRequest) ProtoMessage()    {}
func (*BatchGetUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{1}
}

func (m *BatchGetUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetUsersRequest.Unmarshal(m, b)
}
func (m *BatchGetUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetUsersRequest.Marshal(b, m, deterministic)
}
func (m *BatchGetUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetUsersRequest.Merge(m, src)
}
func (m *BatchGetUsersRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetUsersRequest.Size(m)
}
func (m *BatchGetUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetUsersRequest proto.InternalMessageInfo

func (m *BatchGetUsersRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// The response message for Users.BatchGetUsers.
// Next available tag: 2
type BatchGetUsersResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetUsersResponse) Reset()         { *m = BatchGetUsersResponse{} }
func (m *BatchGetUsersResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetUsersResponse) ProtoMessage()    {}
func (*BatchGetUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{2}
}

func (m *BatchGetUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetUsersResponse.Unmarshal(m, b)
}
func (m *BatchGetUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetUsersResponse.Marshal(b, m, deterministic)
}
func (m *BatchGetUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetUsersResponse.Merge(m, src)
}
func (m *BatchGetUsersResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetUsersResponse.Size(m)
}
func (m *BatchGetUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetUsersResponse proto.InternalMessageInfo

func (m *BatchGetUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

// The request message for Users.UpdateUser.
// Next available tag: 3
type UpdateUserRequest struct {
	// The user's `name` field is used to identify the user to be updated.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The list of fields to be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{3}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUserRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// The request message for Users.StarProject.
// Next available tag: 2
type StarProjectRequest struct {
	// The resource name for the Project to star.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StarProjectRequest) Reset()         { *m = StarProjectRequest{} }
func (m *StarProjectRequest) String() string { return proto.CompactTextString(m) }
func (*StarProjectRequest) ProtoMessage()    {}
func (*StarProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{4}
}

func (m *StarProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarProjectRequest.Unmarshal(m, b)
}
func (m *StarProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarProjectRequest.Marshal(b, m, deterministic)
}
func (m *StarProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarProjectRequest.Merge(m, src)
}
func (m *StarProjectRequest) XXX_Size() int {
	return xxx_messageInfo_StarProjectRequest.Size(m)
}
func (m *StarProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StarProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StarProjectRequest proto.InternalMessageInfo

func (m *StarProjectRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

// The request message for Users.UnStarProject.
// Next available tag: 2
type UnStarProjectRequest struct {
	// The resource name for the Project to unstar.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnStarProjectRequest) Reset()         { *m = UnStarProjectRequest{} }
func (m *UnStarProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UnStarProjectRequest) ProtoMessage()    {}
func (*UnStarProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{5}
}

func (m *UnStarProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnStarProjectRequest.Unmarshal(m, b)
}
func (m *UnStarProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnStarProjectRequest.Marshal(b, m, deterministic)
}
func (m *UnStarProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnStarProjectRequest.Merge(m, src)
}
func (m *UnStarProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UnStarProjectRequest.Size(m)
}
func (m *UnStarProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnStarProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnStarProjectRequest proto.InternalMessageInfo

func (m *UnStarProjectRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

// The request message for Users.ListProjectStars.
// Next available tag: 4
type ListProjectStarsRequest struct {
	// The resource name for the user having stars listed.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return. The service may return fewer than
	// this value.
	// If unspecified, at most 1000 items will be returned.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListProjectStars` call.
	// Provide this to retrieve the subsequent page.
	//
	// When paginating, all other parameters provided to `ListProjectStars` must
	// match the call that provided the page token.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectStarsRequest) Reset()         { *m = ListProjectStarsRequest{} }
func (m *ListProjectStarsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectStarsRequest) ProtoMessage()    {}
func (*ListProjectStarsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{6}
}

func (m *ListProjectStarsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectStarsRequest.Unmarshal(m, b)
}
func (m *ListProjectStarsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectStarsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectStarsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectStarsRequest.Merge(m, src)
}
func (m *ListProjectStarsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectStarsRequest.Size(m)
}
func (m *ListProjectStarsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectStarsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectStarsRequest proto.InternalMessageInfo

func (m *ListProjectStarsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListProjectStarsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListProjectStarsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response message for Users.ListProjectStars.
// Next available tag: 3
type ListProjectStarsResponse struct {
	// Data for each starred project.
	ProjectStars []*ProjectStar `protobuf:"bytes,1,rep,name=project_stars,json=projectStars,proto3" json:"project_stars,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectStarsResponse) Reset()         { *m = ListProjectStarsResponse{} }
func (m *ListProjectStarsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectStarsResponse) ProtoMessage()    {}
func (*ListProjectStarsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c2dd4221542a287, []int{7}
}

func (m *ListProjectStarsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectStarsResponse.Unmarshal(m, b)
}
func (m *ListProjectStarsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectStarsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectStarsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectStarsResponse.Merge(m, src)
}
func (m *ListProjectStarsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectStarsResponse.Size(m)
}
func (m *ListProjectStarsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectStarsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectStarsResponse proto.InternalMessageInfo

func (m *ListProjectStarsResponse) GetProjectStars() []*ProjectStar {
	if m != nil {
		return m.ProjectStars
	}
	return nil
}

func (m *ListProjectStarsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "monorail.v1.GetUserRequest")
	proto.RegisterType((*BatchGetUsersRequest)(nil), "monorail.v1.BatchGetUsersRequest")
	proto.RegisterType((*BatchGetUsersResponse)(nil), "monorail.v1.BatchGetUsersResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "monorail.v1.UpdateUserRequest")
	proto.RegisterType((*StarProjectRequest)(nil), "monorail.v1.StarProjectRequest")
	proto.RegisterType((*UnStarProjectRequest)(nil), "monorail.v1.UnStarProjectRequest")
	proto.RegisterType((*ListProjectStarsRequest)(nil), "monorail.v1.ListProjectStarsRequest")
	proto.RegisterType((*ListProjectStarsResponse)(nil), "monorail.v1.ListProjectStarsResponse")
}

func init() {
	proto.RegisterFile("api/v1/api_proto/users.proto", fileDescriptor_2c2dd4221542a287)
}

var fileDescriptor_2c2dd4221542a287 = []byte{
	// 598 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x6e, 0x13, 0x3d,
	0x14, 0xcd, 0x24, 0x4d, 0xfb, 0xf5, 0xe6, 0x0b, 0x50, 0xab, 0xa5, 0xa3, 0x29, 0x85, 0x60, 0xa0,
	0xb0, 0x40, 0x33, 0x34, 0x2c, 0x58, 0x20, 0xa4, 0x24, 0x12, 0x3f, 0x42, 0xad, 0xa8, 0x52, 0x22,
	0xb1, 0x1b, 0x39, 0xa9, 0x9b, 0x0e, 0x49, 0xc6, 0xc6, 0xf6, 0x44, 0xd0, 0x1d, 0x4b, 0xde, 0x80,
	0xa7, 0x43, 0x7d, 0x0e, 0x56, 0xc8, 0x1e, 0x0f, 0xcc, 0xe4, 0xa7, 0x65, 0xc1, 0x2e, 0x73, 0xef,
	0xb9, 0xe7, 0x1e, 0x1f, 0x1f, 0x07, 0x6e, 0x11, 0x1e, 0x05, 0xd3, 0xfd, 0x80, 0xf0, 0x28, 0xe4,
	0x82, 0x29, 0x16, 0x24, 0x92, 0x0a, 0xe9, 0x9b, 0xdf, 0xa8, 0x36, 0x61, 0x31, 0x13, 0x24, 0x1a,
	0xfb, 0xd3, 0x7d, 0xef, 0xf1, 0x90, 0xb1, 0xe1, 0x98, 0x5a, 0x58, 0xfa, 0xa1, 0xe7, 0x82, 0xd3,
	0x88, 0x8e, 0x4f, 0xc2, 0x3e, 0x3d, 0x23, 0xd3, 0x88, 0x89, 0x74, 0xd4, 0xdb, 0x5b, 0x86, 0x16,
	0x54, 0xb2, 0x44, 0x0c, 0xa8, 0xc5, 0xdd, 0x5b, 0x28, 0x20, 0x64, 0xfd, 0x8f, 0x74, 0xa0, 0xac,
	0x0e, 0x6f, 0xc7, 0xce, 0x9b, 0xaf, 0x7e, 0x72, 0x1a, 0xd0, 0x09, 0x57, 0x5f, 0x6c, 0xb3, 0x31,
	0xdb, 0x4c, 0xf5, 0x4c, 0x88, 0x1c, 0xa5, 0x08, 0xdc, 0x82, 0x6b, 0xaf, 0xa9, 0xea, 0x49, 0x2a,
	0xba, 0xf4, 0x53, 0x42, 0xa5, 0x42, 0x3e, 0xac, 0xc4, 0x64, 0x42, 0x5d, 0xa7, 0xe1, 0x3c, 0x5a,
	0xef, 0x78, 0x17, 0xed, 0xf2, 0xcf, 0xf6, 0x26, 0x20, 0xc2, 0x23, 0x7f, 0x20, 0xfa, 0xc9, 0xd0,
	0x1f, 0xb0, 0x49, 0x60, 0x06, 0x0c, 0x0e, 0xbf, 0x81, 0xcd, 0x0e, 0x51, 0x83, 0x33, 0x4b, 0x23,
	0x33, 0x9e, 0x27, 0x50, 0xd5, 0x7d, 0xe9, 0x3a, 0x8d, 0xca, 0x15, 0x44, 0x29, 0x10, 0xb7, 0x60,
	0x6b, 0x86, 0x49, 0x72, 0x16, 0x4b, 0x8a, 0x1e, 0x42, 0xd5, 0x58, 0x6f, 0xa8, 0x6a, 0xcd, 0x0d,
	0x3f, 0xe7, 0xbd, 0x9f, 0x32, 0x98, 0x3e, 0xfe, 0xee, 0xc0, 0x46, 0x8f, 0x9f, 0x10, 0x45, 0xf3,
	0x27, 0x6a, 0xc3, 0x8a, 0x6e, 0x9b, 0x13, 0x2d, 0x9a, 0xbe, 0xfc, 0x90, 0x7a, 0x14, 0xb5, 0xa0,
	0x96, 0x18, 0x5e, 0xe3, 0x9d, 0x5b, 0x36, 0x4c, 0x9e, 0x9f, 0xda, 0xeb, 0x67, 0xf6, 0xfa, 0xaf,
	0xb4, 0xbd, 0x87, 0x44, 0x8e, 0x3a, 0x95, 0x8b, 0x76, 0xb9, 0x0b, 0xe9, 0x8c, 0x2e, 0xe0, 0x43,
	0x40, 0xc7, 0x8a, 0x88, 0x23, 0xc1, 0xf4, 0xed, 0x65, 0xd2, 0x9e, 0xc1, 0x1a, 0x4f, 0x2b, 0xd6,
	0xef, 0x5d, 0x23, 0x65, 0x1b, 0xb6, 0x8a, 0x52, 0xb2, 0xb1, 0x0c, 0x8d, 0xdf, 0xc1, 0x66, 0x2f,
	0xfe, 0x97, 0x84, 0xdf, 0x1c, 0xd8, 0x3e, 0x88, 0xa4, 0xb2, 0x0d, 0x4d, 0xfd, 0xfb, 0x2a, 0x9b,
	0xb0, 0xca, 0x89, 0xa0, 0xb1, 0xfa, 0x8b, 0x50, 0x58, 0x24, 0xda, 0x81, 0x75, 0x4e, 0x86, 0x34,
	0x94, 0xd1, 0x39, 0x35, 0x7e, 0x55, 0xbb, 0xff, 0xe9, 0xc2, 0x71, 0x74, 0x4e, 0xd1, 0x2e, 0x80,
	0x69, 0x2a, 0x36, 0xa2, 0xb1, 0x5b, 0xd1, 0xa4, 0x5d, 0x03, 0x7f, 0xaf, 0x0b, 0xf8, 0xab, 0x03,
	0xee, 0xbc, 0x16, 0x1b, 0x86, 0x17, 0x50, 0xb7, 0x9a, 0x43, 0xa9, 0x1b, 0x36, 0x14, 0x6e, 0xe1,
	0x5a, 0x73, 0x93, 0xdd, 0xff, 0x79, 0x8e, 0x06, 0xed, 0xc1, 0xf5, 0x98, 0x7e, 0x56, 0x61, 0x6e,
	0x7f, 0xd9, 0xec, 0xaf, 0xeb, 0xf2, 0x51, 0xa6, 0xa1, 0xf9, 0xa3, 0x02, 0x55, 0x93, 0x42, 0xf4,
	0x1c, 0xd6, 0x6c, 0x22, 0xd1, 0x4e, 0x61, 0x49, 0xf1, 0xe1, 0x78, 0xf3, 0xc1, 0xc2, 0x25, 0xf4,
	0x01, 0xea, 0x85, 0x4c, 0xa3, 0xbb, 0x05, 0xd4, 0xa2, 0x97, 0xe3, 0xe1, 0xcb, 0x20, 0xa9, 0x0b,
	0xb8, 0x84, 0xda, 0x00, 0x7f, 0xa2, 0x8e, 0x6e, 0x17, 0x97, 0xcf, 0xbe, 0x81, 0xc5, 0xe2, 0xde,
	0x42, 0x2d, 0x17, 0x21, 0x74, 0xa7, 0x80, 0x99, 0x0f, 0x97, 0xb7, 0xd4, 0x63, 0x5c, 0x42, 0x07,
	0x50, 0x2f, 0x04, 0x72, 0xe6, 0xa0, 0x8b, 0xc2, 0xea, 0xdd, 0x9c, 0x7b, 0x40, 0x2f, 0xf5, 0x9f,
	0x17, 0x2e, 0x21, 0x02, 0x37, 0x66, 0x03, 0x80, 0xee, 0x17, 0x08, 0x97, 0x64, 0xd5, 0x7b, 0x70,
	0x05, 0x2a, 0xf3, 0xaf, 0xbf, 0x6a, 0x96, 0x3e, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x39, 0x78,
	0x07, 0x73, 0xe7, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	// Returns the requested User.
	//
	// Raises:
	//   NOT_FOUND is the user is not found.
	//   INVALID_ARGUMENT if the `name` is invalid.
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	// Returns all of the requested Users.
	//
	// Raises:
	//   NOT_FOUND if any users are not found.
	//   INVALID_ARGUMENT if any `names` are invalid.
	BatchGetUsers(ctx context.Context, in *BatchGetUsersRequest, opts ...grpc.CallOption) (*BatchGetUsersResponse, error)
	// Updates a User.
	//
	// Raises:
	//   NOT_FOUND if the user is not found.
	//   PERMISSION_DENIED if the requester is not allowed to update the user.
	//   INVALID_ARGUMENT if required fields are missing or fields are invalid.
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	// Stars a given project for the requestor.
	//
	// Raises:
	//   NOT_FOUND if the requested project is not found.
	//   INVALID_ARGUMENT if the given `project` is not valid.
	StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*ProjectStar, error)
	// Unstars a given project for the requestor.
	//
	// Raises:
	//   NOT_FOUND if the requested project is not found.
	//   INVALID_ARGUMENT if the given `project` is not valid.
	UnStarProject(ctx context.Context, in *UnStarProjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Lists all of a user's starred projects.
	//
	// Raises:
	//   NOT_FOUND if the requested user is not found.
	//   INVALID_ARGUMENT if the given `parent` is not valid.
	ListProjectStars(ctx context.Context, in *ListProjectStarsRequest, opts ...grpc.CallOption) (*ListProjectStarsResponse, error)
}
type usersPRPCClient struct {
	client *prpc.Client
}

func NewUsersPRPCClient(client *prpc.Client) UsersClient {
	return &usersPRPCClient{client}
}

func (c *usersPRPCClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.client.Call(ctx, "monorail.v1.Users", "GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersPRPCClient) BatchGetUsers(ctx context.Context, in *BatchGetUsersRequest, opts ...grpc.CallOption) (*BatchGetUsersResponse, error) {
	out := new(BatchGetUsersResponse)
	err := c.client.Call(ctx, "monorail.v1.Users", "BatchGetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersPRPCClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.client.Call(ctx, "monorail.v1.Users", "UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersPRPCClient) StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*ProjectStar, error) {
	out := new(ProjectStar)
	err := c.client.Call(ctx, "monorail.v1.Users", "StarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersPRPCClient) UnStarProject(ctx context.Context, in *UnStarProjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.client.Call(ctx, "monorail.v1.Users", "UnStarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersPRPCClient) ListProjectStars(ctx context.Context, in *ListProjectStarsRequest, opts ...grpc.CallOption) (*ListProjectStarsResponse, error) {
	out := new(ListProjectStarsResponse)
	err := c.client.Call(ctx, "monorail.v1.Users", "ListProjectStars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type usersClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersClient(cc grpc.ClientConnInterface) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) BatchGetUsers(ctx context.Context, in *BatchGetUsersRequest, opts ...grpc.CallOption) (*BatchGetUsersResponse, error) {
	out := new(BatchGetUsersResponse)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/BatchGetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*ProjectStar, error) {
	out := new(ProjectStar)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/StarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UnStarProject(ctx context.Context, in *UnStarProjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/UnStarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) ListProjectStars(ctx context.Context, in *ListProjectStarsRequest, opts ...grpc.CallOption) (*ListProjectStarsResponse, error) {
	out := new(ListProjectStarsResponse)
	err := c.cc.Invoke(ctx, "/monorail.v1.Users/ListProjectStars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	// Returns the requested User.
	//
	// Raises:
	//   NOT_FOUND is the user is not found.
	//   INVALID_ARGUMENT if the `name` is invalid.
	GetUser(context.Context, *GetUserRequest) (*User, error)
	// Returns all of the requested Users.
	//
	// Raises:
	//   NOT_FOUND if any users are not found.
	//   INVALID_ARGUMENT if any `names` are invalid.
	BatchGetUsers(context.Context, *BatchGetUsersRequest) (*BatchGetUsersResponse, error)
	// Updates a User.
	//
	// Raises:
	//   NOT_FOUND if the user is not found.
	//   PERMISSION_DENIED if the requester is not allowed to update the user.
	//   INVALID_ARGUMENT if required fields are missing or fields are invalid.
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	// Stars a given project for the requestor.
	//
	// Raises:
	//   NOT_FOUND if the requested project is not found.
	//   INVALID_ARGUMENT if the given `project` is not valid.
	StarProject(context.Context, *StarProjectRequest) (*ProjectStar, error)
	// Unstars a given project for the requestor.
	//
	// Raises:
	//   NOT_FOUND if the requested project is not found.
	//   INVALID_ARGUMENT if the given `project` is not valid.
	UnStarProject(context.Context, *UnStarProjectRequest) (*empty.Empty, error)
	// Lists all of a user's starred projects.
	//
	// Raises:
	//   NOT_FOUND if the requested user is not found.
	//   INVALID_ARGUMENT if the given `parent` is not valid.
	ListProjectStars(context.Context, *ListProjectStarsRequest) (*ListProjectStarsResponse, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) GetUser(ctx context.Context, req *GetUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUsersServer) BatchGetUsers(ctx context.Context, req *BatchGetUsersRequest) (*BatchGetUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetUsers not implemented")
}
func (*UnimplementedUsersServer) UpdateUser(ctx context.Context, req *UpdateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUsersServer) StarProject(ctx context.Context, req *StarProjectRequest) (*ProjectStar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StarProject not implemented")
}
func (*UnimplementedUsersServer) UnStarProject(ctx context.Context, req *UnStarProjectRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnStarProject not implemented")
}
func (*UnimplementedUsersServer) ListProjectStars(ctx context.Context, req *ListProjectStarsRequest) (*ListProjectStarsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjectStars not implemented")
}

func RegisterUsersServer(s prpc.Registrar, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_BatchGetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).BatchGetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/BatchGetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).BatchGetUsers(ctx, req.(*BatchGetUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_StarProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StarProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).StarProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/StarProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).StarProject(ctx, req.(*StarProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UnStarProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnStarProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UnStarProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/UnStarProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UnStarProject(ctx, req.(*UnStarProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_ListProjectStars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectStarsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).ListProjectStars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Users/ListProjectStars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).ListProjectStars(ctx, req.(*ListProjectStarsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.v1.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Users_GetUser_Handler,
		},
		{
			MethodName: "BatchGetUsers",
			Handler:    _Users_BatchGetUsers_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Users_UpdateUser_Handler,
		},
		{
			MethodName: "StarProject",
			Handler:    _Users_StarProject_Handler,
		},
		{
			MethodName: "UnStarProject",
			Handler:    _Users_UnStarProject_Handler,
		},
		{
			MethodName: "ListProjectStars",
			Handler:    _Users_ListProjectStars_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/api_proto/users.proto",
}
