// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/scheduler/task.proto

package scheduler

import (
	fmt "fmt"
	vector "infra/qscheduler/qslib/types/vector"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TaskRequest represents a requested task in the queue, and refers to the
// quota account to run it against. This representation intentionally
// excludes most of the details of a Swarming task request.
type TaskRequest struct {
	// AccountId is the id of the account that this request charges to.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnqueueTime is the time at which the request was enqueued.
	EnqueueTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=enqueue_time,json=enqueueTime,proto3" json:"enqueue_time,omitempty"`
	// The set of Provisionable Labels for this task.
	Labels               []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRequest) Reset()         { *m = TaskRequest{} }
func (m *TaskRequest) String() string { return proto.CompactTextString(m) }
func (*TaskRequest) ProtoMessage()    {}
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2be5499420917688, []int{0}
}

func (m *TaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRequest.Unmarshal(m, b)
}
func (m *TaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRequest.Marshal(b, m, deterministic)
}
func (m *TaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRequest.Merge(m, src)
}
func (m *TaskRequest) XXX_Size() int {
	return xxx_messageInfo_TaskRequest.Size(m)
}
func (m *TaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRequest proto.InternalMessageInfo

func (m *TaskRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *TaskRequest) GetEnqueueTime() *timestamp.Timestamp {
	if m != nil {
		return m.EnqueueTime
	}
	return nil
}

func (m *TaskRequest) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// TaskRun represents a task that has been assigned to a worker and is
// now running.
type TaskRun struct {
	// Cost is the total cost that has been incurred on this task while running.
	Cost *vector.Vector `protobuf:"bytes,1,opt,name=cost,proto3" json:"cost,omitempty"`
	// Request is the request that this running task corresponds to.
	Request *TaskRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// RequestId is the request id of the request that this running task
	// corresponds to.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Priority is the current priority level of the running task.
	Priority             int32    `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRun) Reset()         { *m = TaskRun{} }
func (m *TaskRun) String() string { return proto.CompactTextString(m) }
func (*TaskRun) ProtoMessage()    {}
func (*TaskRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_2be5499420917688, []int{1}
}

func (m *TaskRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRun.Unmarshal(m, b)
}
func (m *TaskRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRun.Marshal(b, m, deterministic)
}
func (m *TaskRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRun.Merge(m, src)
}
func (m *TaskRun) XXX_Size() int {
	return xxx_messageInfo_TaskRun.Size(m)
}
func (m *TaskRun) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRun.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRun proto.InternalMessageInfo

func (m *TaskRun) GetCost() *vector.Vector {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *TaskRun) GetRequest() *TaskRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *TaskRun) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TaskRun) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func init() {
	proto.RegisterType((*TaskRequest)(nil), "scheduler.TaskRequest")
	proto.RegisterType((*TaskRun)(nil), "scheduler.TaskRun")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/scheduler/task.proto", fileDescriptor_2be5499420917688)
}

var fileDescriptor_2be5499420917688 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x3f, 0x6f, 0xb3, 0x30,
	0x10, 0x87, 0xe5, 0x37, 0x79, 0x93, 0x62, 0xaa, 0x0e, 0x1e, 0x22, 0x84, 0x54, 0x15, 0x31, 0x21,
	0x55, 0xb2, 0xa3, 0x74, 0xee, 0x07, 0xc8, 0x6a, 0x45, 0x5d, 0x23, 0x03, 0x97, 0xd4, 0x0a, 0xc1,
	0xe0, 0x3f, 0x95, 0x32, 0xf7, 0x5b, 0xf4, 0xd3, 0x56, 0x18, 0x43, 0xbb, 0x74, 0x3a, 0xee, 0x77,
	0x87, 0xef, 0x79, 0xf0, 0xb3, 0x6c, 0x4f, 0x5a, 0xb0, 0xde, 0x54, 0xef, 0x50, 0xbb, 0x06, 0x34,
	0xeb, 0x4d, 0x23, 0x4b, 0xf6, 0xd3, 0x5b, 0x61, 0x2e, 0xb4, 0xd3, 0xca, 0x2a, 0x12, 0xcd, 0x69,
	0xfa, 0x74, 0x56, 0xea, 0xdc, 0x00, 0xf3, 0x83, 0xd2, 0x9d, 0x98, 0x95, 0x57, 0x30, 0x56, 0x5c,
	0xbb, 0x71, 0x37, 0xdd, 0xfe, 0xf1, 0xb0, 0xbd, 0x75, 0x60, 0xd8, 0x07, 0x54, 0x56, 0xe9, 0x50,
	0xc6, 0x3f, 0xf2, 0x4f, 0x84, 0xe3, 0x83, 0x30, 0x17, 0x0e, 0xbd, 0x03, 0x63, 0xc9, 0x23, 0xc6,
	0xa2, 0xaa, 0x94, 0x6b, 0xed, 0x51, 0xd6, 0x09, 0xca, 0x50, 0x11, 0xf1, 0x28, 0x24, 0xfb, 0x9a,
	0xbc, 0xe2, 0x7b, 0x68, 0x7b, 0x07, 0x0e, 0x8e, 0xc3, 0xed, 0xe4, 0x5f, 0x86, 0x8a, 0x78, 0x97,
	0xd2, 0x11, 0x8c, 0x4e, 0x60, 0xf4, 0x30, 0x81, 0xf1, 0x38, 0xec, 0x0f, 0x09, 0xd9, 0xe0, 0x55,
	0x23, 0x4a, 0x68, 0x4c, 0xb2, 0xc8, 0x16, 0x45, 0xc4, 0x43, 0x97, 0x7f, 0x21, 0xbc, 0xf6, 0x14,
	0xae, 0x25, 0x39, 0x5e, 0x56, 0xca, 0x58, 0x7f, 0x3b, 0xde, 0x3d, 0xd0, 0x80, 0xfb, 0xe6, 0x0b,
	0xf7, 0x33, 0xb2, 0xc5, 0x6b, 0x3d, 0x02, 0x07, 0x82, 0x0d, 0x9d, 0x95, 0xe9, 0x2f, 0x1d, 0x3e,
	0xad, 0x0d, 0x5e, 0xe1, 0x73, 0xf0, 0x5a, 0x8c, 0x5e, 0x21, 0xd9, 0xd7, 0x24, 0xc5, 0x77, 0x9d,
	0x96, 0x4a, 0x4b, 0x7b, 0x4b, 0x96, 0x19, 0x2a, 0xfe, 0xf3, 0xb9, 0x2f, 0x57, 0xde, 0xea, 0xe5,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x57, 0x1d, 0xd2, 0xb6, 0x01, 0x00, 0x00,
}
