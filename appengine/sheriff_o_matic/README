# INSTALLING NODE/NPM/BOWER

The version of npm in apt-get is too old for bower.
    # Ensure ~/local/bin is on $PATH
    $ mkdir ~/local
    $ export PATH="$HOME/local/bin:$PATH"
    # Install Node
    $ mkdir -p /tmp/node-install && cd /tmp/node-install
    $ curl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1
    $ ./configure --prefix=~/local
    $ make install -j
    # Install NPM
    $ curl https://www.npmjs.org/install.sh | sh

Eventually, we will ship hermetic copies of these binaries along with this repo.
Bower is automatically installed by the makefile.

# SYNCING DEPENDENCIES

This app relies on the correct dependencies being installed via the top-level
DEPS file, which includes a dependency on

    https://chromium.googlesource.com/infra/third_party/npm_modules

and having the appropriate subdirectories of that repo symlinked here as
node_modules and bower_components.

In order to update dependencies, update the version of the packages checked
into that repo, and then update the pinned DEP in this repo.

# RUNNING SHERIFF-O-MATIC

sheriff-o-matic must be run from the Google App Engine server, available here:
https://cloud.google.com/appengine/downloads

    $ cd appengine_apps/sheriff_o_matic
    $ dev_appserver.py .

Then load: http://localhost:8080/

# TESTING

From the command line:

    $ cd appengine_apps/sheriff_o_matic
    $ make test

This will launch karma, run the tests and watch the source files for changes. To
run once and exit, use:

    $ make single-test

Or, you can start karma manually:

    $ cd appengine_apps/sheriff_o_matic
    $ ./node_modules/karma/bin/karma start

You can shorten this command to 'karma start' if you run
'npm install -g karma-cli'.

To run a single test or test suite, change the test code to use describe.only
or it.only as appropriate. You can use the chromium dev tools inside the
Chrome instance that karma starts up in order to set breakpoints and otherwise
debug.

# PUSHING

In sheriff_o_matic:

0. npm install vulcanize (if you haven't done this before)
1. make deploy-prod (or deploy-staging) 
2. Go to appengine.google.com and select the sheriff-o-matic app.
3. Click on the version tab
4. Make the new version the default

The versioning is so that we can easily roll back if there's something
wrong with the push and so we can know what we've pushed.

If you're unsure about whether you might have broken things, before
step 4, you can click on the link for that version to see that
version of the server before you make it the default.

# LIBRARIES

sugar: Provides generic syntactic sugar for JavaScript, mostly by extending
       native object prototypes.

karma: test runner. Runs the unit tests in an instance of Chrome and pipes the
        results to the command line. By default, it watches for changes to files
        and will automatically re-run the tests. To run once and exit, use
        'karma start --single-run' or 'make single-test'.

mocha: testing framework. Provides good asynchronous and synchronous test
       support. Tests run serially, so exceptions are reported for the right
       test case.

chai:  assertion library.
