[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--spec-path",
      "cache_dir = '[CACHE]/git'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'infra', 'url': 'https://chromium.googlesource.com/infra/infra.git'}]",
      "--revision_mapping_file",
      "{\"got_revision\": \"infra\"}",
      "--git-cache-dir",
      "[CACHE]/git",
      "--cleanup-dir",
      "[CLEANUP]/bot_update",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "infra@HEAD"
    ],
    "env_prefixes": {
      "PATH": [
        "RECIPE_PACKAGE_REPO[depot_tools]"
      ]
    },
    "infra_step": true,
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"infra\": \"HEAD\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"infra\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/infra.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"5e03a58dc0850e5137a8ebbce29610670c756aed\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"infra\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"5e03a58dc0850e5137a8ebbce29610670c756aed\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#197293}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"infra\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"source_manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"infra\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"repo_url\": \"https://fake.org/infra.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"revision\": \"5e03a58dc0850e5137a8ebbce29610670c756aed\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"version\": 0@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"5e03a58dc0850e5137a8ebbce29610670c756aed\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#197293}\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/gclient.py",
      "runhooks"
    ],
    "cwd": "[START_DIR]/infra",
    "env_suffixes": {
      "PATH": [
        "RECIPE_PACKAGE_REPO[depot_tools]"
      ]
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/packages",
      "-ensure-file",
      "dart/browsers/chrome/linux-amd64 b6b434ed592da55513d813b2cfb3422008fb280d\ninfra/nodejs/nodejs/linux-amd64 node_version:8.9.4\ninfra/testing/wct/linux-amd64 prod",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"b6b434ed592da55513d813b2cfb3422008fb280d\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"dart/browsers/chrome/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-node_version:8.9\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/nodejs/nodejs/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-prod------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/testing/wct/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/packages/chrome/chrome",
      "--version"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Print chrome version"
  },
  {
    "cmd": [
      "[START_DIR]/packages/bin/npm",
      "install",
      "-g",
      "bower"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower"
  },
  {
    "cmd": [
      "bower",
      "install"
    ],
    "cwd": "[START_DIR]/infra/crdx/chopsui",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower packages"
  },
  {
    "cmd": [
      "xvfb-run",
      "-a",
      "[START_DIR]/packages/wct",
      "--base",
      "[START_DIR]/infra/crdx/chopsui",
      "--chrome",
      "[START_DIR]/packages/chrome/chrome",
      "--prefix",
      "test/"
    ],
    "cwd": "[START_DIR]/infra/crdx/chopsui",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "ChOpsUI WCT Tests"
  },
  {
    "cmd": [
      "[START_DIR]/packages/chrome/chrome",
      "--version"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Print chrome version (2)"
  },
  {
    "cmd": [
      "[START_DIR]/packages/bin/npm",
      "install",
      "--no-save"
    ],
    "cwd": "[START_DIR]/infra/appengine/monorail",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install node modules"
  },
  {
    "cmd": [
      "[START_DIR]/packages/bin/npm",
      "install",
      "-g",
      "bower"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower (2)"
  },
  {
    "cmd": [
      "bower",
      "install"
    ],
    "cwd": "[START_DIR]/infra/appengine/monorail",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower packages (2)"
  },
  {
    "cmd": [
      "xvfb-run",
      "-a",
      "[START_DIR]/packages/wct",
      "--base",
      "[START_DIR]/infra/appengine/monorail",
      "--chrome",
      "[START_DIR]/packages/chrome/chrome",
      "--prefix",
      "elements/test"
    ],
    "cwd": "[START_DIR]/infra/appengine/monorail",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Monorail WCT Tests"
  },
  {
    "cmd": [
      "[START_DIR]/packages/chrome/chrome",
      "--version"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Print chrome version (3)"
  },
  {
    "cmd": [
      "[START_DIR]/packages/bin/npm",
      "install",
      "-g",
      "bower"
    ],
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower (3)"
  },
  {
    "cmd": [
      "bower",
      "install"
    ],
    "cwd": "[START_DIR]/infra/go/src/infra/appengine/sheriff-o-matic/frontend",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "Install bower packages (3)"
  },
  {
    "cmd": [
      "xvfb-run",
      "-a",
      "[START_DIR]/packages/wct",
      "--base",
      "[START_DIR]/infra/go/src/infra/appengine/sheriff-o-matic/frontend",
      "--chrome",
      "[START_DIR]/packages/chrome/chrome",
      "--prefix",
      "test/"
    ],
    "cwd": "[START_DIR]/infra/go/src/infra/appengine/sheriff-o-matic/frontend",
    "env": {
      "PATH": "[START_DIR]/packages/bin:<PATH>"
    },
    "name": "SoM WCT Tests"
  },
  {
    "jsonResult": null,
    "name": "$result"
  }
]