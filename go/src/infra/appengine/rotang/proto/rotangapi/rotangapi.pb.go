// Definitions for the RotaNG OncallInfo Service.
// This API can be used to query information about
// who's currently oncall or for an arbitrary time
// range.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: infra/appengine/rotang/proto/rotangapi/rotangapi.proto

package rotangapi

import (
	prpc "go.chromium.org/luci/grpc/prpc"

	context "context"

	proto "github.com/golang/protobuf/proto"

	duration "github.com/golang/protobuf/ptypes/duration"

	timestamp "github.com/golang/protobuf/ptypes/timestamp"

	grpc "google.golang.org/grpc"

	codes "google.golang.org/grpc/codes"

	status "google.golang.org/grpc/status"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"

	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	reflect "reflect"

	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// OncallRequest contains the name of the rotation of interest.
type OncallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is a required field containing the name of the rotation
	// of interest.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OncallRequest) Reset() {
	*x = OncallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OncallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OncallRequest) ProtoMessage() {}

func (x *OncallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OncallRequest.ProtoReflect.Descriptor instead.
func (*OncallRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{0}
}

func (x *OncallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// OncallResponse contains the current on-callers for a rotation.
type OncallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// shift contains the current shift entry for the specified rotation.
	Shift *ShiftEntry `protobuf:"bytes,1,opt,name=shift,proto3" json:"shift,omitempty"`
	// tz_consider indicates if the rotation generator considers the TimeZone
	// of members when scheduling memmbers.
	// A rotation using a Generator considering timezones will generatate a shift
	// with one on-caller per TZ of their members.
	// Eg. if a rotation have members:
	//
	// Australia/Sydney:
	//  syd1@oncall.com
	//  syd2@oncall.com
	// EST
	//  est1@oncall.com
	//  est2@oncall.com
	// US/Pacific
	//  mtv1@oncall.com
	//  mtv2@oncall.com
	// UTC
	//  utc1@oncall.com
	//  utc2@oncall.com
	//
	// A rotation using a tz_consider generator would generate a shift with one
	// member from each TZ.
	//   syd1@oncall.com , est1@oncall.com , mtv1@oncall.com and utc1@oncall.com
	TzConsider bool `protobuf:"varint,2,opt,name=tz_consider,json=tzConsider,proto3" json:"tz_consider,omitempty"`
}

func (x *OncallResponse) Reset() {
	*x = OncallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OncallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OncallResponse) ProtoMessage() {}

func (x *OncallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OncallResponse.ProtoReflect.Descriptor instead.
func (*OncallResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{1}
}

func (x *OncallResponse) GetShift() *ShiftEntry {
	if x != nil {
		return x.Shift
	}
	return nil
}

func (x *OncallResponse) GetTzConsider() bool {
	if x != nil {
		return x.TzConsider
	}
	return false
}

// ListRotationsRequest is used to get a list of all configured rotations.
type ListRotationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRotationsRequest) Reset() {
	*x = ListRotationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRotationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRotationsRequest) ProtoMessage() {}

func (x *ListRotationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRotationsRequest.ProtoReflect.Descriptor instead.
func (*ListRotationsRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{2}
}

// ListRotationsResponse contains the configured rotations.
type ListRotationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotations []*Rotation `protobuf:"bytes,1,rep,name=rotations,proto3" json:"rotations,omitempty"`
}

func (x *ListRotationsResponse) Reset() {
	*x = ListRotationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRotationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRotationsResponse) ProtoMessage() {}

func (x *ListRotationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRotationsResponse.ProtoReflect.Descriptor instead.
func (*ListRotationsResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{3}
}

func (x *ListRotationsResponse) GetRotations() []*Rotation {
	if x != nil {
		return x.Rotations
	}
	return nil
}

// ShiftsRequest defines shifts of interest to fetch.
type ShiftsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is a required field containing the rotation name of interest.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// start contains the beginning of the time range of interest.
	// Leaving this field empty will fetch shifts from the beginning of time.
	Start *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end contains the end of the time range of interest.
	// Leaving this field empty will fetch shift to the end of time.
	End *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ShiftsRequest) Reset() {
	*x = ShiftsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShiftsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShiftsRequest) ProtoMessage() {}

func (x *ShiftsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShiftsRequest.ProtoReflect.Descriptor instead.
func (*ShiftsRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{4}
}

func (x *ShiftsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShiftsRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ShiftsRequest) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// ShiftsResponse contains the shifts requested by ShiftsRequest.
type ShiftsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shifts []*ShiftEntry `protobuf:"bytes,1,rep,name=shifts,proto3" json:"shifts,omitempty"`
}

func (x *ShiftsResponse) Reset() {
	*x = ShiftsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShiftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShiftsResponse) ProtoMessage() {}

func (x *ShiftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShiftsResponse.ProtoReflect.Descriptor instead.
func (*ShiftsResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{5}
}

func (x *ShiftsResponse) GetShifts() []*ShiftEntry {
	if x != nil {
		return x.Shifts
	}
	return nil
}

// MigrationsInfoRequest identifies the rotation information to fetch
// along with a timerange for shifts of interest.
type MigrationInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is a required field containing the rotation name of interest.
	// Requester needs to be an owner of the requested rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// start contains the beginning of the time range of interest.
	// Leaving this field empty will fetch shifts from the beginning
	// of time.
	Start *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end contains the end of the time range of interest.
	// Leaving this field empty will fetch shifts to the end of time.
	End *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *MigrationInfoRequest) Reset() {
	*x = MigrationInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationInfoRequest) ProtoMessage() {}

func (x *MigrationInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationInfoRequest.ProtoReflect.Descriptor instead.
func (*MigrationInfoRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{6}
}

func (x *MigrationInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MigrationInfoRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *MigrationInfoRequest) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// MigrationInfoResponse contain information needed for migrating a
// RotaNG rotation to another scheduler.
type MigrationInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The calendar currently configured for this rotation.
	Calendar string `protobuf:"bytes,2,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// owners contain the email addresses of the rotation owners.
	Owners []string `protobuf:"bytes,3,rep,name=owners,proto3" json:"owners,omitempty"`
	// tz_consider indicates that this rotation is using a genarator
	// that is TZ aware.
	TzConsider bool `protobuf:"varint,4,opt,name=tz_consider,json=tzConsider,proto3" json:"tz_consider,omitempty"`
	// members lists all members of the rotation.
	Members []*TZGroup `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	// shifts lists shifts in the requested range.
	Shifts []*ShiftEntry `protobuf:"bytes,6,rep,name=shifts,proto3" json:"shifts,omitempty"`
}

func (x *MigrationInfoResponse) Reset() {
	*x = MigrationInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationInfoResponse) ProtoMessage() {}

func (x *MigrationInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationInfoResponse.ProtoReflect.Descriptor instead.
func (*MigrationInfoResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{7}
}

func (x *MigrationInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MigrationInfoResponse) GetCalendar() string {
	if x != nil {
		return x.Calendar
	}
	return ""
}

func (x *MigrationInfoResponse) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *MigrationInfoResponse) GetTzConsider() bool {
	if x != nil {
		return x.TzConsider
	}
	return false
}

func (x *MigrationInfoResponse) GetMembers() []*TZGroup {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MigrationInfoResponse) GetShifts() []*ShiftEntry {
	if x != nil {
		return x.Shifts
	}
	return nil
}

// TZGroup represents a group of members in a particular business group.
type TZGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// business_group identifies the business group the members belong to.
	// If the rotation don't use a timezone aware generator there will
	// be a single group named "default".
	BusinessGroup string      `protobuf:"bytes,1,opt,name=business_group,json=businessGroup,proto3" json:"business_group,omitempty"`
	Members       []*OnCaller `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *TZGroup) Reset() {
	*x = TZGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TZGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TZGroup) ProtoMessage() {}

func (x *TZGroup) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TZGroup.ProtoReflect.Descriptor instead.
func (*TZGroup) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{8}
}

func (x *TZGroup) GetBusinessGroup() string {
	if x != nil {
		return x.BusinessGroup
	}
	return ""
}

func (x *TZGroup) GetMembers() []*OnCaller {
	if x != nil {
		return x.Members
	}
	return nil
}

// Shift defines a shift configuration.
// RotaNG supports rotations with multiple shifts.
// Eg. follow-the-sun configurations:
// Shift:
//   SYD: 8hours
//   MTV: 8hours
//   EY:  8hours.
type ShiftConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Entries  []*ShiftEntry      `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ShiftConfiguration) Reset() {
	*x = ShiftConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShiftConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShiftConfiguration) ProtoMessage() {}

func (x *ShiftConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShiftConfiguration.ProtoReflect.Descriptor instead.
func (*ShiftConfiguration) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{9}
}

func (x *ShiftConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShiftConfiguration) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *ShiftConfiguration) GetEntries() []*ShiftEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// ShiftEntry defines a single shift.
type ShiftEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the Shift configuration this entry belongs to.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// oncallers is the email addresses of the members on-call
	// for this shift.
	Oncallers []*OnCaller `protobuf:"bytes,2,rep,name=oncallers,proto3" json:"oncallers,omitempty"`
	// start is the start of this shift.
	Start *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	// end is the end of the shift.
	End *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// comment contains an optional comment about this shift.
	// Eg. Information about a shift swap.
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// event_id contains the Google Calendar Event ID of this shift.
	// Only enabled rotations will have event_id's.
	EventId string `protobuf:"bytes,6,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *ShiftEntry) Reset() {
	*x = ShiftEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShiftEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShiftEntry) ProtoMessage() {}

func (x *ShiftEntry) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShiftEntry.ProtoReflect.Descriptor instead.
func (*ShiftEntry) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{10}
}

func (x *ShiftEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShiftEntry) GetOncallers() []*OnCaller {
	if x != nil {
		return x.Oncallers
	}
	return nil
}

func (x *ShiftEntry) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ShiftEntry) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ShiftEntry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ShiftEntry) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// OnCaller contains one member on-call for a shift.
type OnCaller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tz    string `protobuf:"bytes,3,opt,name=tz,proto3" json:"tz,omitempty"`
}

func (x *OnCaller) Reset() {
	*x = OnCaller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnCaller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnCaller) ProtoMessage() {}

func (x *OnCaller) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnCaller.ProtoReflect.Descriptor instead.
func (*OnCaller) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{11}
}

func (x *OnCaller) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OnCaller) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnCaller) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

// Rotation contains the Rotation information returned by the List
// RPC call.
type Rotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name contain the name of the rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// enabled signifies if the rotation is enabled.
	// A rotation needs to be enabled to create/modify Google calendar
	// events and sending e-mails.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// external signifies if this rotation is external.
	// An external rotation fetches shifts from a shared calendar.
	// Commonly used to get G3 oncall information in to RotaNG.
	External bool `protobuf:"varint,3,opt,name=external,proto3" json:"external,omitempty"`
}

func (x *Rotation) Reset() {
	*x = Rotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rotation) ProtoMessage() {}

func (x *Rotation) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rotation.ProtoReflect.Descriptor instead.
func (*Rotation) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{12}
}

func (x *Rotation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rotation) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Rotation) GetExternal() bool {
	if x != nil {
		return x.External
	}
	return false
}

// CreateExternal request contain the information needed to create an external
// rotation.
type CreateExternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is a required field naming the new rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// calendar is a required field specifying the Google calendar ID
	// of the rotation calendar.
	// Service account `rota-ng@appspot.gserviceaccount.com` need to have permissions
	// to read events from the calendar.
	Calendar string `protobuf:"bytes,2,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// owners_email is a required field containing a list of owners e-mail addresses.
	OwnersEmails []string `protobuf:"bytes,3,rep,name=owners_emails,json=ownersEmails,proto3" json:"owners_emails,omitempty"`
	// description is an optional field describing the rotation.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// match is a required field matching the Summary of the event.
	// Eg. from the CCI-Trooper rotation.
	//
	// With summary of an event looks something like this.
	//
	//  `CCI-Trooper: primary, secondary`
	//
	// The match filed should be set to `CCI-Trooper:`
	Match string `protobuf:"bytes,5,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *CreateExternalRequest) Reset() {
	*x = CreateExternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalRequest) ProtoMessage() {}

func (x *CreateExternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalRequest.ProtoReflect.Descriptor instead.
func (*CreateExternalRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{13}
}

func (x *CreateExternalRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateExternalRequest) GetCalendar() string {
	if x != nil {
		return x.Calendar
	}
	return ""
}

func (x *CreateExternalRequest) GetOwnersEmails() []string {
	if x != nil {
		return x.OwnersEmails
	}
	return nil
}

func (x *CreateExternalRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateExternalRequest) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

// CreateExternalResponse is the result of a CreateRequest.
type CreateExternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateExternalResponse) Reset() {
	*x = CreateExternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalResponse) ProtoMessage() {}

func (x *CreateExternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalResponse.ProtoReflect.Descriptor instead.
func (*CreateExternalResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{14}
}

type DeleteExternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteExternalRequest) Reset() {
	*x = DeleteExternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExternalRequest) ProtoMessage() {}

func (x *DeleteExternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExternalRequest.ProtoReflect.Descriptor instead.
func (*DeleteExternalRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteExternalRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteExternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExternalResponse) Reset() {
	*x = DeleteExternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExternalResponse) ProtoMessage() {}

func (x *DeleteExternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExternalResponse.ProtoReflect.Descriptor instead.
func (*DeleteExternalResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{16}
}

type RotationMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RotationMembersRequest) Reset() {
	*x = RotationMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotationMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotationMembersRequest) ProtoMessage() {}

func (x *RotationMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotationMembersRequest.ProtoReflect.Descriptor instead.
func (*RotationMembersRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{17}
}

func (x *RotationMembersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RotationMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation string        `protobuf:"bytes,1,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Members  []*MemberInfo `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *RotationMembersResponse) Reset() {
	*x = RotationMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotationMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotationMembersResponse) ProtoMessage() {}

func (x *RotationMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotationMembersResponse.ProtoReflect.Descriptor instead.
func (*RotationMembersResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{18}
}

func (x *RotationMembersResponse) GetRotation() string {
	if x != nil {
		return x.Rotation
	}
	return ""
}

func (x *RotationMembersResponse) GetMembers() []*MemberInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member       *OnCaller     `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	OncallShifts []*ShiftEntry `protobuf:"bytes,3,rep,name=oncall_shifts,json=oncallShifts,proto3" json:"oncall_shifts,omitempty"`
	Ooo          []*OOO        `protobuf:"bytes,4,rep,name=ooo,proto3" json:"ooo,omitempty"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{19}
}

func (x *MemberInfo) GetMember() *OnCaller {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberInfo) GetOncallShifts() []*ShiftEntry {
	if x != nil {
		return x.OncallShifts
	}
	return nil
}

func (x *MemberInfo) GetOoo() []*OOO {
	if x != nil {
		return x.Ooo
	}
	return nil
}

type OOO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Comment string               `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *OOO) Reset() {
	*x = OOO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OOO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OOO) ProtoMessage() {}

func (x *OOO) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OOO.ProtoReflect.Descriptor instead.
func (*OOO) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{20}
}

func (x *OOO) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *OOO) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *OOO) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type MakeAllMembersOwnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MakeAllMembersOwnersRequest) Reset() {
	*x = MakeAllMembersOwnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeAllMembersOwnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeAllMembersOwnersRequest) ProtoMessage() {}

func (x *MakeAllMembersOwnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeAllMembersOwnersRequest.ProtoReflect.Descriptor instead.
func (*MakeAllMembersOwnersRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{21}
}

func (x *MakeAllMembersOwnersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MakeAllMembersOwnersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MakeAllMembersOwnersResponse) Reset() {
	*x = MakeAllMembersOwnersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeAllMembersOwnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeAllMembersOwnersResponse) ProtoMessage() {}

func (x *MakeAllMembersOwnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeAllMembersOwnersResponse.ProtoReflect.Descriptor instead.
func (*MakeAllMembersOwnersResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP(), []int{22}
}

var File_infra_appengine_rotang_proto_rotangapi_rotangapi_proto protoreflect.FileDescriptor

var file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDesc = []byte{
	0x0a, 0x36, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0d, 0x4f, 0x6e, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x4f, 0x6e, 0x63,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x74,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x7a, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74,
	0x7a, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x4a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x0d, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x22, 0x3f, 0x0a, 0x0e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x7a, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x7a, 0x43, 0x6f, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x5a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x68, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x73, 0x22, 0x5f, 0x0a, 0x07, 0x54, 0x5a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69,
	0x2e, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x53, 0x68, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x66, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x6e, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f,
	0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x09, 0x6f, 0x6e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x44, 0x0a, 0x08, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x7a, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x7a, 0x22, 0x54, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0xa4, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x66, 0x0a, 0x17, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x74,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x74, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x6f, 0x6e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6f, 0x6e, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x6f, 0x6f, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x4f, 0x4f, 0x52,
	0x03, 0x6f, 0x6f, 0x6f, 0x22, 0x7f, 0x0a, 0x03, 0x4f, 0x4f, 0x4f, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x1b, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x61, 0x6b, 0x65,
	0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xba, 0x02, 0x0a, 0x0a, 0x4f, 0x6e, 0x63,
	0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x06, 0x4f, 0x6e, 0x63, 0x61, 0x6c,
	0x6c, 0x12, 0x18, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x6f,
	0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x72, 0x6f, 0x74, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x6f, 0x74,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x06, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x68, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x0d, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xc1, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x57, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x72, 0x6f, 0x74, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x6f,
	0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x20, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd4, 0x01, 0x0a, 0x0b, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x5a, 0x0a, 0x0f, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x72,
	0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e,
	0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6c,
	0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x6f, 0x74, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescOnce sync.Once
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescData = file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDesc
)

func file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescGZIP() []byte {
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescOnce.Do(func() {
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescData)
	})
	return file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDescData
}

var file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_goTypes = []interface{}{
	(*OncallRequest)(nil),                // 0: rotangapi.OncallRequest
	(*OncallResponse)(nil),               // 1: rotangapi.OncallResponse
	(*ListRotationsRequest)(nil),         // 2: rotangapi.ListRotationsRequest
	(*ListRotationsResponse)(nil),        // 3: rotangapi.ListRotationsResponse
	(*ShiftsRequest)(nil),                // 4: rotangapi.ShiftsRequest
	(*ShiftsResponse)(nil),               // 5: rotangapi.ShiftsResponse
	(*MigrationInfoRequest)(nil),         // 6: rotangapi.MigrationInfoRequest
	(*MigrationInfoResponse)(nil),        // 7: rotangapi.MigrationInfoResponse
	(*TZGroup)(nil),                      // 8: rotangapi.TZGroup
	(*ShiftConfiguration)(nil),           // 9: rotangapi.ShiftConfiguration
	(*ShiftEntry)(nil),                   // 10: rotangapi.ShiftEntry
	(*OnCaller)(nil),                     // 11: rotangapi.OnCaller
	(*Rotation)(nil),                     // 12: rotangapi.Rotation
	(*CreateExternalRequest)(nil),        // 13: rotangapi.CreateExternalRequest
	(*CreateExternalResponse)(nil),       // 14: rotangapi.CreateExternalResponse
	(*DeleteExternalRequest)(nil),        // 15: rotangapi.DeleteExternalRequest
	(*DeleteExternalResponse)(nil),       // 16: rotangapi.DeleteExternalResponse
	(*RotationMembersRequest)(nil),       // 17: rotangapi.RotationMembersRequest
	(*RotationMembersResponse)(nil),      // 18: rotangapi.RotationMembersResponse
	(*MemberInfo)(nil),                   // 19: rotangapi.MemberInfo
	(*OOO)(nil),                          // 20: rotangapi.OOO
	(*MakeAllMembersOwnersRequest)(nil),  // 21: rotangapi.MakeAllMembersOwnersRequest
	(*MakeAllMembersOwnersResponse)(nil), // 22: rotangapi.MakeAllMembersOwnersResponse
	(*timestamp.Timestamp)(nil),          // 23: google.protobuf.Timestamp
	(*duration.Duration)(nil),            // 24: google.protobuf.Duration
}
var file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_depIdxs = []int32{
	10, // 0: rotangapi.OncallResponse.shift:type_name -> rotangapi.ShiftEntry
	12, // 1: rotangapi.ListRotationsResponse.rotations:type_name -> rotangapi.Rotation
	23, // 2: rotangapi.ShiftsRequest.start:type_name -> google.protobuf.Timestamp
	23, // 3: rotangapi.ShiftsRequest.end:type_name -> google.protobuf.Timestamp
	10, // 4: rotangapi.ShiftsResponse.shifts:type_name -> rotangapi.ShiftEntry
	23, // 5: rotangapi.MigrationInfoRequest.start:type_name -> google.protobuf.Timestamp
	23, // 6: rotangapi.MigrationInfoRequest.end:type_name -> google.protobuf.Timestamp
	8,  // 7: rotangapi.MigrationInfoResponse.members:type_name -> rotangapi.TZGroup
	10, // 8: rotangapi.MigrationInfoResponse.shifts:type_name -> rotangapi.ShiftEntry
	11, // 9: rotangapi.TZGroup.members:type_name -> rotangapi.OnCaller
	24, // 10: rotangapi.ShiftConfiguration.duration:type_name -> google.protobuf.Duration
	10, // 11: rotangapi.ShiftConfiguration.entries:type_name -> rotangapi.ShiftEntry
	11, // 12: rotangapi.ShiftEntry.oncallers:type_name -> rotangapi.OnCaller
	23, // 13: rotangapi.ShiftEntry.start:type_name -> google.protobuf.Timestamp
	23, // 14: rotangapi.ShiftEntry.end:type_name -> google.protobuf.Timestamp
	19, // 15: rotangapi.RotationMembersResponse.members:type_name -> rotangapi.MemberInfo
	11, // 16: rotangapi.MemberInfo.member:type_name -> rotangapi.OnCaller
	10, // 17: rotangapi.MemberInfo.oncall_shifts:type_name -> rotangapi.ShiftEntry
	20, // 18: rotangapi.MemberInfo.ooo:type_name -> rotangapi.OOO
	23, // 19: rotangapi.OOO.start:type_name -> google.protobuf.Timestamp
	23, // 20: rotangapi.OOO.end:type_name -> google.protobuf.Timestamp
	0,  // 21: rotangapi.OncallInfo.Oncall:input_type -> rotangapi.OncallRequest
	2,  // 22: rotangapi.OncallInfo.ListRotations:input_type -> rotangapi.ListRotationsRequest
	4,  // 23: rotangapi.OncallInfo.Shifts:input_type -> rotangapi.ShiftsRequest
	6,  // 24: rotangapi.OncallInfo.MigrationInfo:input_type -> rotangapi.MigrationInfoRequest
	13, // 25: rotangapi.RotationAdmin.CreateExternal:input_type -> rotangapi.CreateExternalRequest
	15, // 26: rotangapi.RotationAdmin.DeleteExternal:input_type -> rotangapi.DeleteExternalRequest
	17, // 27: rotangapi.MemberAdmin.RotationMembers:input_type -> rotangapi.RotationMembersRequest
	21, // 28: rotangapi.MemberAdmin.MakeAllMembersOwners:input_type -> rotangapi.MakeAllMembersOwnersRequest
	1,  // 29: rotangapi.OncallInfo.Oncall:output_type -> rotangapi.OncallResponse
	3,  // 30: rotangapi.OncallInfo.ListRotations:output_type -> rotangapi.ListRotationsResponse
	5,  // 31: rotangapi.OncallInfo.Shifts:output_type -> rotangapi.ShiftsResponse
	7,  // 32: rotangapi.OncallInfo.MigrationInfo:output_type -> rotangapi.MigrationInfoResponse
	14, // 33: rotangapi.RotationAdmin.CreateExternal:output_type -> rotangapi.CreateExternalResponse
	16, // 34: rotangapi.RotationAdmin.DeleteExternal:output_type -> rotangapi.DeleteExternalResponse
	18, // 35: rotangapi.MemberAdmin.RotationMembers:output_type -> rotangapi.RotationMembersResponse
	22, // 36: rotangapi.MemberAdmin.MakeAllMembersOwners:output_type -> rotangapi.MakeAllMembersOwnersResponse
	29, // [29:37] is the sub-list for method output_type
	21, // [21:29] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_init() }
func file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_init() {
	if File_infra_appengine_rotang_proto_rotangapi_rotangapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OncallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OncallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRotationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRotationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShiftsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShiftsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TZGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShiftConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShiftEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnCaller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotationMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotationMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OOO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeAllMembersOwnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeAllMembersOwnersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_goTypes,
		DependencyIndexes: file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_depIdxs,
		MessageInfos:      file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_msgTypes,
	}.Build()
	File_infra_appengine_rotang_proto_rotangapi_rotangapi_proto = out.File
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_rawDesc = nil
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_goTypes = nil
	file_infra_appengine_rotang_proto_rotangapi_rotangapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OncallInfoClient is the client API for OncallInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OncallInfoClient interface {
	// Oncall can be used to get the current oncaller(s) for the
	// provided rotation.
	Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error)
	// ListRotations lists all configured rotations.
	ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error)
	// Shifts returns ShiftEntries for a specific time range.
	// Leaving times empty returns all shifts.
	Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error)
	// MigrationInfo returns ShiftEntries and members together with
	// relevant rotation configuration.
	MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error)
}
type oncallInfoPRPCClient struct {
	client *prpc.Client
}

func NewOncallInfoPRPCClient(client *prpc.Client) OncallInfoClient {
	return &oncallInfoPRPCClient{client}
}

func (c *oncallInfoPRPCClient) Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error) {
	out := new(OncallResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "Oncall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error) {
	out := new(ListRotationsResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "ListRotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error) {
	out := new(ShiftsResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "Shifts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error) {
	out := new(MigrationInfoResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "MigrationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type oncallInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewOncallInfoClient(cc grpc.ClientConnInterface) OncallInfoClient {
	return &oncallInfoClient{cc}
}

func (c *oncallInfoClient) Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error) {
	out := new(OncallResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/Oncall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error) {
	out := new(ListRotationsResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/ListRotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error) {
	out := new(ShiftsResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/Shifts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error) {
	out := new(MigrationInfoResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/MigrationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OncallInfoServer is the server API for OncallInfo service.
type OncallInfoServer interface {
	// Oncall can be used to get the current oncaller(s) for the
	// provided rotation.
	Oncall(context.Context, *OncallRequest) (*OncallResponse, error)
	// ListRotations lists all configured rotations.
	ListRotations(context.Context, *ListRotationsRequest) (*ListRotationsResponse, error)
	// Shifts returns ShiftEntries for a specific time range.
	// Leaving times empty returns all shifts.
	Shifts(context.Context, *ShiftsRequest) (*ShiftsResponse, error)
	// MigrationInfo returns ShiftEntries and members together with
	// relevant rotation configuration.
	MigrationInfo(context.Context, *MigrationInfoRequest) (*MigrationInfoResponse, error)
}

// UnimplementedOncallInfoServer can be embedded to have forward compatible implementations.
type UnimplementedOncallInfoServer struct {
}

func (*UnimplementedOncallInfoServer) Oncall(context.Context, *OncallRequest) (*OncallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oncall not implemented")
}
func (*UnimplementedOncallInfoServer) ListRotations(context.Context, *ListRotationsRequest) (*ListRotationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRotations not implemented")
}
func (*UnimplementedOncallInfoServer) Shifts(context.Context, *ShiftsRequest) (*ShiftsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shifts not implemented")
}
func (*UnimplementedOncallInfoServer) MigrationInfo(context.Context, *MigrationInfoRequest) (*MigrationInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrationInfo not implemented")
}

func RegisterOncallInfoServer(s prpc.Registrar, srv OncallInfoServer) {
	s.RegisterService(&_OncallInfo_serviceDesc, srv)
}

func _OncallInfo_Oncall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OncallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).Oncall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/Oncall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).Oncall(ctx, req.(*OncallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_ListRotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRotationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).ListRotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/ListRotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).ListRotations(ctx, req.(*ListRotationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_Shifts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShiftsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).Shifts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/Shifts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).Shifts(ctx, req.(*ShiftsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_MigrationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrationInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).MigrationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/MigrationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).MigrationInfo(ctx, req.(*MigrationInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OncallInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.OncallInfo",
	HandlerType: (*OncallInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Oncall",
			Handler:    _OncallInfo_Oncall_Handler,
		},
		{
			MethodName: "ListRotations",
			Handler:    _OncallInfo_ListRotations_Handler,
		},
		{
			MethodName: "Shifts",
			Handler:    _OncallInfo_Shifts_Handler,
		},
		{
			MethodName: "MigrationInfo",
			Handler:    _OncallInfo_MigrationInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}

// RotationAdminClient is the client API for RotationAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RotationAdminClient interface {
	// CreateExternal creates a new external rotation.
	// An external rotation scrapes a calendar to populate it's shifts.
	CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error)
	// DeleteExternal deletes an existing external rotation.
	DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error)
}
type rotationAdminPRPCClient struct {
	client *prpc.Client
}

func NewRotationAdminPRPCClient(client *prpc.Client) RotationAdminClient {
	return &rotationAdminPRPCClient{client}
}

func (c *rotationAdminPRPCClient) CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error) {
	out := new(CreateExternalResponse)
	err := c.client.Call(ctx, "rotangapi.RotationAdmin", "CreateExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationAdminPRPCClient) DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error) {
	out := new(DeleteExternalResponse)
	err := c.client.Call(ctx, "rotangapi.RotationAdmin", "DeleteExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type rotationAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewRotationAdminClient(cc grpc.ClientConnInterface) RotationAdminClient {
	return &rotationAdminClient{cc}
}

func (c *rotationAdminClient) CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error) {
	out := new(CreateExternalResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.RotationAdmin/CreateExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationAdminClient) DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error) {
	out := new(DeleteExternalResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.RotationAdmin/DeleteExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RotationAdminServer is the server API for RotationAdmin service.
type RotationAdminServer interface {
	// CreateExternal creates a new external rotation.
	// An external rotation scrapes a calendar to populate it's shifts.
	CreateExternal(context.Context, *CreateExternalRequest) (*CreateExternalResponse, error)
	// DeleteExternal deletes an existing external rotation.
	DeleteExternal(context.Context, *DeleteExternalRequest) (*DeleteExternalResponse, error)
}

// UnimplementedRotationAdminServer can be embedded to have forward compatible implementations.
type UnimplementedRotationAdminServer struct {
}

func (*UnimplementedRotationAdminServer) CreateExternal(context.Context, *CreateExternalRequest) (*CreateExternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExternal not implemented")
}
func (*UnimplementedRotationAdminServer) DeleteExternal(context.Context, *DeleteExternalRequest) (*DeleteExternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExternal not implemented")
}

func RegisterRotationAdminServer(s prpc.Registrar, srv RotationAdminServer) {
	s.RegisterService(&_RotationAdmin_serviceDesc, srv)
}

func _RotationAdmin_CreateExternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationAdminServer).CreateExternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.RotationAdmin/CreateExternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationAdminServer).CreateExternal(ctx, req.(*CreateExternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationAdmin_DeleteExternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationAdminServer).DeleteExternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.RotationAdmin/DeleteExternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationAdminServer).DeleteExternal(ctx, req.(*DeleteExternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RotationAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.RotationAdmin",
	HandlerType: (*RotationAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExternal",
			Handler:    _RotationAdmin_CreateExternal_Handler,
		},
		{
			MethodName: "DeleteExternal",
			Handler:    _RotationAdmin_DeleteExternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}

// MemberAdminClient is the client API for MemberAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberAdminClient interface {
	// RotationMembers returns the members of a rotation together with when they were last OnCall and OOO information.
	// Owner permissions for the rotation is required.
	RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error)
	// MakeAllMembersOwners makes all rotation members part of the rotation Owners.
	// In cases where the caller is an owner of a rotation but not a member the caller will be added
	// to the owners along with all the members.
	MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error)
}
type memberAdminPRPCClient struct {
	client *prpc.Client
}

func NewMemberAdminPRPCClient(client *prpc.Client) MemberAdminClient {
	return &memberAdminPRPCClient{client}
}

func (c *memberAdminPRPCClient) RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error) {
	out := new(RotationMembersResponse)
	err := c.client.Call(ctx, "rotangapi.MemberAdmin", "RotationMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAdminPRPCClient) MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error) {
	out := new(MakeAllMembersOwnersResponse)
	err := c.client.Call(ctx, "rotangapi.MemberAdmin", "MakeAllMembersOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type memberAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewMemberAdminClient(cc grpc.ClientConnInterface) MemberAdminClient {
	return &memberAdminClient{cc}
}

func (c *memberAdminClient) RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error) {
	out := new(RotationMembersResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.MemberAdmin/RotationMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAdminClient) MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error) {
	out := new(MakeAllMembersOwnersResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.MemberAdmin/MakeAllMembersOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberAdminServer is the server API for MemberAdmin service.
type MemberAdminServer interface {
	// RotationMembers returns the members of a rotation together with when they were last OnCall and OOO information.
	// Owner permissions for the rotation is required.
	RotationMembers(context.Context, *RotationMembersRequest) (*RotationMembersResponse, error)
	// MakeAllMembersOwners makes all rotation members part of the rotation Owners.
	// In cases where the caller is an owner of a rotation but not a member the caller will be added
	// to the owners along with all the members.
	MakeAllMembersOwners(context.Context, *MakeAllMembersOwnersRequest) (*MakeAllMembersOwnersResponse, error)
}

// UnimplementedMemberAdminServer can be embedded to have forward compatible implementations.
type UnimplementedMemberAdminServer struct {
}

func (*UnimplementedMemberAdminServer) RotationMembers(context.Context, *RotationMembersRequest) (*RotationMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RotationMembers not implemented")
}
func (*UnimplementedMemberAdminServer) MakeAllMembersOwners(context.Context, *MakeAllMembersOwnersRequest) (*MakeAllMembersOwnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeAllMembersOwners not implemented")
}

func RegisterMemberAdminServer(s prpc.Registrar, srv MemberAdminServer) {
	s.RegisterService(&_MemberAdmin_serviceDesc, srv)
}

func _MemberAdmin_RotationMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RotationMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAdminServer).RotationMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.MemberAdmin/RotationMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAdminServer).RotationMembers(ctx, req.(*RotationMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAdmin_MakeAllMembersOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeAllMembersOwnersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAdminServer).MakeAllMembersOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.MemberAdmin/MakeAllMembersOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAdminServer).MakeAllMembersOwners(ctx, req.(*MakeAllMembersOwnersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.MemberAdmin",
	HandlerType: (*MemberAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RotationMembers",
			Handler:    _MemberAdmin_RotationMembers_Handler,
		},
		{
			MethodName: "MakeAllMembersOwners",
			Handler:    _MemberAdmin_MakeAllMembersOwners_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}
