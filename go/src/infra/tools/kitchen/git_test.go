// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package main

import (
	"io/ioutil"
	"os"
	"path/filepath"
	"testing"

	. "github.com/smartystreets/goconvey/convey"
)

func TestGitConfig(t *testing.T) {
	t.Parallel()

	Convey("Works", t, func() {
		tmp, err := ioutil.TempDir("", "")
		So(err, ShouldBeNil)
		defer os.RemoveAll(tmp)

		gen := func(name string, cfg gitConfig) string {
			So(cfg.Write(filepath.Join(tmp, name)), ShouldBeNil)
			body, err := ioutil.ReadFile(filepath.Join(tmp, name))
			So(err, ShouldBeNil)
			return string(body)
		}

		cfg := gitConfig{
			IsWindows:           false,
			UserEmail:           "email@example.com",
			UserName:            "name",
			UseCredentialHelper: true,
			KnownGerritHosts:    []string{"host-a", "host-b"},
		}

		So(gen("unix", cfg), ShouldEqual, `# Autogenerated by Kitchen.

[user]
  email = email@example.com
  name = name

[core]
  deltaBaseCacheLimit = 2g

[pack]
  packSizeLimit = 2g

[gc]
  autodetach = false

[credential]
  helper = luci

[url "https://host-a/a/"]
  insteadOf = https://host-a/a/
  insteadOf = https://host-a/

[url "https://host-b/a/"]
  insteadOf = https://host-b/a/
  insteadOf = https://host-b/
`)

		cfg.IsWindows = true
		So(gen("win", cfg), ShouldEqual, `# Autogenerated by Kitchen.

[user]
  email = email@example.com
  name = name

[core]
  deltaBaseCacheLimit = 2g
  fscache = true
  symlinks = false
  autocrlf = false
  filemode = false

[pack]
  packSizeLimit = 2g

[http]
  # This is path inside mingw64 installation, bundled with Git For Windows.
  sslCAinfo = /ssl/certs/ca-bundle.crt

[diff "astextplain"]
  textconv = astextplain

[gc]
  autodetach = false

[credential]
  helper = luci

[url "https://host-a/a/"]
  insteadOf = https://host-a/a/
  insteadOf = https://host-a/

[url "https://host-b/a/"]
  insteadOf = https://host-b/a/
  insteadOf = https://host-b/
`)
	})
}
